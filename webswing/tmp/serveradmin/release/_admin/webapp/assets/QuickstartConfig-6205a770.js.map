{"version":3,"file":"QuickstartConfig-6205a770.js","sources":["../../src/assets/images/logo_java.png","../../src/assets/images/logo_applet.png","../../src/assets/images/logo_netbeans.png","../../src/assets/images/feedback/happy.png","../../src/assets/images/feedback/thinking.png","../../src/assets/images/feedback/sad.png","../../src/assets/images/feedback/disappointed.png","../../src/views/Applications/Partials/QuickstartConfig.tsx"],"sourcesContent":["export default \"__VITE_ASSET__a33d8892__\"","export default \"__VITE_ASSET__8a0c98a5__\"","export default \"__VITE_ASSET__6858a199__\"","export default \"__VITE_ASSET__a8ec3f47__\"","export default \"__VITE_ASSET__b938f69a__\"","export default \"__VITE_ASSET__d33f73d2__\"","export default \"__VITE_ASSET__e2fe360d__\"","import React, { useEffect, useState } from \"react\";\nimport {useStore} from '@/stores';\nimport cx from 'classnames'\nimport { Button, Heading, showToastOk } from '@/components';\nimport css from './QuickstartConfig.module.scss';\nimport logo_java from '@/assets/images/logo_java.png';\nimport logo_applet from '@/assets/images/logo_applet.png';\nimport logo_netbeans from '@/assets/images/logo_netbeans.png';\nimport happy from '@/assets/images/feedback/happy.png';\nimport thinking from '@/assets/images/feedback/thinking.png';\nimport sad from '@/assets/images/feedback/sad.png';\nimport disappointed from '@/assets/images/feedback/disappointed.png';\nimport { observer } from \"mobx-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AccessService } from \"@/services\";\nimport { ApiServerUrl, convertToSlug, getAuthenticationHeaders, quickStartApi, useInterval, useTimer } from \"@/utils\";\nimport { QuickStart, QuickStartFile, NameValue } from \"../../../gen\";\nimport { useLocation } from 'react-router-dom'\n\ninterface IQuickstartConfig {\n  standalone?: boolean\n}\n\ntype AppletParam = {\n  name: string | null | undefined;\n  value: string | null | undefined;\n}\n\nexport const QuickstartConfig = observer(({ standalone }: IQuickstartConfig) => {\n  const { globalStore } = useStore();\n  const { t } = useTranslation();\n  const routerLoc = useLocation();\n  const isMounted = React.useRef(true);\n  const [appType, setAppType] = useState<'swing' | 'applet' | 'netbeans' | null>(null);\n  const [mainClass, setMainClass] = useState<string>(\"\");\n  const [vmArgs, setVmArgs] = useState<string>(\"\");\n  const [mainParams, setMainParams] = useState<string>(\"\");\n  const [appletParams, setAppletParams] = useState<AppletParam[]>([{name: \"\", value: \"\"}]);\n  const [sysProps, setSysProps] = useState<string>(\"\");\n  const [javaFX, setJavaFX] = useState<boolean>(false);\n  const [customJava, setCustomJava] = useState<boolean>(false);\n  const [customJavaVersion, setCustomJavaVersion] = useState<string>(\"\");\n  const [customJavaExecutable, setCustomJavaExecutable] = useState<string>(\"\");\n  const [appName, setAppName] = useState<string>(\"\");\n  const [appPath, setAppPath] = useState<string>(\"\");\n  const [isWizard, setWizard] = useState(true);\n  const [isConfiguring, setConfiguring] = useState(false);\n  const [isDone, setDone] = useState(false);\n  const [isError, setError] = useState(false);\n  const [quickStartInfo, setQuickStartInfo] = useState<QuickStart | null>(null);\n  const [createdAppPath, setCreatedAppPath] = useState<string | null>(null);\n  const [feedbackUrl, setFeedbackUrl] = useState<string | null>(null);\n\n  const feedbackItems = [\n    {option: t('quickstart.feedback.option.1'), src: happy},\n    {option: t('quickstart.feedback.option.2'), src: thinking},\n    {option: t('quickstart.feedback.option.3'), src: sad},\n    {option: t('quickstart.feedback.option.4'), src: disappointed}\n  ];\n\n  useEffect(() => {\n    isMounted.current = true;\n    resetState();\n    reloadInfo();\n    return () => {\n      isMounted.current = false;\n    };\n  }, [routerLoc.state]);\n  useInterval(() => {\n    reloadInfo();\n  }, 3000);\n  \n  const resetState = () => {\n    setAppType(null);\n    setMainClass(\"\");\n    setVmArgs(\"\");\n    setMainParams(\"\");\n    setAppletParams([{name: \"\", value: \"\"}]);\n    setSysProps(\"\");\n    setJavaFX(false);\n    setCustomJava(false);\n    setCustomJavaVersion(\"\");\n    setCustomJavaExecutable(\"\");\n    setAppName(\"\");\n    setAppPath(\"\");\n    setWizard(true);\n    setConfiguring(false);\n    setDone(false);\n    setError(false);\n    setQuickStartInfo(null);\n    setCreatedAppPath(null);\n    setFeedbackUrl(null);\n  };\n\n  const startAgain = () => {\n    resetState();\n    reloadInfo();\n  };\n\n  const reloadInfo = async () => {\n    try {\n      const appApi = quickStartApi(getAuthenticationHeaders(await getAccessToken()));\n      const data =  await appApi.getQuickStart();\n      if (data && isMounted.current) {\n        setQuickStartInfo(data);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const getAccessToken = async () => {\n    return await AccessService.getAccessToken();\n  };\n  \n  const selectApp = (type: 'swing' | 'applet' | 'netbeans') => {\n    setAppType(type);\n  };\n\n  const mainClassInputChanged = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setMainClass(e.currentTarget.value);\n    trySetAppNameAndPath(e.currentTarget.value);\n  };\n\n  const trySetAppNameAndPath = (mainClassStr: string) => {\n    if (mainClassStr != null && mainClassStr.length > 0) {\n      const className = mainClassStr.substring(mainClassStr.lastIndexOf('.') + 1);\n      setAppName(className);\n      setAppPath(\"/\" + convertToSlug(className));\n    }\n  };\n\n  const selectMainClass = (mainClassStr: string) => {\n    setMainClass(mainClassStr);\n    trySetAppNameAndPath(mainClassStr);\n  };\n  \n  const copyFolderPath = () => {\n    if (navigator.clipboard && quickStartInfo && quickStartInfo.folder) {\n      navigator.clipboard.writeText(quickStartInfo.folder!);\n      showToastOk(t('quickstart.copied'));\n    }\n  };\n  \n  const updateParamName = (text: string, index: number) => {\n    let ap = appletParams.slice();\n    ap[index].name = text;\n    if (ap.length == index + 1) {\n      ap = [...ap, {name: \"\", value: \"\"}];\n    }\n    setAppletParams(ap);\n  };\n  \n  const updateParamValue = (text: string, index: number) => {\n    let ap = appletParams.slice();\n    ap[index].value = text;\n    if (ap.length == index + 1) {\n      ap = [...ap, {name: \"\", value: \"\"}];\n    }\n    setAppletParams(ap);\n  };\n\n  const selectCustomJava = () => {\n    setCustomJava(true);\n    if (quickStartInfo != null) {\n      let ver = \"1.8\";\n      if (quickStartInfo.javaVersion?.startsWith(\"11\")) {\n        ver = \"11\";\n      } else if (quickStartInfo.javaVersion?.startsWith(\"17\")) {\n        ver = \"17\";\n      }\n      setCustomJavaVersion(ver);\n      setCustomJavaExecutable(quickStartInfo.javaExecutable!);\n    }\n  };\n\n  const configureApplication = async () => {\n    setConfiguring(true);\n    setWizard(false);\n\n    const jv = customJavaVersion != \"\" ? customJavaVersion : quickStartInfo?.javaVersion;\n    const je = customJavaExecutable != \"\" ? customJavaExecutable : quickStartInfo?.javaExecutable;\n\n    let ap: NameValue[] | undefined;\n    if (appType == \"applet\") {\n      ap = [];\n      for (const param of appletParams) {\n        if (param.name != null && param.name.length > 0 && param.value != null && param.value.length > 0) {\n          ap.push(param as NameValue);\n        }\n      }\n    }\n\n    const data = {\n      appName,\n      appPath,\n      appType: appType as string,\n      mainClass,\n      vmArgs,\n      mainParams,\n      appletParams: ap,\n      sysProps,\n      javaFX,\n      customJavaVersion: jv,\n      customJavaExecutable: je\n    };\n\n    try {\n      const appApi = quickStartApi(getAuthenticationHeaders(await getAccessToken()));\n      const createdPath = await appApi.quickStartConfig({quickStartConfig: data});\n      setCreatedAppPath(createdPath);\n      \n      if (createdPath == null || createdPath.length == 0) {\n        setDone(false);\n        setError(true);\n      } else {\n        if (standalone) {\n          const fUrl = await appApi.getFeedbackUrl();\n          setFeedbackUrl(fUrl != null && fUrl.length > 0 ? fUrl : null);\n        }\n  \n        setConfiguring(false);\n        setDone(true);\n      }\n    } catch (e) {\n      setConfiguring(false);\n      setError(true);\n      console.error(e);\n    }\n  };\n\n  const getAppUrl = () => {\n    return globalStore.serverUrl + createdAppPath;\n  };\n  \n  const getAppConfigUrl = () => {\n    return ApiServerUrl + \"/apps\" + createdAppPath;\n  };\n  \n  const openFeedback = () => {\n    if (feedbackUrl == null) {\n      return;\n    }\n    window.open(feedbackUrl, \"_blank\");\n  };\n\n  return (\n    <div className={css.qsWrapper}>\n      {\n        isWizard &&\n        <>\n          <div className={css.wizardStep}>\n            <p dangerouslySetInnerHTML={{ __html: t('quickstart.subtitle') }} />\n          </div>\n        \n          {\n            appType == null &&\n            <div className={css.wizardStep}>\n              <p>{t('quickstart.chooseApp')}</p>\n\n              <div className={css.appChooser}>\n                <div className={css.app} onClick={() => selectApp('swing')}>\n                  <img src={logo_java} />\n                  <span>Swing/JavaFX</span>\n                </div>\n                <div className={css.app} onClick={() => selectApp('applet')}>\n                  <img src={logo_applet} />\n                  <span>Applet</span>\n                </div>\n                <div className={css.app} onClick={() => selectApp('netbeans')}>\n                  <img src={logo_netbeans} />\n                  <span>NetBeans</span>\n                </div>\n              </div>\n            </div>\n          }\n\n          {\n            appType == 'netbeans' && \n            <>\n              <div className={css.wizardStep}>\n                <div className={css.appTitle}>\n                  <img src={logo_netbeans} />\n                  <span>{t('quickstart.appTitle.netbeans')}</span>\n                  <a className={css.jsLinkSmall} onClick={() => { startAgain(); }}>{t('quickstart.startAgain')}</a>\n                </div>\n              </div>\n\n              <div className={css.wizardStep}>\n                <p dangerouslySetInnerHTML={{ __html: t('quickstart.chooseApp.netbeans') }} />\n              </div>\n            </>\n          }\n\n          {\n            appType == 'swing' && \n            <div className={css.wizardStep}>\n              <div className={css.appTitle}>\n                <img src={logo_java} />\n                <span>{t('quickstart.appTitle.swing')}</span>\n                <a className={css.jsLinkSmall} onClick={() => { startAgain(); }}>{t('quickstart.startAgain')}</a>\n              </div>\n            </div>\n          }\n\n          {\n            appType == 'applet' && \n            <div className={css.wizardStep}>\n              <div className={css.appTitle}>\n                <img src={logo_applet} />\n                <span>{t('quickstart.appTitle.applet')}</span>\n                <a className={css.jsLinkSmall} onClick={() => { startAgain(); }}>{t('quickstart.startAgain')}</a>\n              </div>\n            </div>\n          }\n\n          {\n            appType != null && quickStartInfo == null &&\n            <div className={css.wizardStep}>\n              <p className={css.error}>{t('quickstart.infoError')}</p>\n            </div>\n          }\n\n          {\n            (appType == 'swing' || appType == 'applet') && quickStartInfo != null &&\n            <>\n              {\n                <div className={css.wizardStep}>\n                  <p className={css.stepTitle}>{t('quickstart.step1.title')}</p>\n                  <br />\n                  <div className={css.textBox} onClick={() => { copyFolderPath() }}>\n                    {quickStartInfo.folder}\n                  </div>\n                  <small>{t('quickstart.step1.note')}</small>\n                </div>\n              }\n\n              {\n                quickStartInfo.anyFiles != null &&\n                <div className={css.wizardStep}>\n                  {/* // applet class vs. main class */}\n\n                  <p className={css.stepTitle}>{t(appType == 'applet' ? 'quickstart.step2.title.applet' : 'quickstart.step2.title')}</p>\n                  \n                  {\n                    quickStartInfo.files != null && quickStartInfo.files.length > 0 &&\n                    <div className={css.stepDiv}>\n                      {quickStartInfo.files.map((file: QuickStartFile) => (\n                        <div className={css.fileItem} key={file.name} onClick={() => { selectMainClass(file.mainClass!); }}>\n                          <span className={css.mainClass}>{file.mainClass}</span> <span className={css.jarName}>({file.name})</span>\n                        </div>\n                      ))}\n                    </div>\n                  }\n                  \n                  {\n                    (quickStartInfo.files == null || quickStartInfo.files.length == 0) &&\n                    <div className={css.stepDiv}>\n                      <span>{t('quickstart.step2.noMainClasses')}</span>\n                    </div>\n                  }\n                  \n                  <div className={css.stepRowControl}>\n                    <span>{t(appType == 'applet' ? 'quickstart.step2.appletClass' : 'quickstart.step2.mainClass')}</span>\n                    <input value={mainClass} className={css.fullInput} type=\"text\" placeholder={t('quickstart.step2.mainClass.placeholder')} onChange={mainClassInputChanged} />\n                  </div>\n                </div>\n              }\n\n              {\n                mainClass != \"\" &&\n                <div className={css.wizardStep}>\n                  <p className={css.stepTitle}>{t(appType == 'applet' ? 'quickstart.step3.title.applet' : 'quickstart.step3.title')}</p>\n\n                  <div className={css.stepRowControl}>\n                    <span>{t('quickstart.step3.vmArgs')}</span>\n                    <input value={vmArgs} className={css.flexGrow} type=\"text\" placeholder={t('quickstart.step3.vmArgs.placeholder')} onChange={(e) => { setVmArgs(e.currentTarget.value); }} />\n                  </div>\n\n                  {appType != 'applet' &&\n                    <div className={css.stepRowControl}>\n                      <span>{t('quickstart.step3.mainParams')}</span>\n                      <input value={mainParams} className={css.flexGrow} type=\"text\" placeholder={t('quickstart.step3.mainParams.placeholder')} onChange={(e) => { setMainParams(e.currentTarget.value); }} />\n                    </div>\n                  }\n\n                  {appType == 'applet' &&\n                    <div className={cx(css.stepRowControl, css.paramsWrapper)}>\n                      <span className={css.paramsTitle}>{t('quickstart.step3.appletParams')}</span>\n                      <div className={css.paramsRowWrapper}>\n                        {appletParams.map((param: AppletParam, index: number) => (\n                          <div key={index} className={css.paramsRow}>\n                            <input value={param.name || \"\"} className={css.flexGrow} type=\"text\" placeholder={t('quickstart.step3.appletParams.name.placeholder')} \n                              onChange={(e) => { updateParamName(e.currentTarget.value, index) }} />\n                            <input value={param.value || \"\"} className={css.flexGrow} type=\"text\" placeholder={t('quickstart.step3.appletParams.value.placeholder')}\n                              onChange={(e) => { updateParamValue(e.currentTarget.value, index) }} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  }\n\n                  <div className={css.stepRowControl}>\n                    <span>{t('quickstart.step3.sysProps')}</span>\n                    <input value={sysProps} className={css.flexGrow} type=\"text\" placeholder={t('quickstart.step3.sysProps.placeholder')} onChange={(e) => { setSysProps(e.currentTarget.value); }} />\n                  </div>\n\n                  <div className={css.stepRowControl}>\n                    <label htmlFor=\"javaFXCheck\" className={css.pointer}>{t('quickstart.step3.javaFX')}</label>\n                    <input id=\"javaFXCheck\" checked={javaFX} type=\"checkbox\" className={css.pointer} onChange={(e) => { setJavaFX(e.currentTarget.checked); }} />\n                  </div>\n\n                  <div className={css.stepDiv}>\n                    {\n                      !customJava &&\n                      <>\n                        <p dangerouslySetInnerHTML={{ __html: t('quickstart.step3.javaVersion', {javaVersion: \"<b>\" + quickStartInfo.javaVersion + \"</b>\"}) }} />\n                        <p dangerouslySetInnerHTML={{ __html: t('quickstart.step3.javaExecutable', {javaExecutable: \"<b>\" + quickStartInfo.javaExecutable + \"</b>\"}) }} />\n                        <a className={css.jsLink} onClick={() => { selectCustomJava(); }}>{t('quickstart.step3.differentJava')}</a>\n                      </>\n                    }\n                    {\n                      customJava &&\n                      <>\n                        <div className={css.stepRowControl}>\n                          <span>{t('quickstart.step3.javaVersion')}</span>\n                          <select value={customJavaVersion} onChange={(e) => { setCustomJavaVersion(e.currentTarget.value); }}>\n                            <option value=\"1.8\">1.8</option>\n                            <option value=\"11\">11</option>\n                            <option value=\"17\">17</option>\n                          </select>\n                        </div>\n                        <div className={css.stepRowControl}>\n                          <span>{t('quickstart.step3.javaExecutable')}</span>\n                          <input value={customJavaExecutable} className={css.flexGrow} type=\"text\" placeholder={t('quickstart.step3.javaExecutable.placeholder')} onChange={(e) => { setCustomJavaExecutable(e.currentTarget.value); }} />\n                        </div>\n                      </>\n                    }\n                  </div>\n                </div>\n              }\n\n              {\n                mainClass != \"\" &&\n                <div className={css.wizardStep}>\n                  <p className={css.stepTitle}>{t('quickstart.step4.title')}</p>\n\n                  <div className={css.stepRowControl}>\n                    <span>{t('quickstart.step4.appName')}</span>\n                    <input value={appName} className={css.flexGrow} type=\"text\" placeholder={t('quickstart.step4.appName.placeholder')} onChange={(e) => { setAppName(e.currentTarget.value); }} />\n                  </div>\n                  <div className={css.stepRowControl}>\n                    <span>{t('quickstart.step4.appPath')}</span>\n                    <input value={appPath} className={css.flexGrow} type=\"text\" placeholder={t('quickstart.step4.appPath.placeholder')} onChange={(e) => { setAppPath(e.currentTarget.value); }} />\n                  </div>\n                </div>\n              }\n\n              {\n                appName != \"\" && appPath != \"\" && mainClass != \"\" &&\n                <div className={css.alignCenter}>\n                  <div className={css.wizardStep}>\n                    <Button color={'blue'} label={t('quickstart.button.setup')} onClick={() => configureApplication()} />\n                  </div>\n                </div>\n              }\n            </>\n          }\n        </>\n      }\n\n      {\n        isConfiguring &&\n        <div className={css.wizardStep}>\n          <div className={css.alignCenter}>\n            <p className={css.stepTitle}>{t('quickstart.configuring.title')}</p>\n          </div>\n        </div>\n      }\n\n      {\n        isError &&\n        <div className={css.wizardStep}>\n          <div className={css.alignCenter}>\n            <p className={css.stepTitle}>{t('quickstart.error')}</p>\n          </div>\n        </div>\n      }\n\n      {\n        isDone &&\n        <div className={css.wizardStep}>\n          <div className={css.alignCenter}>\n            <p className={css.stepTitle}>{t('quickstart.done.title')}</p>\n\n            <div className={css.stepDiv}>\n              <Button color={'blue'} label={t('quickstart.button.open')} onClick={() => { (document.querySelector('#openAppLink')! as HTMLAnchorElement).click(); }} />\n              <a id=\"openAppLink\" href={getAppUrl()} className={css.jsLinkHidden} target=\"_blank\"></a>\n            </div>\n\n            <div className={css.stepDiv}>\n              <p dangerouslySetInnerHTML={{ __html: t('quickstart.done.config', {url: getAppConfigUrl(), target: standalone ? '_blank' : '' }) }} />\n            </div>\n\n            {\n              standalone && feedbackUrl != null &&\n              <div className={css.feedbackDiv} onClick={() => openFeedback()}>\n                <div>\n                  <Heading title={t('quickstart.feedback.title')} />\n                </div>\n                <div className={css.feedbackRating}>\n                  {feedbackItems.map((i, index) => (\n                    <div key={index} className={css.box}>\n                        <img className={css.icon} src={i.src} alt={i.option} />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      }\n    </div>\n  );\n});"],"names":["logo_java","logo_applet","logo_netbeans","happy","thinking","sad","disappointed","QuickstartConfig","observer","standalone","globalStore","useStore","useTranslation","routerLoc","useLocation","isMounted","React","appType","setAppType","useState","mainClass","setMainClass","vmArgs","setVmArgs","mainParams","setMainParams","appletParams","setAppletParams","sysProps","setSysProps","javaFX","setJavaFX","customJava","setCustomJava","customJavaVersion","setCustomJavaVersion","customJavaExecutable","setCustomJavaExecutable","appName","setAppName","appPath","setAppPath","isWizard","setWizard","isConfiguring","setConfiguring","isDone","setDone","isError","setError","quickStartInfo","setQuickStartInfo","createdAppPath","setCreatedAppPath","feedbackUrl","setFeedbackUrl","feedbackItems","useEffect","resetState","reloadInfo","useInterval","startAgain","data","quickStartApi","getAuthenticationHeaders","getAccessToken","e","AccessService","selectApp","type","mainClassInputChanged","trySetAppNameAndPath","mainClassStr","className","convertToSlug","selectMainClass","copyFolderPath","showToastOk","updateParamName","text","index","ap","updateParamValue","selectCustomJava","ver","_a","_b","configureApplication","jv","je","param","appApi","createdPath","fUrl","getAppUrl","getAppConfigUrl","ApiServerUrl","openFeedback","jsxs","css","Fragment","jsx","file","cx","Button","Heading","i"],"mappings":"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"}