{"version":3,"file":"LogsInstancesList-0c25d9ff.js","sources":["../../src/views/LogsView/LogsInstancesList.tsx"],"sourcesContent":["// .core\nimport React, {useCallback, useEffect} from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport cx from 'classnames';\n\n// components\nimport { IColumns, Icon, SearchFilter, TableVirtualized, Button, Flex, Heading } from '@/components';\n// styles\nimport css from './Logs.module.scss'\nimport cssTable from '../../components/complex/Table/Table.module.scss'\nimport { useStore } from '@/stores';\nimport { observer } from 'mobx-react';\nimport { SessionLogInfo, SwingSession } from '@/gen';\nimport { changeTitle } from '@/views/routes';\nimport { dateFormat, useRootOverflow } from '@/utils';\nimport { useTranslation } from 'react-i18next';\nimport { HighlightedText } from './partial/HighlightedText';\nimport { StatusCell } from '@/views/Sessions/partials/StatusCell';\nimport { UserCell } from '@/views/Sessions/partials/UserCell';\n\ninterface LogParamTypes {\n    app:string;\n}\ninterface ISessionLogInfo extends SessionLogInfo, SwingSession {\n}\n\nconst LogsInstancesList = observer(() => {\n    const {sessionsStore, logsStore, globalStore} = useStore()\n    const history = useHistory()\n    const {t} = useTranslation()\n    const { app} = useParams<LogParamTypes>();\n    const showInstanceLog = useCallback((params) => {\n        history.push(`/logs/session/${app}/${params.rowData.instanceId}/${encodeURIComponent(params.rowData.sessionPoolId)}`)\n    },[app, history])\n\n    useRootOverflow();\n\n    useEffect(() => {\n        globalStore.updateApp(app);\n        logsStore.loadLogsOverview(app)\n        sessionsStore.setAppPath(app);\n        sessionsStore.refresh();\n        return () => sessionsStore.clearInterval();\n    },[app]);\n\n    changeTitle(t('routes.logs')+' - ' +app);\n    \n    const running = sessionsStore.sessions.sessions;\n    const closed = sessionsStore.sessions.closedSessions;\n    \n    let sessions:SwingSession[] | undefined\n    sessions = running?.length ? [...running]: undefined\n    if(closed?.length) {\n        sessions = sessions?.length ? [...sessions, ...closed]:undefined\n    }\n    let results = logsStore.appInstanceIds.map(s => {\n        const session = sessions?.filter((session)=>session.id === s.instanceId)[0]\n        return {\n            ...s,\n            ...session\n        } as ISessionLogInfo\n    })\n\n    results = !logsStore.searchTerm\n    ? results\n    : results?.filter(item =>\n        item.instanceId?.toLowerCase().includes(logsStore.searchTerm.toLocaleLowerCase()) ||\n        item.user?.toLowerCase().includes(sessionsStore.searchTerm.toLocaleLowerCase()) ||\n        item.status?.toLowerCase().includes(sessionsStore.searchTerm.toLocaleLowerCase())\n    );\n\n    const handleSeach = (event:React.ChangeEvent<HTMLInputElement>) => {\n        logsStore.setSearchTerm(event.target.value);\n    };\n\n    return (\n        <div className={css.root}>\n            <Flex justifyContent={'space-between'} alignItems='center'>\n                <Heading variant='h2' title={t('logs.chooseAppInst')}/>\n                {!logsStore.filterToggle && <Button color='neutral' icon={'search'} onClick={()=>logsStore.setFilterToggle()} /> }\n                {\n                logsStore.filterToggle && \n                    <SearchFilter \n                        value={logsStore.searchTerm} \n                        onChange={handleSeach} \n                        onClose={()=>logsStore.setFilterToggle()}\n                    />\n                }\n            </Flex>\n            <div className={css.scrollx}>\n                <TableVirtualized\n                    collection={results}\n                    minTableWidth={1200}\n                    bLoading={logsStore.loading}\n                    rowHeight={60}\n                    threshold={500}\n                    className={css.vTable}\n                    sortBy='lastModified'\n                    sortDirection='DESC'\n                    columns={[\n                        {\n                            label:t('sessions.plural'),\n                            dataKey:'instanceId',\n                            minWidth: 386,\n                            align: 'start',\n                            bSort: true,\n                            className: css.pointer,\n                            component: (instanceId) => <div className={cx(cssTable.wCell, css.statusAlign)}><HighlightedText text={instanceId as string} /></div>\n                        },\n                        {\n                            dataKey: 'user',\n                            label: t('logs.user'),\n                            minWidth: 100,\n                            align: 'start',\n                            bSort:true,\n                            component: (user, row) => <UserCell session={row} />\n                        },\n                        {\n                            dataKey: 'status',\n                            label: t('general.status'),\n                            align: 'start',\n                            minWidth: 100,\n                            bSort:true,\n                            className: css.pointer,\n                            component: (connected,row) => <StatusCell session={row} />\n                        },\n                        {\n                            dataKey: 'startedAt',\n                            label: t('sessions.startTime'),\n                            minWidth: 135,\n                            align: 'start',\n                            bSort:true,\n                            className: css.pointer,\n                            component: (startedAt) => <div className={cx(cssTable.wCell, css.statusAlign)}>{dateFormat(Number(startedAt))}</div>\n                        },\n                        {\n                            dataKey: 'endedAt',\n                            label: t('sessions.endTime'),\n                            minWidth: 135,\n                            align: 'start',\n                            bSort:true,\n                            className: css.pointer,\n                            component: (endedAt) => <div className={cx(cssTable.wCell, css.statusAlign)}>{dateFormat(Number(endedAt))}</div>\n                        },\n                        {\n                            label:t('overview.lastModified'),\n                            dataKey:'lastModified',\n                            minWidth: 250,\n                            align: 'start',\n                            bSort: true,\n                            component: (lastModified) => <span className={css.fullWColl}>\n                                {dateFormat(Number(lastModified))}\n                                <Icon name={'arrow_forward_ios'} />\n                                </span>\n                        }\n                    ] as IColumns<ISessionLogInfo>[]} \n                    onRowClick={showInstanceLog}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default LogsInstancesList"],"names":["LogsInstancesList","observer","sessionsStore","logsStore","globalStore","useStore","history","useHistory","t","useTranslation","app","useParams","showInstanceLog","useCallback","params","useRootOverflow","useEffect","changeTitle","running","closed","sessions","results","s","session","item","_a","_b","_c","handleSeach","event","jsxs","css","Flex","jsx","Heading","Button","SearchFilter","TableVirtualized","instanceId","cx","cssTable","HighlightedText","user","row","UserCell","connected","StatusCell","startedAt","dateFormat","endedAt","lastModified","Icon"],"mappings":"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"}