{"version":3,"mappings":"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","names":["getTag","value","isSymbol","type","toKey","result","isKey","object","reIsDeepProp","reIsPlainProp","stringToPath","string","part","castPath","baseGet","path","index","length","get","defaultValue","parseObject","propPath","fallbackValue","propertiesToCheck","property","compareObject","isEqual","isFunction","func","runCallback","callback","args","toPath","basePath","getStatsDataset","stats","names","keysObj","n","item","keys","getKeys","key","entry","name","dataset1","obj","dateFormat","date","dateOptions","extractValues","config","data","field","list","map","mapKey","getAllConfigData","getSimpleConfigData","getServerStatuses","statuses","countRunning","countError","countStopped","convertToSlug","text","jsonToCssVariables","json","count","output","humanFileSize","size","i","_debounce","debounceDelay","immediate","timeout","context","sortByCol","arr","props","orders","propsArr","ordersArr","compare","b","propsIndex","prop","order","aValue","bValue","a","stackA","stackB","typeA","typeB","lengthA","isArrayA","isArrayB","keysA","keysB","escapeHtml","unsafe","LogTypes","useInterval","delay","savedCallback","useRef","useEffect","tick","id","useRootOverflow","root","Toast","jsx","ToastContainer","showToast","message","toastConfig","toast","showToastErr","showToastOk","_AccessHandlerService","__publicField","force","accessToken","params","urlParams","securityToken","realm","getSecuritySuffix","routeParam","serverUrl","ConfigService","ApiServerUrl","loginApi","handleRestError","i18n","r","AccessHandlerService","AccessService","_ConfigRestService","basicApi","getAuthenticationHeaders","e","manageConfigurationApi","manageApplicationsApi","searchSequence","sessionPoolId","ConfigRestService","_LogRestService","viewLogsApi","query","instanceId","token","LogRestService","LogsService","BASE_PATH","isBlob","BaseAPI","configuration","Configuration","url","init","fetchParams","middleware","response","middlewares","next","preMiddlewares","pre","postMiddlewares","post","body","headers","constructor","RequiredError","msg","querystring","apiKey","exists","prefix","fullKey","multiValue","singleValue","mapValues","fn","acc","JSONApiResponse","raw","transformer","jsonValue","VoidApiResponse","BlobApiResponse","TextApiResponse","VerboseModeRequestToJSON","VerboseModeRequestTypeEnum","_OverviewRestService","overviewApi","enable","promise","OverviewRestService","OverviewService","Icon","memo","className","title","color","onClick","handleClick","useCallback","classnames","css","Avatar","React","icon","label","src","shape","style","bExpanded","ref","jsxs","cx","Tooltip","animation","arrow","bUnmountOnClose","children","content","offsetX","offsetY","position","styleOverlay","styleOverlayContent","trigger","RCTooltip","Chip","bDisabled","tooltip","toggleHover","onDelete","_onClick","_onDelete","ChipContent","Coin","Badge","side","vertical","onHover","bOnBadge","classes","BadgeComponent","PermissionsStore","rootStore","runInAction","computedFn","makeAutoObservable","perm","GlobalStore","state","app","appPath","appName","copyApp","_b","_a","l","fallbackLang","err","status","which","makeLocalStorage","errorView","bool","OverviewStore","apps","sumSP","sp","view","by","term","SessionsService","spSessions","s","ConfigStore","tab","configs","identify","toJS","pTab","t","tabIndex","SessionsStore","currentId","recData","tdData","session","sessions","currentSessionIndex","visibleColumns","fileUrl","bSession","ses","sum","_c","_d","logsStore","line","amount","x","y","start","backwards","btn","logl","logs","timestamp","subject","user","secured_path","ip","detail","msgs","ActiveSessionsInfoFromJSON","ActiveSessionsInfoFromJSONTyped","ignoreDiscriminator","ApplicationInfoFromJSON","ApplicationInfoFromJSONTyped","InstanceManagerStatusFromJSON","BasicApplicationInfoFromJSON","BasicApplicationInfoFromJSONTyped","ConfigFromJSON","ConfigFromJSONTyped","MetaObjectFromJSON","ConfigToJSON","MetaObjectToJSON","IdleSessionFromJSON","IdleSessionFromJSONTyped","InstanceManagerStatusFromJSONTyped","InstanceManagerStatusStatusEnum","LogRequestToJSON","LogResponseFromJSON","LogResponseFromJSONTyped","LogsOverviewFromJSON","LogsOverviewFromJSONTyped","ServerLogInfoFromJSON","SessionPoolLogInfoFromJSON","SessionLogInfoFromJSON","MetaObjectFromJSONTyped","NameValueToJSON","OverviewFromJSON","OverviewFromJSONTyped","ServerInfoFromJSON","SessionPoolInfoFromJSON","PermissionsFromJSON","PermissionsFromJSONTyped","QuickStartFromJSON","QuickStartFromJSONTyped","QuickStartFileFromJSON","QuickStartConfigToJSON","QuickStartFileFromJSONTyped","RecordingInfoFromJSON","RecordingInfoFromJSONTyped","RefreshTokenResultFromJSON","RefreshTokenResultFromJSONTyped","ServerInfoFromJSONTyped","ServerLogInfoFromJSONTyped","SessionLogInfoFromJSONTyped","SessionPoolInfoFromJSONTyped","SessionPoolLogInfoFromJSONTyped","SessionsFromJSON","SessionsFromJSONTyped","SwingSessionFromJSON","SwingSessionFromJSONTyped","ThreadDumpInfoFromJSON","SwingSessionStatusEnum","ThreadDumpInfoFromJSONTyped","BasicApi","runtime.BaseAPI","queryParameters","headerParameters","runtime.TextApiResponse","runtime.JSONApiResponse","LoginApi","requestParameters","runtime.RequiredError","runtime.VoidApiResponse","ManageApplicationsApi","ManageConfigurationApi","ManageScalingApi","GetScalingStatsStatTypeEnum","ManageSessionsApi","OverviewApi","QuickStartApi","ViewLogsApi","runtime.BlobApiResponse","ScalingStore","ScalingService","jsOrigConfig","jsConfig","nameAr","_index","RootStore","LogsStore","store","StoreContext","createContext","StoreProvider","useStore","useContext","localKey","valueStr","autorun","HighlightedText","observer","parts","Status","dotOnly","getLabel","ButtonDefault","bLoading","iconColor","classNameLabel","hover","Spinner","ButtonGroup","buttons","ButtonUI","Button","ButtonIcon","active","badge","badgeColor","Backdrop","visible","dark","zIndex","Divider","margin","InputDefault","bAutoFocus","bClearable","bReadOnly","bRequired","bTextArea","classNameError","classNameInput","error","max","maxLength","min","minLength","placeholder","onClose","onBlur","onChange","onKeyPress","input","visiblePassword","setVisiblePassword","useState","handleToggleVisibility","prev","_onClear","event","Input","Switch","disabled","click","ev","SearchFilter","inputClassName","useTranslation","NoData","Fullscreen","Line","Logo$1","Branded","Fragment","Logo","Loader","StatusBar","loadMessage","globalStore","showErrorStatusDetailModal","setShowErrorStatusDetailModal","canShowErrorStatusDetail","showSingleErrorStatusDetail","getErrorStatusDetail","Dialog","DialogDefault","bOpen","onToggle","onConfirm","classNameContent","labelOk","labelCancel","footer","ReactDOM","DialogRP","val","prevState","classNameTrigger","modalProps","Heading","button","variant","createElement","List","threshold","onReachEnd","element","maxScrollTop","parent","collection","bstaticHeight","CellMeasurer","bVirtualized","rowHeight","rowClass","minListWidth","AutoSizer","height","width","makeWidth","ListVirtualized","row","cache","CellMeasurerCache","prevProps","bscrollToBottom","searched","scrolledtoBottom","Card","titleClassName","CardContent","Flex","alignItems","bColumn","flex","flexWrap","itemsPerRow","justifyContent","spacing","classNames","styles","SkeletonCircle","SkeletonLine","SkeletonSquare","SkeletonTable","borderRadius","items","_","SkeletonUI","child","Skeleton","PopoverComponent","inverted","open","rootRef","Popover","backdrop","darkBP","requestedWidth","passingProps","popoverPositionRef","popoverWidth","handleBlur","TableVirtualized","onFilter","sortedList","renderedRows","header","colIndex","dataKey","headerHeight","columns","sortDirection","sortBy","col","cellData","columnIndex","rowData","SortDirection","nextProps","newList","onRowClick","onRowDoubleClick","minTableWidth","rowClassName","Table","Column","Content","MenuItem","activePath","target","isActive","Link","MENU_ITEMS","RightToggleMenu","bsmall","permissionsStore","expanded","setExpanded","expandedLang","setExpandedLang","isDesktopOrLaptop","useMediaQuery","logout","handleToggleExpand","changeLang","code","lang","Header","small","setSmall","expandMenu","setExpandMenu","pathname","useLocation","getPath","handleExpandMenu","rootScrollListener","image","appIcon","CreateApp","onSubmit","appname","setAppname","apppath","setAppPath","handleEnter","submit","close","onChangeNameInput","Dropdown","setOpen","subOpen","setSubOpen","clickedOutside","setClickedOutside","dropdownRef","handleClickOutside","handleClickInside","shouldShow","isNotActive","ItemContent","Menu","history","useHistory","searchTerm","setSearchTerm","handleChange","isConfig","isLogs","isAppView","results","getAppPaths","renderThumb","finalStyle","create","duplicateApp","showCreateInput","appToCopy","showQuickstart","Scrollbars","WebswingLogoWText","LogoIcon","withLink","forceSmall","getLogoPath","fallbackPath","getLinkContent","Footer","OverviewMenu","overviewStore","LeftSideMenu","isTabletOrMobile","isOverview","_SessionsRestService","sessionId","manageSessionsApi","enabled","SessionsRestService","_ScalingRestService","scalingApi","statType","ScalingRestService","ApiContextPath","initBaseLocation","origin","contextPath","quickStartApi","GUID","S4","operation","i18next","Backend","LanguageDetector","initReactI18next","Charts","sessionsStore","tooltipStyle","timeTick","ResponsiveContainer","Chart","CartesianGrid","XAxis","YAxis","LabelFormat","Area","TooltipElipsesItem","str","bNoHightlight","cssTable","LogsTable","setColumns","auditColumns","_e","Warnings","showThreadDump","tdCollection","RecordingsTable","cols","setCols","fileName","rowItem","viewSession","startedAt","_token","downloadRecording","c","ThreadDumpsTable","viewThreadDump","reason","download","wsRefs","instance","Webswing","connectionUrl","mirrorUrl","control","wsElementRef","lastWidth","lastHeight","wsInit","canvases","canvas","rect","getWebswingApi","api","SessionTabs","setMax","wasMirrorOpen","setWasMirrorOpen","setControl","openMirrorView","isFinished","cssTab","ActionCell","kill","copyID","AppCell","useParams","now","setNow","onStop","isRecording","getRecordingTimeElapsed","delta","hours","minutes","seconds","interval","SvgWindows","React.createElement","SvgApple","SvgAndroid","SvgLinux","SvgChrome","SvgFirefox","SvgOpera","SvgSafari","SvgEdge","UserCell","getOsIcon","os","Windows","Apple","Linux","Android","getBrowserIcon","Edge","Chrome","Firefox","Safari","Opera","StatusCell","SessionToolBar","refresh","SessionSelector","expandSelector","setExpandSelector","handleItem","v","SessionHeadRow","prevPath","nextPath","handleGoBack","SessionView","changeTitle","Overview","lazy","__vitePreload","Sessions","Logs","ConfigServer","AppsSwing","AppsView","LogsInstancesList","Scaling","QuickstartPage","AppsQuickstart","ROUTES","PageNotFound","Route","ErrorView","bTryAgainBtn","bLoginBtn","subtitle","login","Layout","LayoutWrapper","RoutesContainer","search","lastRoute","Suspense","page","Redirect","App","appInit","shouldShowLoader","Router"],"sources":["../../src/utils/functions.ts","../../src/utils/types.ts","../../src/utils/hooks.ts","../../src/components/basic/Toast/Toast.tsx","../../src/services/AccessHandlerService.ts","../../src/services/ConfigRestService.ts","../../src/services/LogRestService.ts","../../src/gen/runtime.ts","../../src/gen/models/VerboseModeRequest.ts","../../src/services/OverviewRestService.ts","../../src/components/basic/Icon/Icon.tsx","../../src/components/basic/Avatar/Avatar.tsx","../../src/components/basic/Tooltip/Tooltip.tsx","../../src/components/basic/Chip/Chip.tsx","../../src/components/basic/Coin/Coin.tsx","../../src/components/basic/Badge/Badge.tsx","../../src/stores/PermissionsStore.tsx","../../src/stores/GlobalStore.tsx","../../src/stores/OverviewStore.tsx","../../src/stores/ConfigStore.tsx","../../src/stores/SessionsStore.tsx","../../src/stores/LogsStore.tsx","../../src/gen/models/ActiveSessionsInfo.ts","../../src/gen/models/ApplicationInfo.ts","../../src/gen/models/BasicApplicationInfo.ts","../../src/gen/models/Config.ts","../../src/gen/models/IdleSession.ts","../../src/gen/models/InstanceManagerStatus.ts","../../src/gen/models/LogRequest.ts","../../src/gen/models/LogResponse.ts","../../src/gen/models/LogsOverview.ts","../../src/gen/models/MetaObject.ts","../../src/gen/models/NameValue.ts","../../src/gen/models/Overview.ts","../../src/gen/models/Permissions.ts","../../src/gen/models/QuickStart.ts","../../src/gen/models/QuickStartConfig.ts","../../src/gen/models/QuickStartFile.ts","../../src/gen/models/RecordingInfo.ts","../../src/gen/models/RefreshTokenResult.ts","../../src/gen/models/ServerInfo.ts","../../src/gen/models/ServerLogInfo.ts","../../src/gen/models/SessionLogInfo.ts","../../src/gen/models/SessionPoolInfo.ts","../../src/gen/models/SessionPoolLogInfo.ts","../../src/gen/models/Sessions.ts","../../src/gen/models/SwingSession.ts","../../src/gen/models/ThreadDumpInfo.ts","../../src/gen/apis/BasicApi.ts","../../src/gen/apis/LoginApi.ts","../../src/gen/apis/ManageApplicationsApi.ts","../../src/gen/apis/ManageConfigurationApi.ts","../../src/gen/apis/ManageScalingApi.ts","../../src/gen/apis/ManageSessionsApi.ts","../../src/gen/apis/OverviewApi.ts","../../src/gen/apis/QuickStartApi.ts","../../src/gen/apis/ViewLogsApi.ts","../../src/stores/ScalingStore.tsx","../../src/stores/RootStore.tsx","../../src/stores/index.tsx","../../src/views/LogsView/partial/HighlightedText.tsx","../../src/components/basic/Status/Status.tsx","../../src/components/basic/Button/variants/ButtonDefault/ButtonDefault.tsx","../../src/components/basic/Button/variants/ButtonGroup/ButtonGroup.tsx","../../src/components/basic/Button/variants/ButtonUI/ButtonUI.tsx","../../src/components/basic/Button/Button.tsx","../../src/components/basic/ButtonIcon/ButtonIcon.tsx","../../src/components/basic/Backdrop/Backdrop.tsx","../../src/components/basic/Divider/Divider.tsx","../../src/components/basic/Input/variants/InputDefault/InputDefault.tsx","../../src/components/basic/Input/Input.tsx","../../src/components/basic/Switch/Switch.tsx","../../src/components/basic/SearchFilter/SearchFilter.tsx","../../src/components/basic/NoData/NoData.tsx","../../src/components/basic/Loader/variants/Spinner/Spinner.tsx","../../src/components/basic/Loader/variants/Fullscreen/Fullscreen.tsx","../../src/components/basic/Loader/variants/Line/Line.tsx","../../src/assets/images/webswingLogoText.svg","../../src/components/basic/Loader/variants/Branded/Branded.tsx","../../src/components/basic/Loader/Loader.tsx","../../src/components/basic/StatusBar/StatusBar.tsx","../../src/components/complex/Dialog/variants/DialogDefault/DialogDefault.tsx","../../src/components/complex/Dialog/variants/DialogRP/DialogRP.tsx","../../src/components/complex/Dialog/Dialog.tsx","../../src/components/complex/Heading/Heading.tsx","../../src/components/complex/List/List.tsx","../../src/components/containers/Card/Card.tsx","../../src/components/containers/Flex/Flex.tsx","../../src/components/containers/Skeleton/variants/SkeletonCircle.tsx","../../src/components/containers/Skeleton/variants/SkeletonLine.tsx","../../src/components/containers/Skeleton/variants/SkeletonSquare.tsx","../../src/components/containers/Skeleton/variants/SkeletonTable.tsx","../../src/components/containers/Skeleton/variants/SkeletonUI.tsx","../../src/components/containers/Skeleton/Skeleton.tsx","../../src/components/complex/Popover/Popover.tsx","../../src/components/complex/Table/TableVirtualized.tsx","../../src/components/layout/Content/Content.tsx","../../src/components/layout/Header/partials/MenuItem.tsx","../../src/components/layout/Header/data.ts","../../src/components/layout/RightToggleMenu/RightToggleMenu.tsx","../../src/components/layout/Header/Header.tsx","../../src/components/layout/LeftSideMenu/Partials/MenuItem.tsx","../../src/assets/images/appjava.png","../../src/components/layout/LeftSideMenu/Partials/CreateApp.tsx","../../src/components/basic/Dropdown/Dropdown.tsx","../../src/components/layout/LeftSideMenu/Partials/Menu.tsx","../../src/assets/images/AdminConsole.svg","../../src/assets/images/logo_ico.svg","../../src/components/layout/Header/partials/Logo.tsx","../../src/components/layout/LeftSideMenu/Partials/Footer.tsx","../../src/components/layout/LeftSideMenu/Partials/OverviewMenu.tsx","../../src/components/layout/LeftSideMenu/LeftSideMenu.tsx","../../src/services/SessionsRestService.ts","../../src/services/ScalingRestService.ts","../../src/utils/APIUtils.ts","../../src/i18n/index.ts","../../src/views/SessionView/partials/Charts.tsx","../../src/views/LogsView/partial/LogsTable.tsx","../../src/views/SessionView/partials/Warnings.tsx","../../src/views/Sessions/partials/RecordingsTable.tsx","../../src/views/Sessions/partials/ThreadDumpsTable.tsx","../../src/components/basic/Webswing/Webswing.tsx","../../src/views/SessionView/partials/SessionTabs.tsx","../../src/views/Sessions/partials/ActionCell.tsx","../../src/views/Sessions/partials/AppCell.tsx","../../src/assets/icons/svg/windows.svg","../../src/assets/icons/svg/apple.svg","../../src/assets/icons/svg/android.svg","../../src/assets/icons/svg/linux.svg","../../src/assets/icons/svg/chrome.svg","../../src/assets/icons/svg/firefox.svg","../../src/assets/icons/svg/opera.svg","../../src/assets/icons/svg/safari.svg","../../src/assets/icons/svg/edge.svg","../../src/views/Sessions/partials/UserCell.tsx","../../src/views/Sessions/partials/StatusCell.tsx","../../src/views/SessionView/partials/SessionNavCard.tsx","../../src/views/SessionView/partials/SessionSelector.tsx","../../src/views/SessionView/partials/SessionHeadRow.tsx","../../src/views/SessionView/SessionView.tsx","../../src/views/routes.tsx","../../src/views/misc/PageNotFound/PageNotFound.tsx","../../src/views/misc/ErrorView/ErrorView.tsx","../../src/components/layout/Layout.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["import { Config, MetaObject } from '@/gen'\n// libraries\n\nconst getTag = (value: any) => {\n  if (value == null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]'\n  }\n  return toString.call(value)\n}\n\nconst isSymbol = (value: any) => {\n  const type = typeof value\n  return type == 'symbol' || (type === 'object' && value != null && getTag(value) == '[object Symbol]')\n}\n\nconst toKey = (value: any) => {\n  if (typeof value === 'string' || isSymbol(value)) {\n    return value\n  }\n  const result = `${value}`\n  return (result == '0' && (1 / value) == -Infinity) ? '-0' : result\n}\n\nconst isKey = (value: any, object: any) => {\n  /** Used to match property names within property paths. */\n  const reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/\n  const reIsPlainProp = /^\\w*$/\n\n  if (Array.isArray(value)) {\n    return false\n  }\n  const type = typeof value\n  if (type === 'number' || type === 'boolean' || value == null || isSymbol(value)) {\n    return true\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object))\n}\n\nconst stringToPath = (string: string) => {\n  const result: string[] = [];\n  \n  string?.split(/[.[\\]]/g).forEach(part => {\n    if (part !== \"\") {\n      result.push(part);\n    }\n  });\n  \n  return result;\n}\n\nconst castPath = (value: any, object: any) => {\n  if (Array.isArray(value)) {\n    return value\n  }\n  return isKey(value, object) ? [value] : stringToPath(value)\n}\n\nconst baseGet = (object: any, path: string[] | string) => {\n  path = castPath(path, object)\n\n  let index = 0\n  const length = path.length\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])]\n  }\n  return (index && index == length) ? object : undefined\n}\n\nexport const get = (object: any, path: string[] | string, defaultValue?:any) => {\n const result = object == null ? undefined : baseGet(object, path)\n return result === undefined ? defaultValue : result\n}\n\nexport const parseObject = <T extends object>(object: T) => {\n  return {\n    // clone: () => new Object(object),\n    clone: () => object,\n\n    get: (propPath: string, fallbackValue: any) => get(object, propPath, fallbackValue),\n\n    isEmpty: (propertiesToCheck?: (keyof T)[]): boolean | boolean[] => {\n      if (propertiesToCheck) {\n        return propertiesToCheck.map(property => !!get(object, String(property)))\n      }\n\n      return Object.keys(object).length === 0\n    },\n\n    isEqual: (compareObject: object): boolean => isEqual(object, compareObject),\n  }\n}\n\n/**\n * Check if proprety is function\n * @param func Property to check\n */\nexport const isFunction = (func: any) => {\n  return typeof func === 'function'\n}\n\n/**\n * Run callback if it is callable\n * @param  callback Function to run if it is a function\n * @param  args Argument which we pass to callback function\n */\nexport const runCallback = (callback: any, ...args: any[]) => {\n  return isFunction(callback) ? callback.apply(callback, args) : undefined\n}\n\nexport const toPath = (basePath: string, path: string) => {\n  if (path) {\n    if (basePath.endsWith(path)) {\n      return basePath;\n    }\n    if (path.substr(0, 7) === \"http://\" || path.substr(0, 8) === \"https://\") {\n      return path;\n    }\n    if (path.substr(0, 1) !== \"/\") {\n      path = \"/\" + path;\n    }\n    if (path.length === 1) {\n      path = \"/\";\n    }\n\n    return basePath ? basePath + path : path;\n  } else {\n    return basePath;\n  }\n};\n\nexport const getStatsDataset = (stats: any, names: string[]) => {\n  const result = [];\n  if (stats) {\n    const keysObj: any = {};\n    for (const n of names) {\n      if (stats[n] != null) {\n        for (const item in stats[n]) {\n          if (stats[n].hasOwnProperty(item)) {\n            keysObj[item] = null;\n          }\n        }\n      }\n    }\n    const keys = getKeys(keysObj).sort();\n    for (const key of keys) {\n      const entry: any = {\n        x: new Date(parseInt(key, 10))\n      };\n      for (const name of names) {\n        const dataset1 = stats[name];\n        const value =\n          dataset1 != null && dataset1[key] != null ? dataset1[key] : 0;\n        entry[name] = Math.floor(value);\n      }\n      result.push(entry as never);\n    }\n  }\n  return result;\n};\n\nexport const getKeys = (obj: any) => {\n  const keys = [];\n  if (obj !== null) {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        keys.push(key as never);\n      }\n    }\n  }\n  return keys;\n};\n\nexport const dateFormat = (date:number) => {\n  if(!date) {\n    return 'N/A'\n  }\n  const dateOptions: Intl.DateTimeFormatOptions = {\n    hour12: false,\n    hour: 'numeric',\n    minute: '2-digit',\n    second: '2-digit',\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric'\n  };\n\n  const result = new Date(date);\n  return result.toLocaleString('en-US', dateOptions);\n}\n\nexport const extractValues = (config: any, data?: any): any => {\n  data = config.data || data;\n  if (config != null && config.fields != null) {\n    const result = data || {};\n    for (const field of config.fields) {\n      if (field.value == null) {\n        result[field.name] = null;\n      } else if (field.type === \"Object\") {\n        result[field.name] = extractValues(field.value, result[field.name]);\n      } else if (field.type === \"ObjectList\") {\n        const list = [];\n        for (const value of field.value) {\n          list.push(extractValues(value) as never);\n        }\n        result[field.name] = list;\n      } else if (field.type === \"ObjectMap\") {\n        const map: any = {};\n        for (const mapKey in field.value) {\n          if (field.value.hasOwnProperty(mapKey)) {\n            map[mapKey] = extractValues(field.value[mapKey]);\n          }\n        }\n        result[field.name] = map;\n      } else {\n        result[field.name] = field.value;\n      }\n    }\n    return result;\n  } else {\n    return null;\n  }\n};\n\nexport const getAllConfigData = (config: any) => {\n  const data: any = {};\n  if(config.hasOwnProperty('webConfig')) {\n    data.webConfig = { 'data' : extractValues(config.webConfig) };\n  } \n  if(config.hasOwnProperty('appConfig')) {\n    data.appConfig = {}\n    for (const [key, value] of Object.entries(config.appConfig)) {\n      data.appConfig[key] = { 'data' : extractValues(value) };\n    }\n  }\n  return data as Config;\n}\n\nexport const getSimpleConfigData = (config: MetaObject) => {\n  return { 'data' : extractValues(config)} as MetaObject;\n}\n\nexport const getOsIcon = (os: string) => {\n  if (os != null) {\n    if (os === \"Windows\") {\n      return \"windows\";\n    }\n    if (os === \"Mac\" || os === \"IPhone\") {\n      return \"apple\";\n    }\n    if (os === \"Linux\") {\n      return \"linux\";\n    }\n    if (os === \"Android\") {\n      return \"android\";\n    }\n    return \"unknown\";\n  }\n}\n\nexport const getBrowserIcon =(b: string) => {\n  if (b != null) {\n    if (b.indexOf(\"IE\") >= 0) {\n      return \"edge\";\n    }\n    b = b.toLowerCase();\n    if (b.indexOf(\"edge\") >= 0) {\n      return \"edge\";\n    }\n    if (b.indexOf(\"chrome\") >= 0) {\n      return \"chrome\";\n    }\n    if (b.indexOf(\"firefox\") >= 0) {\n      return \"firefox\";\n    }\n    if (b.indexOf(\"safari\") >= 0) {\n      return \"safari\";\n    }\n    if (b.indexOf(\"opera\") >= 0) {\n      return \"opera\";\n    }\n    return \"unknown\";\n  }\n}\n\nexport const getServerStatuses = (statuses:any) => {\n  let countRunning: number = 0;\n  let countError: number = 0;\n  let countStopped: number = 0;\n  if(statuses) {\n    for (const item of statuses) {\n      switch(item.status) {\n        case 'Running': {\n          countRunning++;\n            break; \n        } \n        case 'Error': {\n          countError++\n            break;\n        } \n        case 'Stopped': { \n          countStopped++\n            break; \n        }\n      } \n    }\n  }\n  return {'Running':countRunning, 'Error':countError, 'Stopped':countStopped}\n}\n\nexport const convertToSlug = (text:string) => {\n    return text\n        .toLowerCase()\n        .replace(/ /g,'-')\n        .replace(/[^\\w-]+/g,'')\n        ;\n}\n\nexport const jsonToCssVariables = (json:any) => {\n  const options = {\n    offset:0,\n    pretty:true,\n  }\n\n  const offset = 0\n\n  let count = 0\n  let output = `:root {${options.pretty ? '\\n' : ''}`\n\n  for (let key in json) {\n    if (count >= offset) {\n      let value = json[key]\n\n      if (!isNaN(value) && value !== 0) {\n        value +=  'px'\n      }\n\n      output += `${options.pretty ? '\\t' : ''}--${key}: ${value};${options.pretty ? '\\n' : ''}`\n    }\n\n    count++\n  }\n\n  output += '}'\n\n  return output\n}\n\nexport const humanFileSize = (size: number | undefined): string => {\n  if (!size) return '0 B';\n\n  const i = Math.floor(Math.log(size) / Math.log(1024));\n  const fractioned = size / Math.pow(1024, i);\n  return fractioned.toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n};\n\nexport const _debounce = function <T extends (...args: any[]) => void>(\n  callback: T,\n  debounceDelay: number = 300,\n  immediate: boolean = false\n) {\n  let timeout: ReturnType<typeof setTimeout> | null;\n\n  return function <U>(this: U, ...args: Parameters<typeof callback>) {\n      const context = this;\n\n      if (immediate && !timeout) {\n          callback.apply(context, args)\n      }\n      if (typeof timeout === \"number\") {\n          clearTimeout(timeout);\n      }\n      timeout = setTimeout(() => {\n          timeout = null;\n          if (!immediate) {\n              callback.apply(context, args)\n          }\n      }, debounceDelay);\n  }\n}\n\ntype PropertyPath<T> = keyof T | string;\n\nexport const sortByCol = <T>(arr?: T[], props?: PropertyPath<T> | PropertyPath<T>[], orders?: (\"ASC\" | \"DESC\") | (\"ASC\" | \"DESC\")[]): T[] | undefined => {\n  if(!arr) return arr\n  const propsArr = Array.isArray(props) ? props : [props];\n  const ordersArr = Array.isArray(orders) ? orders : orders ? [orders] : [];\n\n  const compare = (a: T, b: T, propsIndex: number): number => {\n    const prop = propsArr[propsIndex];\n    const order = ordersArr[propsIndex] || \"ASC\";\n\n    // @ts-ignore\n    const aValue = typeof a[prop] === \"function\" ? a[prop]() : a[prop];\n    // @ts-ignore\n    const bValue = typeof b[prop] === \"function\" ? b[prop]() : b[prop];\n\n    if (aValue === bValue) {\n      if (propsIndex === propsArr.length - 1) {\n        return 0;\n      } else {\n        return compare(a, b, propsIndex + 1);\n      }\n    }\n\n    if (order === \"ASC\") {\n      return aValue < bValue ? -1 : 1;\n    } else {\n      return aValue > bValue ? -1 : 1;\n    }\n  };\n\n  return arr.sort((a, b) => compare(a, b, 0));\n}\n\nexport function isEqual(a: any, b: any, stackA: any[] = [], stackB: any[] = []): boolean {\n  // Handle the simple cases first.\n  if (a === b) {\n    return true;\n  }\n\n  // Check if the values are of the same type.\n  const typeA = typeof a;\n  const typeB = typeof b;\n\n  if (typeA !== typeB) {\n    return false;\n  }\n\n  // Check if the values are null.\n  if (a == null || b == null) {\n    return false;\n  }\n\n  // Handle special types.\n  if (typeA === 'symbol' || typeB === 'symbol') {\n    return (a as any).valueOf() === (b as any).valueOf();\n  }\n\n  if (typeA === 'function') {\n    return (a as Function).toString() === (b as Function).toString();\n  }\n\n  if (typeA === 'object' && typeB === 'object') {\n    // Check if the values are circular references.\n    let lengthA = stackA.length;\n    while (lengthA--) {\n      if (stackA[lengthA] === a) {\n        return stackB[lengthA] === b;\n      }\n    }\n\n    // Add the value to the stack.\n    stackA.push(a);\n    stackB.push(b);\n\n    // Check if the values are arrays.\n    const isArrayA = Array.isArray(a);\n    const isArrayB = Array.isArray(b);\n\n    if (isArrayA !== isArrayB) {\n      return false;\n    }\n\n    if (isArrayA) {\n      // Check if the arrays are equal.\n      const length = a.length;\n      // @ts-ignore\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i++) {\n        // @ts-ignore\n        if (!isEqual(a[i], b[i], stackA, stackB)) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      // Check if the objects are equal.\n      const keysA = Object.keys(a).sort();\n      const keysB = Object.keys(b).sort();\n      const length = keysA.length;\n\n      if (length !== keysB.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i++) {\n        const key = keysA[i];\n\n        if (key !== keysB[i]) {\n          return false;\n        }\n        // @ts-ignore\n        if (!isEqual(a[key], b[key], stackA, stackB)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  // Compare values using strict equality.\n  return a === b;\n}\n\nexport const escapeHtml = (unsafe: string) => {\n  return unsafe.replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;').replaceAll('\"', '&quot;').replaceAll(\"'\", '&#039;');\n}","import {ILogType} from './index';\n\n// #TODO: find a way to generate this type based on files within `assets/icons/svg`\nexport type TIcon =\n  | 'x'\n  | 'x-circle'\n  | 'info'\n  | 'filter'\n  | 'chevron-down'\n  | 'chevron-up'\n  | 'menu'\n  | 'lock'\n  | 'unlock'\n  | 'apps'\n  | 'list'\n\n/**\n * Clock-wise positions\n *\n * @example\n *                          top\n *  top-left        ---------------------   top-right\n *                  |                   |\n *  left            |                   |   right\n *                  |                   |\n *  bottom-left     ---------------------   bottom-right\n *                          bottom\n */\nexport type TPos =\n  | 'top'\n  | 'topRight'\n  | 'right'\n  | 'bottomRight'\n  | 'bottom'\n  | 'bottomLeft'\n  | 'left'\n  | 'topLeft'\n\n  export const LogTypes: ILogType[] = [\n    {\n      label: \"Audit\",\n      url: \"audit\",\n      delimiter: \"|\",\n      lineDelimiter: \"\\n\",\n      downloadEnabled: true\n    },\n    {\n      label: \"Server\",\n      url: \"server\",\n      delimiter: null,\n      lineDelimiter: /\\n(?=\\d{4})/g,\n      downloadEnabled: true\n    },\n    {\n      label: \"Admin\",\n      url: \"admin\",\n      delimiter: null,\n      lineDelimiter: /\\n(?=\\d{4})/g,\n      downloadEnabled: true\n    },\n    {\n      label: \"Scaling\",\n      url: \"scaling\",\n      delimiter: null,\n      lineDelimiter: /\\n(?=\\d{4})/g,\n      downloadEnabled: true\n    },\n    {\n      label: \"Session Pool\",\n      url: \"sessionpool\",\n      delimiter: null,\n      lineDelimiter: /\\n(?=\\d{4})/g,\n      downloadEnabled: true\n    },\n    {\n      label: \"Session\",\n      url: \"session\",\n      delimiter: null,\n      lineDelimiter: /\\n(?=\\d{4})/g,\n      downloadEnabled: false,\n      hide:true\n    }\n  ];","import React, { useCallback } from 'react'\nimport { Dispatch, SetStateAction } from 'react'\nimport { useEffect, useRef, useState } from 'react'\n\ntype IntervalFunction = () => ( unknown | void )\n\nexport function useInterval( callback: IntervalFunction, delay: number ) {\n\n  const savedCallback = useRef<IntervalFunction| null>( null )\n\n  // Remember the latest callback.\n  useEffect( () => {\n    savedCallback.current = callback\n  } )\n\n  // Set up the interval.\n  useEffect( () => {\n    function tick() {\n      if ( savedCallback.current !== null ) {\n        savedCallback.current()\n      }\n    }\n    const id = setInterval( tick, delay )\n    return () => clearInterval( id )\n\n  }, [ delay ] )\n}\n\n/**\n * Hook for handling closing when clicking outside of an element\n * @param {React.node} el\n * @param {boolean} initialState\n */\nexport const useDetectOutsideClick = (el: any, initialState:boolean) => {\n  const [isActive, setIsActive]:[boolean,Dispatch<SetStateAction<boolean>>] = useState<boolean>(initialState);\n\n  useEffect(() => {\n    const onClick = (e: { target: any }) => {\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n    };\n\n    // If the item is active (ie open) then listen for clicks outside\n    if (isActive) {\n      window.addEventListener(\"click\", onClick);\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", onClick);\n    };\n  }, [isActive, el]);\n\n  return [isActive, setIsActive];\n};\n\nexport const useTimer = (initialState = 0) => {\n  const [timer, setTimer] = React.useState(initialState)\n  const [isActive, setIsActive] = React.useState(false)\n  const [isPaused, setIsPaused] = React.useState(false)\n  const countRef = React.useRef<IntervalFunction| any>(null)\n\n  const handleStart = () => {\n    setIsActive(true)\n    setIsPaused(true)\n    countRef.current = setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 1000)\n  }\n\n  const handlePause = () => {\n    clearInterval(countRef.current)\n    setIsPaused(false)\n  }\n\n  const handleResume = () => {\n    setIsPaused(true)\n    countRef.current = setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 1000)\n  }\n\n  const handleReset = () => {\n    clearInterval(countRef.current)\n    setIsActive(false)\n    setIsPaused(false)\n    setTimer(0)\n  }\n\n  return { timer, isActive, isPaused, handleStart, handlePause, handleResume, handleReset }\n}\n\nexport const useRootOverflow = () =>{\n  useEffect(() => {\n    const root = document.getElementById('root')!\n    root.style.overflow = 'hidden';\n    return () => {root.style.overflow = ''}\n  },[])\n}\n\nexport const useForceUpdate = () => {\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick(tick => tick + 1);\n  }, [])\n  return update;\n}","// .core\nimport React from 'react'\n// components\n// import { Icon } from '@/components'\n// libraries\nimport { toast, ToastContainer, ToastOptions, ToastProps } from 'react-toastify'\n// styles\nimport 'react-toastify/dist/ReactToastify.css'\nimport './Toast.module.scss'\n\nexport const Toast: React.FC<Partial<ToastProps>> = (props: Partial<ToastProps>) => (\n  //\n  // #NOTE: To enable testing, either uncomment the below div (don't worry, it won't affect the Toast's styling)\n  //        or uncomment the `containerId` prop and in your test instead of `getByTestId` use `queryByAttribute('id', container, 'Toastify')`\n  //        OR the best scenario would be add a `data-testid` directly to your custom Toast content...you gonna replace it anyway\n\n  //   <div data-testid=\"Toastify\">\n  <ToastContainer\n    hideProgressBar\n    newestOnTop\n    // containerId=\"Toastify\"\n    closeButton={false}\n    {...props}\n  />\n  //   </div>\n)\n\n//\n// #NOTE: To answer the question of \"Why are toast toggling methods defined here\", is because of the custom\n//          content for the toast - the only way to enable it is to pass a component directly to `toast()` method\n//          this means the file has to be .tsx, and this was the best place to put it in\n//\n\n/**\n * Unified method for displaying the global Toast, if not specified, defaults to `info` toast\n * @param message Text to display inside the Toast\n * @param toastConfig configuration for the Toast\n */\nexport const showToast = (message: string = '', toastConfig?: ToastOptions) =>\n  message && toast(message, { autoClose: 2500, type: 'info', ...toastConfig })\n\n/**\n * Specific method for displaying ERROR Toast only\n */\nexport const showToastErr = (message?: string, toastConfig?: ToastOptions) =>\n  showToast(message, { ...toastConfig, autoClose: 5000, type: 'error', position:'bottom-right' })\n/**\n * Specific method for displaying SUCCESS Toast only\n */\nexport const showToastOk = (message?: string, toastConfig?: ToastOptions) =>\n  showToast(message, { ...toastConfig, autoClose: 2500, type: 'success', position:'bottom-right' })\n/**\n * Specific method for displaying WARNING Toast only\n */\nexport const showToastWarn = (message?: string, toastConfig?: ToastOptions) =>\n  showToast(message, { ...toastConfig, autoClose: 4000, type: 'warning', position:'bottom-right' })\n","import { loginApi, ApiServerUrl, handleRestError, getSecuritySuffix } from '@/utils'\nimport { ConfigService } from '@/services'\nimport i18n from '@/i18n'\n\nclass AccessHandlerService {\n\n  private accessToken: string | null | undefined;\n  private refreshing = false;\n \n  private static _instance:AccessHandlerService = new AccessHandlerService();\n\n  constructor() {\n      if(AccessHandlerService._instance){\n          throw new Error(\"Error: Instantiation failed: Use AccessHandlerService.getInstance() instead of new.\");\n      }\n      AccessHandlerService._instance = this;\n      this.init();\n  }\n\n  static getInstance():AccessHandlerService\n  {\n      return AccessHandlerService._instance;\n  }\n\n  async getAccessToken(force?: boolean) {\n    if (!this.accessToken || this.accessToken == null || !this.accessToken.length || force) {\n      if (this.refreshing) {\n        await this.refreshingFinished();\n        \n        if (this.accessToken && this.accessToken != null && this.accessToken.length) {\n          return this.accessToken;\n        }\n      }\n      \n      await this.refreshToken();\n    }\n    \n    return this.accessToken || \"\";\n  }\n\n  setAccessToken(accessToken: string) {\n    this.accessToken = accessToken;\n  }\n\n  clearTokens() {\n    this.accessToken = null!;\n  }\n\n  async displayLogin() {\n    const params: string[] = [];\n    const urlParams = new URLSearchParams(window.location.search);\n    const securityToken = urlParams.get('securityToken');\n    if (securityToken !== undefined && securityToken != null) {\n      params.push('securityToken=' + securityToken);\n    }\n    const realm = urlParams.get('realm');\n    if (realm !== undefined && realm != null) {\n      params.push('realm=' + realm);\n    }\n\n    params.push('securitySuffix=' + getSecuritySuffix());\n\n    const routeParam = urlParams.get(\"route\");\n    if (routeParam != null) {\n      sessionStorage.setItem('wsa_lastRoute', routeParam);\n    }\n\n    const serverUrl = await ConfigService.getServerUrl();\n    if(serverUrl) {\n      window.location.href = serverUrl + '/adminConsoleLogin.html?' + params.join('&');\n    }\n  }\n\n  async logout() {\n    this.clearTokens();\n    window.location.href = ApiServerUrl + '/rest/logout?X-webswing-securitySuffix=' + getSecuritySuffix();\n  }\n\n  async healthCheck() {\n    try {\n      const appApi = loginApi({});\n      const result = await appApi.health();\n      return result || \"error\";\n\t  } catch (e) {\n        handleRestError(i18n.t('error.healthCheck'), e)\n    }\n    return \"error\";\n  }\n  \n  private init() {\n    setInterval(() => {\n      this.getAccessToken(true)\n    }, 60000);\n  }\n\n  private async refreshingFinished() {\n    let count = 0;\n    while (this.refreshing && count < 100) {\n      count++;\n      await new Promise(r => setTimeout(r, 500));\n    }\n  }\n\n  private async refreshToken() {\n    this.refreshing = true;\n    \n\t  try {\n      const appApi = loginApi({});\n      const result = await appApi.refreshToken().catch(() => {});\n      \n      if (result && result.accessToken && result.accessToken != null && result.accessToken.length) {\n        this.setAccessToken(result.accessToken);\n      } else {\n        // else login\n        this.clearTokens();\n        this.displayLogin();\n      }\n\t  } catch (e) {\n        handleRestError(i18n.t('error.refreshToken'),e)\n\t  } finally {\n      this.refreshing = false;\n    }\n  }\n\n}\n\nexport const AccessService = AccessHandlerService.getInstance();","import { toPath, basicApi, manageConfigurationApi, manageApplicationsApi, \n  getAuthenticationHeaders,\n  handleRestError} from '@/utils';\nimport { SearchVariablesTypeEnum, ResolveTypeEnum, Config } from \"../gen\";\nimport {AccessService} from './AccessHandlerService';\nimport i18n from '@/i18n';\n\n\nclass ConfigRestService {\n  \n  private static _instance:ConfigRestService = new ConfigRestService();\n  public serverUrl: string | undefined;\n  \n  constructor() {\n    if(ConfigRestService._instance){\n      throw new Error(\"Error: Instantiation failed: Use ConfigRestService.getInstance() instead of new.\");\n    }\n    ConfigRestService._instance = this;\n  }\n  \n  static getInstance():ConfigRestService\n  {\n    return ConfigRestService._instance;\n  }\n\n  async getAccessToken() {\n    return await AccessService.getAccessToken();\n  }\n\n  async getServerUrl() {\n\t  if (!this.serverUrl || this.serverUrl === null) {\n\t\t  await this.getUrl().then((data: any) => {\n        if (data) {\n          this.serverUrl = data;\n        }\n\t\t  });\n\t  }\n\t  return this.serverUrl;\n  }\n  \n  async getPaths() {\n    try {\n      const globalApi = basicApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await globalApi.getPaths();\n    } catch (e) {\n      handleRestError(i18n.t('error.getPath'),e)\n    }\n  }\n\n  async getUrl() {\n    try {\n      const appApi = basicApi({});\n      return await appApi.getUrl();\n    } catch (e) {\n      handleRestError(i18n.t('error.getUrl'),e)\n    }\n  }\n  \n  async getInfo(path: string) {\n    try {\n      const appApi = basicApi(getAuthenticationHeaders(await this.getAccessToken()), path);\n      return await appApi.getInfo();\n    } catch (e) {\n      handleRestError(i18n.t('error.getInfo'),e)\n    }\n  }\n  \n  async getConfig(path: string) {\n    try {\n      const appApi = manageConfigurationApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.getConfig();\n    } catch (e) {\n      handleRestError(i18n.t('error.getConfig'),e)\n    }\n  }\n  \n  async setConfig(config: Config, path: string) {\n    try {\n      const appApi = manageConfigurationApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      await appApi.saveConfig({\"config\": config});\n    } catch (e) {\n      handleRestError(i18n.t('error.setConfig'),e)\n    }\n  }\n  \n  async start(path: string) {\n    try {\n      const appApi = manageApplicationsApi(getAuthenticationHeaders(await this.getAccessToken()))\n      return await appApi.startApp({appPath:toPath('', path)});\n    } catch (e) {\n      handleRestError(i18n.t('error.startApp'),e)\n    }\n  }\n  \n  async stop(path: string) {\n    try {\n      const appApi = manageApplicationsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.stopApp({appPath:toPath('', path)});\n    } catch (e) {\n      handleRestError(i18n.t('error.stopApp'),e)\n    }\n  }\n\n  async create(path: string, name:string) {\n    try {\n      const appApi = manageApplicationsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.createApp({appPath:toPath('', path),appName:name});\n    } catch (e) {\n      handleRestError(`${i18n.t('apps.toastCreateFailed')} ${name}`,e)\n    }\n  }\n\n  async remove(path: string) {\n    try {\n      const appApi = manageApplicationsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.removeApp({appPath:toPath('', path)});\n    } catch (e) {\n      handleRestError(`${i18n.t('error.removeApp',{app:path})}`,e)\n    }\n  }\n\n  async getVariables(\n    path: string,\n    type: SearchVariablesTypeEnum,\n    searchSequence: string,\n    sessionPoolId?: string\n  ) {\n    try {\n      const appApi = manageConfigurationApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.searchVariables({type, search:searchSequence, sessionPoolId});\n    } catch (e) {\n      handleRestError(i18n.t('error.getVar'),e)\n    }\n  }\n\n  async resolve(path: string, type: ResolveTypeEnum, searchSequence: string, sessionPoolId?:string) {\n    try {\n      const swingAppApi = manageConfigurationApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      return await swingAppApi.resolve({type, resolve:searchSequence, sessionPoolId});\n    } catch (e) {\n      handleRestError(i18n.t('error.resolve'),e)\n    }\n  }\n\n  async getMeta(path: string, config: Config) {\n    try {\n      const swingAppApi = manageConfigurationApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      return await swingAppApi.getMeta({\"config\": config});\n    } catch (e) {\n      handleRestError(i18n.t('error.getMeta'),e)\n    }\n  }\n\n  async getVersion() {\n    try {\n      const globalApi = basicApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await globalApi.getVersion();\n    } catch (e) {\n      handleRestError(i18n.t('error.getVersion'),e)\n    }\n  }\n  \n}\n\nexport const ConfigService = ConfigRestService.getInstance();","import i18n from '@/i18n';\nimport { viewLogsApi, getAuthenticationHeaders, handleRestError} from '@/utils';\nimport {AccessService} from './AccessHandlerService';\n\n\nclass LogRestService {\n  \n  private static _instance:LogRestService = new LogRestService();\n  \n  \n  constructor() {\n    if(LogRestService._instance){\n      throw new Error(\"Error: Instantiation failed: Use LogRestService.getInstance() instead of new.\");\n    }\n    LogRestService._instance = this;\n  }\n  \n  static getInstance():LogRestService\n  {\n    return LogRestService._instance;\n  }\n\n  async getLogsOverview() {\n    try {\n      const logsApi = viewLogsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await logsApi.getLogsOverview();\n    } catch (e) {\n      handleRestError(i18n.t('error.loadLogsOverview'),e)\n    }\n  }\n  \n  async getServerLogs(id:string, type: string, query: any) {\n    try {\n      const logsApi = viewLogsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await logsApi.getServerLogs({id, type, logRequest:query});\n    } catch (e) {\n      handleRestError(`${i18n.t('error.loadLog',{type:type})}`,e)\n    }\n  }\n  \n  async getAdminConsoleLogs(query: any) {\n    try {\n      const logsApi = viewLogsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await logsApi.getAdminConsoleLogs({logRequest: query});\n    } catch (e) {\n      handleRestError(`${i18n.t('error.loadLog',{type: 'admin'})}`,e)\n    }\n  }\n  \n  async getScalingLogs(query: any) {\n    try {\n      const logsApi = viewLogsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await logsApi.getAutoScalingLogs({logRequest: query});\n    } catch (e) {\n      handleRestError(`${i18n.t('error.loadLog',{type: 'scaling'})}`,e)\n    }\n  }\n  \n  async getSessionPoolLogs(id:string, query: any) {\n    try {\n      const logsApi = viewLogsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await logsApi.getSessionPoolLogs({id, logRequest:query});\n    } catch (e) {\n      handleRestError(i18n.t('error.sessionPoolLogs'),e)\n    }\n  }\n  \n  async getSessionLog(sessionPoolId: string, instanceId: string, path: string, query: any) {\n    try {\n      const logsApi = viewLogsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await logsApi.getSessionLogs({sessionPoolId, instanceId, appPath:path, logRequest: query});\n    } catch (e) {\n      handleRestError(i18n.t('error.sessionLog'),e)\n    }\n  }\n  \n  async downloadServerLogs(id: string, type: string, token: string) {\n    try {\n      const logsApi = viewLogsApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await logsApi.downloadServerLogs({id, type, token});\n    } catch (e) {\n      handleRestError(`${i18n.t('error.downloadServerLogs',{type:type})}`,e)\n    }\n  }\n  \n  private async getAccessToken() {\n    return await AccessService.getAccessToken();\n  }\n}\n\nexport const LogsService = LogRestService.getInstance();","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"http://localhost:8080/admin\".replace(/\\/+$/, \"\");\n\nconst isBlob = (value: any) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private middleware: Middleware[];\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    protected async request(context: RequestOpts): Promise<Response> {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n    private createFetchParams(context: RequestOpts) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = (context.body instanceof FormData || context.body instanceof URLSearchParams || isBlob(context.body))\n\t    ? context.body\n\t    : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url,\n                    init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | ((name?: string, scopes?: string[]) => string); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath || BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name: string, scopes?: string[]) => string) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers():  HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value as HTTPQuery, fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value() {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value() {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value() {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value() {\n        return await this.raw.text();\n    };\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface VerboseModeRequest\n */\nexport interface VerboseModeRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof VerboseModeRequest\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof VerboseModeRequest\n     */\n    type?: VerboseModeRequestTypeEnum;\n    /**\n     * \n     * @type {boolean}\n     * @memberof VerboseModeRequest\n     */\n    enable?: boolean;\n}\n\nexport function VerboseModeRequestFromJSON(json: any): VerboseModeRequest {\n    return VerboseModeRequestFromJSONTyped(json, false);\n}\n\nexport function VerboseModeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerboseModeRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'enable': !exists(json, 'enable') ? undefined : json['enable'],\n    };\n}\n\nexport function VerboseModeRequestToJSON(value?: VerboseModeRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'type': value.type,\n        'enable': value.enable,\n    };\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum VerboseModeRequestTypeEnum {\n    SESSIONPOOL = 'SESSION_POOL',\n    SERVER = 'SERVER'\n}\n\n\n","import { showToastOk, showToastErr } from './../components/basic/Toast/Toast';\nimport { VerboseModeRequestTypeEnum } from '@/gen/models/VerboseModeRequest';\nimport { overviewApi, getAuthenticationHeaders, handleRestError} from '@/utils';\nimport {AccessService} from './AccessHandlerService';\nimport i18n from '@/i18n';\n\n\nclass OverviewRestService {\n  \n  private static _instance:OverviewRestService = new OverviewRestService();\n  \n  \n  constructor() {\n    if(OverviewRestService._instance){\n      throw new Error(\"Error: Instantiation failed: Use OverviewRestService.getInstance() instead of new.\");\n    }\n    OverviewRestService._instance = this;\n  }\n  \n  public static getInstance():OverviewRestService\n  {\n    return OverviewRestService._instance;\n  }\n\n  async getOverview() {\n    try {\n      const Api = overviewApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await Api.getOverview();\n    } catch (e) {\n        handleRestError(i18n.t('error.getOverview'),e)\n    }\n  }\n\n  async setVerboseMode(id: string, enable: boolean, type: 'sp' | 'server') {\n    try {\n      const Api = overviewApi(getAuthenticationHeaders(await this.getAccessToken()));\n      await Api.setVerboseMode({\n        verboseModeRequest: {\n          enable, id, type: type === 'server' ? VerboseModeRequestTypeEnum.SERVER : VerboseModeRequestTypeEnum.SESSIONPOOL\n        }\n      });\n      showToastOk(i18n.t(\"overview.verboseMode\")+' '+ (enable ? i18n.t('general.enabled'):i18n.t('general.disabled')))\n    } catch (e) {\n      handleRestError(i18n.t('error.updateVerboseFailed'),e)\n    }\n  }\n\n  async requestSessionPoolDrainMode(id: string, message = true) {\n    try {\n      const Api = overviewApi(getAuthenticationHeaders(await this.getAccessToken()));\n      let promise = await Api.requestSessionPoolDrainMode({id});\n      if(message) {\n        showToastOk(i18n.t('ok.spDrainActivated'))\n      }\n      return promise;\n    } catch (e) {\n      handleRestError(i18n.t('error.cannotSetDrain'),e)\n    }\n  }\n\n  async requestSessionPoolResume(id: string, message = true) {\n    try {\n      const Api = overviewApi(getAuthenticationHeaders(await this.getAccessToken()));\n      let promise = await Api.requestSessionPoolResume({id});\n      if(message) {\n        showToastOk(i18n.t('ok.spResumed'))\n      }\n      return promise;\n    } catch (e) {\n      handleRestError(i18n.t('error.cannotResumeSP'),e)\n    }\n  }\n\n  async requestSessionPoolStop(id: string, message = true) {\n    try {\n      const Api = overviewApi(getAuthenticationHeaders(await this.getAccessToken()));\n      let promise = await Api.requestSessionPoolStop({id});\n      if (message) {\n        showToastOk(i18n.t('ok.spStopped'))\n      }\n      return promise;\n    } catch (e) {\n      handleRestError(i18n.t('error.cannotStopSP'),e)\n    }\n  }\n\n  private async getAccessToken() {\n    return await AccessService.getAccessToken();\n  }\n  \n}\n\nexport const OverviewService = OverviewRestService.getInstance();","// core\nimport React, { memo, useCallback } from 'react'\n\nimport classnames from 'classnames'\n\n// components\nimport { IComponentProps } from '@/components'\n\n// utils\nimport { runCallback } from '@/utils'\n\n// styles\nimport css from './Icon.module.scss'\n\nexport type IconColor =\n  | 'primary'\n  | 'white'\n  | 'light'\n  | 'blue'\n  | 'neutral'\n  | 'success'\n  | 'warning'\n  | 'danger'\n  | 'txt'\n\nexport type IconSize = 'mini' | 'small' | 'medium' | 'large' | 'extraLarge' | string\n\nexport interface IIconProps extends IComponentProps {\n  title?: string\n  /**\n   * Name from Material Icons\n   */\n  name: string\n  /**\n   * Icon color\n   */\n  color?: IconColor\n  /**\n   * Size of icon\n   */\n  size?: IconSize\n  /**\n   * On click event\n   */\n  onClick?: () => void\n}\n\nexport const Icon = memo(function Icon({\n  className,\n  name,\n  title,\n  color,\n  size = 'medium',\n  onClick,\n}: IIconProps) {\n  const handleClick = useCallback(() => runCallback(onClick), [onClick])\n\n  return (\n    <i\n      title={title}\n      className={classnames(\n        'material-icons',\n        css.root,\n        color ? css[color] : '',\n        css[size],\n        className\n      )}\n      onClick={handleClick}>\n      {name}\n    </i>\n  )\n})\n","// .core\nimport React from 'react'\n// components\nimport {} from '../Button/Button'\nimport { Icon } from '../Icon/Icon'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './Avatar.module.scss'\n// utils\nimport { TIcon } from '@/utils'\n\ninterface IAvatarProps {\n  className?: string\n  icon?: TIcon | string\n  /**\n   * Src path to an image\n   */\n  src?: string\n  /**\n   * 1-2 letter long label to display instead of an image\n   *\n   * Can also be used as a image fallback for `alt` if it fails to load\n   */\n  label?: string\n  size?: 'small' | 'medium' | 'large' | 'huge'\n  shape?: 'circle' | 'round' | 'square' | 'expandableCircle'\n  style?: React.CSSProperties\n  onClick?(): void\n  bExpanded?:boolean\n}\n\nexport const Avatar = React.forwardRef(\n  (\n    {\n      className,\n      icon,\n      label,\n      size = 'medium',\n      src,\n      shape = 'circle',\n      style,\n      onClick,\n      bExpanded=false\n    }: IAvatarProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => (\n    <div\n      ref={ref}\n      className={cx(css.wAvatar, css[shape], css[size], className, {[css.expanded]:bExpanded})}\n      style={style}\n      onClick={onClick}>\n      {/* ICON */}\n      {icon && !src && <Icon name={icon} />}\n\n      {/* LABEL */}\n      {label && !icon && !src && <span>{label}</span>}\n\n      {/* IMAGE */}\n      {src && !icon && <img alt={label || 'avatar'} className={css.wImg} src={src} />}\n      {!src && !label && !icon && <Icon name=\"person\" />}\n    </div>\n  )\n)\n\ninterface IAvatarGroupProps {\n  avatars: IAvatarProps[]\n  className?: string\n  /**\n   * Ammount of avatars to display - all remaining ones will be grouped into 1 w/ label of their count\n   */\n  limit?: number\n}\n\nexport const AvatarGroup = ({ avatars, className, limit }: IAvatarGroupProps) => (\n  <div className={cx(css.wAvatarGroup, className)}>\n    {avatars.slice(0, limit).map((avatar, index) => (\n      <Avatar\n        {...avatar}\n        key={'avatar_' + index}\n        className={cx(css.wAvatarStack, avatar.className)}\n        style={{ zIndex: avatars.length - index }}\n        onClick={avatar.onClick}\n      />\n    ))}\n\n    {/* REMAINING GROUPED AVATARS */}\n    {limit && avatars.length > limit && <Avatar label={`+${avatars.length - limit}`} />}\n  </div>\n)\n","// .core\nimport React from 'react'\n// libraries\nimport cx from 'classnames'\nimport RCTooltip from 'rc-tooltip'\n// styles\n// import 'rc-tooltip/assets/bootstrap.css'\nimport 'rc-tooltip/assets/bootstrap_white.css'\n// import css from './Tooltip.module.scss'\n// utils\nimport { TPos } from '@/utils'\n\ninterface ITooltipProps {\n  /**\n   * A custom component to draw instead of the defaul arrow\n   *\n   * #NOTE: If not specified a global class will be applied which hides the default arrow (more in styles/index.scss at rc-no-arrow class)\n   */\n  arrow?: React.ReactNode\n  /**\n   * Type of animation to play for the tooltip\n   *\n   * MORE INFO AT: https://github.com/react-component/animate\n   */\n  animation?: string\n  /**\n   * Whether the Tooltip should get destroyed and unmounted once it closes\n   */\n  bUnmountOnClose?: boolean\n  /**\n   * Elements to display the tooltip around when hovering over them\n   */\n  children: React.ReactElement<React.ReactNode>\n  /**\n   * Classname applied to the entire tooltip overlay\n   */\n  className?: string\n  /**\n   * Content of the tooltip to display\n   */\n  content: React.ReactNode\n  /**\n   * Delay of showing the tooltip in miliseconds\n   *\n   * @default 250\n   */\n  delay?: number\n  /**\n   * Margin offset of the tooltip on the X axis, value is linked to the `position` prop\n   *\n   * @default 0\n   */\n  offsetX?: number\n  /**\n   * Margin offsets of the tooltip on the Y axis, value is linked to the `position` prop\n   *\n   * @default 0\n   */\n  offsetY?: number\n  /**\n   * Position of the tooltip relevant to the element it's wrapping\n   *\n   * @default 'bottom'\n   */\n  position?: TPos\n  /**\n   * Styling of the tooltip\n   */\n  styleOverlay?: React.CSSProperties\n  /**\n   * Styling of the tooltip's content\n   */\n  styleOverlayContent?: React.CSSProperties\n  /**\n   * How the Tooltip should be triggered, either by clicking its childrend or hovering over them\n   */\n  trigger?: 'click' | 'hover'\n}\n\nexport const Tooltip = ({\n  animation,\n  arrow,\n  bUnmountOnClose,\n  children,\n  className,\n  content,\n  delay,\n  offsetX = 0,\n  offsetY = 0,\n  position = 'bottom',\n  styleOverlay,\n  styleOverlayContent,\n  trigger = 'hover',\n}: ITooltipProps) => (\n  <RCTooltip\n    align={{ offset: [offsetX, offsetY] }}\n    arrowContent={arrow}\n    destroyTooltipOnHide={bUnmountOnClose}\n    mouseEnterDelay={delay}\n    mouseLeaveDelay={delay}\n    overlay={content}\n    overlayClassName={cx(!arrow && 'rc-no-arrow', className)}\n    overlayInnerStyle={styleOverlayContent}\n    overlayStyle={styleOverlay}\n    placement={position}\n    transitionName={animation}\n    trigger={trigger}>\n    {children}\n  </RCTooltip>\n)\n","// .core\nimport React, { ReactNode } from 'react'\n// components\nimport { Icon } from '../Icon/Icon'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './Chip.module.scss'\nimport { CoinColor, CoinSize } from '../Coin/Coin'\nimport { Tooltip } from '../Tooltip/Tooltip'\ninterface IChipProps {\n  children?: ReactNode\n  bDisabled?: boolean\n  className?: string\n  label?: string\n  tooltip?: string\n  color?: CoinColor\n  type?: 'fill' | 'outline'\n  onClick?(): void\n  toggleHover?(): void\n  onDelete?(): void\n  /**\n   * Coin size\n   */\n   size?: CoinSize\n}\n\nexport const Chip = ({\n  children,\n  bDisabled,\n  className,\n  color = 'blue',\n  size = 'medium',\n  label,\n  tooltip,\n  type = 'fill',\n  onClick,\n  toggleHover,\n  onDelete,\n}: IChipProps) => {\n  const _onClick = () => {\n    !bDisabled && onClick && onClick()\n  }\n\n  const _onDelete = () => {\n    !bDisabled && onDelete && onDelete()\n  }\n\n  const ChipContent = () => {\n    return (\n      <div\n        className={cx(\n          css.wChip,\n          css[type],\n          css[size],\n          css[color],\n          onClick && 'gClickable',\n          bDisabled && css.bDisabled,\n          className\n        )}\n        onMouseEnter={toggleHover}\n        onMouseLeave={toggleHover}\n        onClick={_onClick}>\n        {/* LABEL */}\n        {label && <span>{label}</span>}\n        {children? children:null}\n        {/* DELETE */}\n        {onDelete && <Icon name=\"x-circle\" onClick={_onDelete} />}\n      </div>\n    );\n  };\n\n  return (\n      tooltip ?\n        <Tooltip content={tooltip}>\n          <span>\n            <ChipContent />\n          </span>\n        </Tooltip>\n      :\n      <ChipContent />\n  )\n}\n","// core\nimport React from 'react'\n\n// libraries\nimport classnames from 'classnames'\n\n// components\nimport { IWrapperComponentProps } from '@/components'\n\n// styles\nimport css from './Coin.module.scss'\n\nexport type CoinColor = 'white' | 'neutral' | 'primary' | 'success' | 'blue' | 'danger' | 'warning'\n\nexport type CoinSize = 'small' | 'medium' | 'large'\n\nexport interface ICoinProps extends IWrapperComponentProps {\n  /**\n   * Styling of the coin, default theme color will be used if none specified.\n   */\n  color?: CoinColor\n  /**\n   * Coin size\n   */\n  size?: CoinSize\n\n  onClick?: () => void\n  toggleHover?: () => void\n}\n\nexport const Coin = ({ children, onClick,toggleHover, color = 'primary', className, size = 'medium' }: ICoinProps) => {\n  return <div onClick={onClick} onMouseEnter={toggleHover} onMouseLeave={toggleHover} className={classnames(css.root, css[color], css[size], className)}>{children}</div>\n}\n","// core\nimport React, { ReactNode } from 'react'\n\nimport classnames from 'classnames'\n\n// components\nimport { IWrapperComponentProps } from '@/components'\n\nimport { Chip } from '../Chip/Chip'\nimport { Coin, ICoinProps } from '../Coin/Coin'\n\n// style\nimport css from './Badge.module.scss'\n\nexport interface IBadgeProps extends IWrapperComponentProps, ICoinProps {\n  /**\n   * Display content in badge\n   */\n  content: null | number | string | ReactNode\n  /**\n   * Choose side to render badge\n   */\n  side?: 'left' | 'right'\n  /**\n   * Choose where verticaly render badge\n   */\n  vertical?: 'top' | 'bottom'\n  /**\n   * onClick function\n   */\n  bOnBadge?:boolean\n  onClick?: () => void\n  onHover?: () => void\n}\n\n/**\n * Count badge displayed at the top corner for any component which it wraps\n */\nexport const Badge = ({\n  content,\n  side = 'right',\n  vertical = 'top',\n  color = 'primary',\n  size = 'medium',\n  children,\n  className,\n  onClick,\n  onHover,\n  bOnBadge=false,\n  classes = {},\n}: IBadgeProps) => {\n  const shouldRenderCoin = !(typeof content === 'string' && content.length >= 2)\n  const BadgeComponent = shouldRenderCoin ? Coin : Chip\n\n  return (\n    <div\n      className={classnames(css.root, css[side], css[vertical], css[color], className)}\n      onClick={bOnBadge?undefined:onClick}\n      >\n      {children}\n\n      {content ? (\n        <BadgeComponent\n          className={classnames(css.badge, css[size], classes.badge)}\n          color={color}\n          size={size}\n          onClick={bOnBadge?onClick:undefined}\n          toggleHover={onHover}\n          >\n          {content}\n        </BadgeComponent>\n      ) : null}\n    </div>\n  )\n}\n","import { makeAutoObservable, runInAction } from 'mobx'\nimport { AccessService } from '@/services'\nimport { basicApi, getAuthenticationHeaders, handleRestError } from '@/utils';\nimport { computedFn } from 'mobx-utils'\nimport {Permissions as IPermissions} from '@/gen'\nimport { RootStore } from './RootStore';\n\nclass PermissionsStore {\n  private rootStore: RootStore | undefined;\n  private permissionsL: IPermissions = this.newPermissions();\n  checkingPermissions:boolean = true\n\n  constructor(rootStore?: RootStore) {\n    makeAutoObservable(this)\n    this.rootStore = rootStore;\n  }\n\n  get permissions() {\n    return this.permissionsL\n  }\n\n  reload = async() => {\n    try {\n      const accessToken = await this.getAccessToken();\n      const appApi = basicApi(getAuthenticationHeaders(accessToken));\n      const data = await appApi.getPermissions();\n      if (data) {\n        runInAction(() => {\n          this.permissionsL = {...this.permissionsL, ...data}\n          this.checkingPermissions = false;\n        })\n      }\n    } catch (e) {\n      handleRestError('failed to reload permissions', e)\n    }\n  }\n\n  get = computedFn(function (this: PermissionsStore, item:keyof IPermissions) {\n    return this.permissionsL[item] as boolean | null | string\n  })\n\n  public isLoggedIn() {\n    const perm = this.permissions;\n    return perm != null && perm.user != null;\n  }\n\n  private newPermissions() {\n\t  return {\n\t    configEdit: false,\n\t    configSwingEdit: false\n\t  };\n  }\n\n  private async getAccessToken() {\n    return await AccessService.getAccessToken();\n  }\n  \n}\n\nexport default PermissionsStore;","import { makeAutoObservable, runInAction } from 'mobx'\nimport { ApplicationInfo, BasicApplicationInfo, InstanceManagerStatus } from '@/gen/models'\nimport { ConfigService } from '@/services'\nimport { computedFn } from 'mobx-utils'\nimport { ApiServerUrl, getServerStatuses, jsonToCssVariables, toPath } from '@/utils'\nimport i18n from '@/i18n'\nimport { makeLocalStorage } from '@/stores'\n\ninterface IErrorView {\n  header?:string,\n  bLoginBtn?:boolean,\n  bTryAgainBtn?:boolean,\n  subtitle?: string,\n}\n\nclass GlobalStore {\n\n  serverUrl: string = ''\n  loader: boolean = false\n  leftSideMenuOpen: boolean = true\n  rightSideMenuOpen: boolean = false\n  modalOpen: boolean = false\n  toggleSearch:boolean = true;\n  toggleAddApp:boolean = false;\n  appL: string = ''\n  paths?: Array<BasicApplicationInfo> = [];\n  info?: ApplicationInfo;\n  interval: NodeJS.Timeout | undefined\n  filterTableToggle:boolean = false;\n  showErrorView:boolean= false; \n  errorView:IErrorView | undefined; \n  availableLangs:{code:string,name:string}[]=[]\n  customization:{logo:string,logoCollapsed:string,footerHTML:string,themeVariables:string} | undefined;\n  isDuplicate:boolean= false; \n  isQuickStartView: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this)\n    \n    makeLocalStorage(this, 'global', ['leftSideMenuOpen']);\n  }\n\n  toggleModal = () => {\n    this.modalOpen = !this.modalOpen\n  }\n\n  setIsDuplicate = (state:boolean) => {\n    this.isDuplicate = state\n  }\n\n  toggleErrorView(state?:boolean, errorView?:IErrorView) {\n    this.showErrorView = typeof state === 'boolean'  ? state : !this.showErrorView\n    if(this.showErrorView) {\n      this.errorView = errorView\n    } else {\n      this.errorView = undefined\n    }\n  };\n\n  toggleQuickstartView(state: boolean) {\n    this.isQuickStartView = state;\n  };\n\n  setToggleSearch = (state?:boolean) => {\n    if(!this.toggleSearch) {\n      this.leftSideMenuOpen = true;\n    }\n    this.toggleSearch = typeof state === 'boolean'  ? state : !this.toggleSearch\n  }\n\n  setToggleAddApp = (state?:boolean) => {\n    if(!this.toggleAddApp) {\n      this.leftSideMenuOpen = true;\n    }\n    this.toggleAddApp = typeof state === 'boolean'  ? state : !this.toggleAddApp\n  }\n\n  toggleRightSideMenu = () => {\n    this.rightSideMenuOpen = !this.rightSideMenuOpen\n  }\n\n  toggleLeftSideMenu = (state?:boolean) => {\n    if(this.toggleAddApp) {\n      this.toggleAddApp = false;\n    }\n    this.leftSideMenuOpen = typeof state === 'boolean' ? state : !this.leftSideMenuOpen;\n    this.toggleSearch = this.leftSideMenuOpen;\n  }\n\n  updateApp = (app?:string) => {\n    this.appL = app ? app: ''\n  }\n  get app() {\n    return this.appL ? this.appL : ''\n  }\n\n  createApp = async (appPath:string, appName:string, copyApp?:string) => {\n    if(appPath) {\n      ConfigService.create(appPath,appName).then(async () => {\n        this.clearInterval();\n        if(this.isDuplicate && copyApp) {\n          const data = await ConfigService.getConfig(copyApp);\n          if(data) {\n            if(data.webConfig?.data?.name) {\n              data.webConfig.data.name = appName as any\n            }\n            ConfigService.setConfig(data, appPath)\n          }\n          this.setIsDuplicate(false);\n        }\n        this.loadPaths();\n      })\n    }\n    return\n  }\n\n  removePath(path:string) {\n    this.clearInterval()\n    this.paths = this.paths?.filter((app)=> app.path !== '/'+path)\n  }\n\n  loadAvailableLangs = async () => {\n    try {\n      await fetch(toPath(ApiServerUrl,'locales/select.json'))\n        .then(response => response.json())\n        .then(data => {\n          if(data) {\n            runInAction(() => {\n              this.availableLangs = data\n            })\n\n            // set prefered lang\n            if(!localStorage.getItem('langsWereLoaded') || data.length <= 1) {\n              localStorage.setItem('langsWereLoaded','true');\n              if(data.filter((l:any)=>l.code === navigator.language).length === 0) {\n                i18n.changeLanguage(data[0].code)\n                if(!i18n.getDataByLanguage(i18n.language)) {\n                  const fallbackLang = i18n.options.fallbackLng as string[];\n                  i18n.changeLanguage(fallbackLang[0])\n                }\n              } else {\n                i18n.changeLanguage(navigator.language)\n              }\n            }\n          }\n          return data\n        });\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n\n  loadCustomizationConfig = async () => {\n    try {\n      await fetch(toPath(ApiServerUrl,'custom/settings.json'))\n        .then(response => response.json())\n        .then(data => {\n          if(data) {\n            runInAction(() => {\n              this.customization = data\n              this.customization!.themeVariables = jsonToCssVariables(data.themeVariables)\n            })\n          }\n          return data\n        });\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n  loadServerUrl = async () => {\n    try {\n      const data = await ConfigService.getServerUrl();\n      if(data) {\n        runInAction(() => {\n          this.serverUrl = data\n        })\n      }\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n\n  loadPaths = async () => {\n    try {\n      const data = await ConfigService.getPaths();\n      if(data) {\n        runInAction(() => {\n          this.paths = data\n        })\n      }\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n\n  loadInfo = async (appPath?:string) => {\n    try {\n      const data = await ConfigService.getInfo(appPath ? appPath :'');\n      if(data) {\n        runInAction(() => {\n          this.info = data\n        })\n      }\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n  \n  setInterval(callback:any, delay:number) {\n    this.interval = setInterval(() => {\n      callback()\n    }, delay);\n  }\n\n  clearInterval() {\n    if(this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  setEnabled(bool:true) {\n    this.info!.enabled = bool;\n  }\n\n  get isCluster():boolean {\n    return this.info?.cluster ? true:false\n  }\n\n  countStatuses = computedFn(function countStatuses(this: GlobalStore, status:InstanceManagerStatus[], which: string):number {\n    const obj:any = getServerStatuses(status)\n    return obj[which] ? obj[which] : null;\n  });\n\n}\n\nexport default GlobalStore;","import { makeAutoObservable, runInAction } from 'mobx'\nimport { OverviewService, SessionsService } from '@/services'\nimport {ServerInfo} from '@/gen/models/ServerInfo'\nimport {SessionPoolInfo} from '@/gen/models/SessionPoolInfo'\nimport { computedFn } from 'mobx-utils';\nimport { showToastOk } from '@/components';\nimport i18n from '@/i18n';\nimport { makeLocalStorage } from '@/stores';\n\nclass OverviewStore {\n\n  servers?: Array<ServerInfo> = [];\n  sessionPools?: Array<SessionPoolInfo> = [];\n  searchTerm:string='';\n  spView:string='grid';\n  orderBy:string='sp';\n  showStopped: boolean = true;\n\n  constructor() {\n    makeAutoObservable(this)\n\n    makeLocalStorage(this, 'overview', ['spView', 'orderBy', 'showStopped'])\n  }\n\n  toggleShowStopped() {\n    this.showStopped = !this.showStopped;\n  }\n\n  setSpView(view:string) {\n    if(this.spView !== view) {\n      this.spView = view;\n    }\n  }\n\n  setOrderBy(by:string) {\n    if(this.orderBy !== by) {\n      this.orderBy = by;\n    }\n  }\n\n  setSearchTerm(term:string) {\n    if(this.searchTerm !== term) {\n      this.searchTerm = term;\n    }\n  }\n\n  loadOverview = async () => {\n    try {\n      const data = await OverviewService.getOverview();\n      if(data) {\n        runInAction(() => {\n          this.servers = data.servers\n          this.sessionPools = data.sessionPools\n        })\n      }\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n\n  toggleVerbose(sp: SessionPoolInfo | ServerInfo, type:\"sp\" | \"server\") {\n    if (typeof sp.verboseLogging === 'boolean') {\n      OverviewService.setVerboseMode(sp.id!, !sp.verboseLogging, type)\n      .then(()=>{\n        setTimeout(()=>this.loadOverview(),2200)\n      });\n    }\n  }\n\n  toggleDrain(sp: SessionPoolInfo) {\n    if(sp.drainMode) {\n      return OverviewService.requestSessionPoolResume(sp.id!)\n      .then(()=>{\n        setTimeout(()=>this.loadOverview(),2200)\n      });\n    }\n    return OverviewService.requestSessionPoolDrainMode(sp.id!)\n    .then(()=>{\n      setTimeout(()=>this.loadOverview(),2200)\n    });\n  }\n\n  shutdown(sp: SessionPoolInfo) {\n    SessionsService.getSessions('').then((result=>{\n        let spSessions = result?.sessions?.filter(s=>s.sessionPoolId===sp.id)\n        spSessions?.forEach(s=>{\n          SessionsService.killSession(s.applicationPath!,s.id!);\n        })\n        showToastOk(i18n.t('ok.reqShutdownSessinos',{spLenght:spSessions?.length}))\n    }))\n    .catch((e: any) => {\n      console.error(e);\n    });\n  }\n\n  stop(id:string) {\n    return OverviewService\n    .requestSessionPoolStop(id)\n    .then(()=>{\n      setTimeout(()=>this.loadOverview(),2200)\n    })\n    .catch((e: any) => {\n      console.error(e);\n    });\n  }\n\n  drainAllSessionPools() {\n    this.allSessionPoolIds?.forEach((id) => {\n      OverviewService.requestSessionPoolDrainMode(id!, false);\n    });\n    showToastOk(i18n.t(\"ok.reqDrainSessinos\",{spIdsLenght:this.allSessionPoolIds?.length}))\n  }\n\n  resumeAllSessionPools() {\n    this.allSessionPoolIds?.forEach((id) => {\n      OverviewService.requestSessionPoolResume(id!, false);\n    });\n    showToastOk(i18n.t('ok.reqResumeSessinos',{allspIds:this.allSessionPoolIds?.length}))\n  }\n\n  stopAllSessionPools() {\n    this.allSessionPoolIds?.forEach((id) => {\n      OverviewService.requestSessionPoolStop(id!, false);\n    });\n    showToastOk(i18n.t('ok.reqStopSessinos',{spSessions:this.allSessionPoolIds?.length}))\n  }\n\n  shutdownAllSessions() {\n    SessionsService.getSessions('').then((result=> {\n      let spSessions = result?.sessions;\n      spSessions?.forEach(s=>{\n        SessionsService.killSession(s.applicationPath!,s.id!);\n      })\n      showToastOk(i18n.t('ok.reqShutdownSessinos',{spLenght:spSessions?.length}))\n    }))\n  }\n\n  forceKillAllSessions() {\n    SessionsService.getSessions('').then((result=> {\n      let spSessions = result?.sessions;\n      spSessions?.forEach(s=>{\n        SessionsService.forceKillSession(s.applicationPath!,s.id!);\n      })\n      showToastOk(i18n.t('ok.reqForceKillSessinos', {spSessions:spSessions?.length}))\n    }))\n  }\n  \n  // GETTERS & COMPUTED\n  get allSessionPoolIds() {\n    return this.sessionPools?.map(sp => sp.id);\n  }\n  \n  get isThereAnyServerVerbose() {\n    return this.servers?.filter((s)=>s.verboseLogging === true).length! > 0\n  }\n  get isThereAnySPVerbose() {\n    return this.sessionPools?.filter((s)=>s.verboseLogging === true).length! > 0\n  }\n  \n  get anyStoppedSP() {\n    return this.sessionPools?.filter((s)=>s.stopped === true).length! > 0\n  }\n\n  get isCluster() {\n    return this.servers && this.servers[0] ? this.servers[0].cluster: false\n  }\n\n  get filteredSPs() {\n    return this.sessionPools?.filter(item => {\n      if (item.stopped && !this.showStopped) {\n        return false;\n      }\n      if (!this.searchTerm) {\n        return true;\n      }\n      return item.id?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase());\n    });\n  }\n  get filteredServers() {\n    return !this.searchTerm? \n    this.servers\n    : this.servers?.filter(item => item.id?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase()));\n  }\n  get hasRunningSessions() {\n    let result:number=0;\n    this.sessionPools?.forEach(sp=> {\n      for (const [key, value] of Object.entries(sp.apps!)) {\n        result= result + (value as number)\n      }\n    });\n    return result>0\n  };\n\n  hasRunningInstances = computedFn(function hasRunningInstances(this: OverviewStore,apps:{ [key: string]: number; }){\n    let result: number = 0;\n    if(apps) {\n      for (const [key, value] of Object.entries(apps)) {\n          result = result + (value as number)\n      }\n    }\n    return result > 0\n  });\n\n\n  appOnSP = computedFn(function appOnSP(this: OverviewStore,path?:string):number{\n    let sumSP = 0\n    this.sessionPools?.forEach(sp => {\n      Object.entries(sp.apps!).forEach(app=>{\n        if(app[0] === path)\n        sumSP++\n      })\n    });\n    return sumSP\n  });\n}\n\nexport default OverviewStore;","import { makeAutoObservable, runInAction, toJS } from 'mobx'\nimport { ConfigService } from '@/services'\nimport { Config, MetaObject } from '@/gen/models'\nimport { ApiServerUrl, getAllConfigData, ITab, parseObject } from '@/utils';\nimport { showToastOk } from '@/components';\nimport i18n from '@/i18n';\nimport { makeLocalStorage } from '@/stores';\n\nclass ConfigStore {\n\n  config?: Config;\n  origConfig?: Config;\n  tabs: ITab[] = [];\n  origTabs?: ITab[] = [];\n  activeTab:string ='webConfig';\n  lastTab:string='';\n  wcChanged: boolean = false;\n  acChanged: boolean = false;\n  allConfigWasEdited: boolean = false;\n  filterToggle:boolean = false;\n  searchTerm:string=''\n  appView:string='grid'\n\n  constructor() {\n    makeAutoObservable(this)\n\n    makeLocalStorage(this, 'apps', ['appView' ])\n  }\n\n  setFilterToggle(bool?:boolean) {\n    this.searchTerm = ''\n    this.filterToggle = bool ? bool : !this.filterToggle;\n  }\n\n  setSearchTerm(term:string) {\n    if(this.searchTerm !== term) {\n      this.searchTerm = term;\n    }\n  }\n\n  setAppConfig(configs: { [key: string]: MetaObject; }) {\n    this.config!.appConfig = {\n      ...this.config!.appConfig,\n      ...configs\n    }\n  }\n\n  setAppView(view:string) {\n    if(this.appView !== view) {\n      this.appView = view;\n    }\n  }\n\n  get activeApply() {\n    return (this.acChanged || this.wcChanged);\n  }\n\n  compareConfig(identify:string) {\n    if(this.origConfig && this.config) {\n      parseObject(getAllConfigData(toJS(this.origConfig))).isEqual(getAllConfigData(toJS(this.config))) \n      ? \n      this.activeTab !== 'webConfig' ? this.acChanged = false :  this.wcChanged = false\n      :\n      this.activeTab !== 'webConfig' ? this.acChanged = true :  this.wcChanged = true\n    }\n    // SP tabs\n    if(identify !== 'webConfig') {\n      this.tabs = this.tabs.map(tab => {\n        if(this.acChanged) {\n          this.allConfigWasEdited = 'allID' === identify ? true : this.allConfigWasEdited;\n          tab = tab.key === identify ? { ...tab, wasEdited:true } : tab\n        } else {\n          this.allConfigWasEdited = 'allID' === identify ? false : this.allConfigWasEdited;\n          tab = tab.key === identify ? { ...tab, wasEdited:false } : tab\n        }\n        return tab\n      });\n    }\n  }\n\n  activeSpSwitch(pTab:ITab) {\n    this.tabs.map((tab)=>{\n      if(tab.key === pTab.key) {\n        tab.activeSP = !tab.activeSP\n      }\n    })\n\n    if(this.hasOnlyOneActive) {\n      this.tabs.map((t:ITab)=>t.tabVisible = false);\n      this.openTab(this.tabs.filter(t => t.activeSP === true)[0].key);\n    } else {\n      this.openTab('allID');\n    }\n    // compare with original\n    const origTab = this.origTabs!.filter(t => t.key === pTab.key)[0].activeSP;\n    if(origTab === pTab.activeSP && !this.activeApply) {\n      this.acChanged = true;\n    } else {\n      this.acChanged = true;\n    }\n  }\n\n  clearConfigData = () => {\n    this.origConfig = {};\n    this.config = {};\n    this.acChanged = false;\n    this.wcChanged = false;\n    this.allConfigWasEdited = false;\n    this.tabs = []\n    this.origTabs = []\n  }\n\n  loadConfig = async (app?:string) => {\n    try {\n      const data = await ConfigService.getConfig(app?app:'');\n      if(data) {\n        runInAction(() => {\n          this.clearConfigData()\n          this.origConfig = data\n          this.config = data\n          this.acChanged = false\n          this.wcChanged = false\n          this.allConfigWasEdited = false\n          if(app && !this.tabs.length) {\n            for(const prop in this.config.appConfig) {\n              this.tabs.push({\n                key:prop,\n                wasEdited:false,\n                tabVisible:false,\n                activeSP: this.config.appConfig[prop].data? true : false\n              })\n            }\n          }\n\n          if(!this.activeTabExists) {\n            this.openTab('webConfig');\n          }\n          this.origTabs = parseObject(this.tabs!).clone();\n        })\n      }\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n\n  updateConfigStore = (config:any, property?:'webConfig'| 'appConfig') => {\n    if(property) {\n      this.config![property] = config[property]\n    } else {\n      this.config = config\n    }\n  }\n\n  resetConfig = (app?:string) => {\n    this.config = parseObject(this.origConfig!).clone();\n    this.tabs = JSON.parse(JSON.stringify(this.origTabs))\n    this.loadConfig(app);\n  }\n\n  setConfig = (app?:string) => {\n    this.tabs.map(tab => {\n      if(!tab.activeSP) {\n        delete this.config?.appConfig![tab.key];\n      }\n      if(tab.wasEdited) {\n        tab.wasEdited = false;\n      }\n    });\n    this.allConfigWasEdited = false;\n    this.updateFormStructure(getAllConfigData(this.config),app)\n    .then(()=>{\n      ConfigService.setConfig(this.config!, app?app:ApiServerUrl)\n      .then(()=>{\n        setTimeout(async() => await this.loadConfig(app), 50);\n        showToastOk(i18n.t('ok.changesAppliedSuccess'));\n      })\n    })\n  }\n\n  updateFormStructure = async (config:Config, app?:string) => {\n    const data = await ConfigService.getMeta(app?app:ApiServerUrl, config);\n    if(data) {\n      runInAction(() => {\n        this.config = {...this.config, ...data}\n      })\n    }\n  }\n\n  onRequestUpdate = (app?:string) => {\n    this.updateFormStructure(getAllConfigData(this.config), app)\n  }\n\n  // TABS SP Maniupulation for cluster\n\n  public openTab(key: string) {\n    if(key !== 'webConfig') {\n      this.lastTab = key\n    }\n    if(key !== 'allID' && key !== 'webConfig') {\n      const tabIndex = this.tabs.findIndex((tab => tab.key === key));\n      if(tabIndex !== -1) {\n        this.tabs[tabIndex].tabVisible = true;\n      }\n    }\n    this.activeTab = key;\n  }\n\n  isTab(key?:string) {\n    if(this.activeTab === 'allID' || this.activeTab === 'webConfig') {\n      return false\n    }\n    return key ? this.activeTab === key : true;\n  }\n\n  get hasOnlyOneActive() {\n    return this.tabs.filter(tab => tab.activeSP === true).length === 1;\n  }\n\n  get activeTabExists() {\n    return this.tabs.filter(t=>t.key==this.activeTab).length > 0;\n  }\n\n  get activeTabs() {\n    return this.tabs.filter(t=>t.activeSP==true);\n  }\n  get inactiveTabs() {\n    return this.tabs.filter(t=>t.activeSP==false);\n  }\n\n  get hasAllActive() {\n    return this.activeTabs.length === this.tabs.length;\n  }\n\n  get hasAllInactive() {\n    return this.inactiveTabs.length === this.tabs.length;\n  }\n\n  get hideALL() {\n    return this.hasOnlyOneActive || this.hasAllInactive;\n  }\n\n  get allOrOne() {\n    if(this.lastTab && this.tabs.filter(t=>t.key===this.lastTab).length) {\n      return this.lastTab\n    } else {\n      if(this.isTab() || this.hasOnlyOneActive) {\n        if(this.hasOnlyOneActive) {\n          return this.tabs[0].key\n        }\n        return this.activeTab\n      }\n      return 'allID'\n    }\n  }\n}\n\nexport default ConfigStore;","import { makeAutoObservable, runInAction } from 'mobx'\nimport { SessionsService } from '@/services'\nimport { RecordingInfo, Sessions, SwingSession, ThreadDumpInfo } from '@/gen/models'\nimport { getStatsDataset, parseObject, toPath } from '@/utils';\nimport { IColumns } from '@/components';\nimport { RootStore } from './RootStore';\nimport { makeLocalStorage } from '@/stores';\nimport { computedFn } from 'mobx-utils';\n\ntype tTab = 'sessions' | 'idleSessions' | 'closedSessions' | 'recordings' | 'threadDumps';\n\nclass SessionsStore {\n  private rootStore: RootStore | undefined;\n\n  // sessions\n  sessions: Sessions = {};\n  sessionsTab: tTab = 'sessions';\n  collumns: IColumns<SwingSession>[] = []\n  loading: boolean = false;\n  interval: NodeJS.Timeout | undefined\n  lastUpdated: string | undefined;\n  extendTableToggle?: boolean = false;\n  appPath: string | undefined;\n  visibleColumns: string[] = [\"applicationPath\",\"application\",\"user\",\"userIp\",\"startedAt\",\"connected\",\"warnings\"];\n\n  // session\n  sessionID: string='';\n  activeTab: string= 'view';\n  statisticsLoggingEnabled: boolean |undefined;\n  searchTerm: string=''\n  filterToggle: boolean = false;\n  wasIdleTabAlreadyVisible: boolean = false;\n\n  // thread dumps & recordings \n  recordings: RecordingInfo[] = [];\n  threadDumps: ThreadDumpInfo[] = [];\n\n  constructor(rootStore?: RootStore) {\n    makeAutoObservable(this)\n    this.rootStore = rootStore;\n\n    makeLocalStorage(this, 'sessions', ['visibleColumns']);\n  }\n\n\n  setSessionsTab(tab:tTab) {\n    if (this.sessionsTab !== tab) {\n      this.sessionsTab = tab;\n    }\n  }\n\n  setSessionId(id:string) {\n    if (this.sessionID !== id) {\n      this.sessionID = id;\n    }\n  }\n\n  setSearchTerm(term:string) {\n    if (this.searchTerm !== term) {\n      this.searchTerm = term;\n    }\n  }\n\n  setVisibleColumns(visibleColumns:string[]) {\n    if (visibleColumns) {\n      this.visibleColumns = visibleColumns;\n    }\n  }\n\n  setActiveTab(tab: string) {\n    if (this.activeTab !== tab) {\n      this.activeTab = tab;\n    }\n  }\n\n  setAppPath(appPath: string | undefined) {\n    this.appPath = appPath;\n  }\n\n  setExtendTableToggle(bool?:boolean) {\n    this.extendTableToggle = typeof bool === 'boolean' ? bool : !this.extendTableToggle;\n  }\n  \n  setFilterToggle(bool?:boolean) {\n    this.filterToggle = bool ? bool : !this.filterToggle;\n  }\n\n  shouldShowIdle() {\n    if (this.wasIdleTabAlreadyVisible) {\n      return true;\n    }\n    if (this.sessions != null && this.sessions.idle != null && this.sessions.idle.length > 0) {\n      this.wasIdleTabAlreadyVisible = true;\n    }\n    return this.wasIdleTabAlreadyVisible;\n  }\n\n  showPlayback(app: string, item: RecordingInfo) {\n    this.rootStore?.globalStore.loadInfo(app).then(() => {\n      const fileUrl = toPath(this.rootStore?.globalStore.serverUrl!, app) + \"/rest/recording/\" + item.token + \"/\" \n          + encodeURIComponent(item.sessionPoolId!) + \"/\" + false + \"/\" + encodeURIComponent(item.fileName!);\n      window.open(fileUrl, \"_blank\");\n    });\n  }\n  \n  toggleStatisticsLoggingEnabled(bool?:boolean) {\n    const session = this.session\n    this.statisticsLoggingEnabled = bool ? bool : !this.statisticsLoggingEnabled;\n    SessionsService.toggleStatisticsLogging(session.applicationPath!,session.id!,this.statisticsLoggingEnabled)\n  }\n\n  kill(session: SwingSession) {\n    SessionsService.killSession(session.applicationPath!, session.id!)\n      .then(() => {\n        runInAction(() => {\n          this.clearInterval();\n          this.sessions.sessions = this.sessions.sessions?.filter((s: SwingSession)=>s.id !== session.id)\n        })\n        this.refresh()\n      })\n      .catch((e: any) => {\n        console.error(e);\n    });\n  }\n\n  forceKill(session: SwingSession) {\n    SessionsService.forceKillSession(session.applicationPath!, session.id!)\n      .then(() => {\n        runInAction(() => {\n          this.clearInterval();\n          this.sessions.sessions = this.sessions.sessions?.filter((s: SwingSession)=>s.id !== session.id)\n        })\n        this.refresh()\n      })\n      .catch((e: any) => {\n        console.error(e);\n    });\n  }\n\n  requestThreadDump(session: SwingSession, bSession?:boolean) {\n    SessionsService.requestThreadDump(session.applicationPath!,session.id!)\n      .then(() => {\n        this.refresh(bSession ? session.id : '')\n      })\n      .catch((e: any) => {\n        console.error(e);\n      });\n  }\n\n  startRecording(session: SwingSession, bSession?:boolean){\n    return SessionsService\n      .startRecording(session.applicationPath!, session.id!)\n      .then((data:SwingSession | undefined) => {\n        if(data) {\n          this.clearInterval();\n          this.refresh(bSession ? session.id : '')\n        }\n      })\n      .catch((e: any) => {\n        console.error(e);\n    });\n  }\n\n  stopRecording(session: SwingSession, bSession?:boolean){\n    return SessionsService\n      .stopRecording(session.applicationPath!, session.id!)\n      .then((data:SwingSession | undefined) => {\n        this.refresh(bSession ? session.id : '')\n      })\n      .catch((e: any) => {\n        console.error(e);\n    });\n  }\n\n\n  loadRecordings = async (app: string, currentId?: string) => {\n    this.loading = true;\n    const recData = await SessionsService.getRecordings(app, currentId);\n    if (recData) {\n      runInAction(() => {\n        this.recordings = recData;\n        this.loading = false;\n      });\n    }\n  }\n\n  loadTDs = async (app: string, currentId?: string) => {\n    this.loading = true;\n    const recData = await SessionsService.getThreadDumps(app, currentId);\n    if (recData) {\n      runInAction(() => {\n        this.threadDumps = recData;\n        this.loading = false;\n      });\n    }\n  }\n\n\n  loadSessions = async (currentId?: string) => {\n    this.loading = true;\n    const data = await SessionsService.getSessions(this.appPath || '');\n    const app = this.rootStore?.globalStore.app!\n\n    if(this.sessionsTab === 'recordings' || this.activeTab === 'recordings') {\n      const recData = await SessionsService.getRecordings(app, currentId);\n      if (recData) {\n        runInAction(() => {\n          this.recordings = recData;\n          this.loading = false;\n        });\n      }\n    }\n    \n    if(this.sessionsTab === 'threadDumps' || this.activeTab === 'threadDumps') {\n      const tdData = await SessionsService.getThreadDumps(app, currentId);\n      if (tdData) {\n        runInAction(() => {\n          this.threadDumps = tdData;\n          this.loading = false;\n        });\n      }\n    }\n      if(data) {\n        runInAction(() => {\n          this.sessions = data\n          this.loading = false\n          this.lastUpdated = (new Date).toLocaleTimeString()\n          if(currentId) {\n            this.setSessionId(currentId)\n            if(!parseObject(this.session).isEmpty()) {\n              const session = this.session\n              this.statisticsLoggingEnabled = session.statisticsLoggingEnabled;\n              if (this.rootStore && this.rootStore.logsStore && session.sessionPoolId) {\n                this.rootStore.logsStore.setSessionSpLogId(session.sessionPoolId);\n              }\n            }\n          }\n        })\n      }\n  }\n\n  get session () {\n\n    let ses = this.sessions['sessions']?.find((s) => s.id === this.sessionID)\n\n    if(this.sessionsTab === 'closedSessions' || !ses) {\n      ses = this.sessions['closedSessions']?.find((s) => s.id === this.sessionID)\n    }\n\n    return ses || {}\n  }\n\n\n  canShowSessionDetail(id: string) {\n    if (this.sessions && this.sessions.sessions) {\n      if (this.sessions.sessions?.filter((s: SwingSession) => s.id === id).length) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setInterval(callback:any, delay:number) {\n    this.interval = setInterval(() => {\n      callback()\n    }, delay);\n  }\n  clearInterval() {\n    if(this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  refresh(currentId?: string) {\n    this.loadSessions(currentId)\n    .then(()=>{\n        this.clearInterval();\n    })\n    .then(()=> {\n        this.setInterval(() => {\n        this.refresh(currentId);\n      }, 5000)\n    })\n    .catch(()=>{\n        this.clearInterval();\n    })\n  }\n\n\n  getWarningsNum(session?: SwingSession) {\n    if (!session) {\n      session = this.session;\n    }\n\n    let sum = 0;\n    if (session) {\n      sum += session?.warnings ? session.warnings.length : 0;\n      sum += session.warningHistory ? session.warningHistory.length : 0;\n      if (this.rootStore?.permissionsStore.get(\"getThreadDump\")) {\n        sum += session.threadDumps ? Object.keys(session?.threadDumps!).length : 0;\n      }\n    }\n    return sum;\n  }\n\n  get getMemoryStats() {\n    return {\n      names: [\"Max Memory\", \"Used Memory\"],\n      keys: [\"memoryAllocated\", \"memoryUsed\"],\n      dataset: getStatsDataset(this.session?.stats, [\n        \"memoryAllocated\",\n        \"memoryUsed\"\n      ]),\n      tickFormat: (value: number, index: number) => {\n        if (value > 999) {\n          return (value / 1024).toFixed(1) + \"GB\";\n        } else {\n          return value + \"MB\";\n        }\n      }\n    };\n  }\n\n  get getCpuStats() {\n      return {\n        names: [\"CPU Utilization\"],\n        keys: [\"cpuUtilization\"],\n        dataset: getStatsDataset(this.session?.stats, [\"cpuUtilization\"]),\n        tickFormat: (value: number, index: number) => {\n          return Math.floor(value) + \"%\";\n        }\n      };\n  }\n\n  get getBandwidthStats() {\n      return {\n        names: [\"Inbound trafic\", \"Outbound trafic\"],\n        keys: [\"inboundSize\", \"outboundSize\"],\n        dataset: getStatsDataset(this.session?.stats, [\"inboundSize\", \"outboundSize\"]),\n        tickFormat: (value: number, index: number) => {\n          return Math.floor(value / 1024) + \"k\";\n        }\n      };\n  }\n\n  get getLatencyStats() {\n      return {\n        names: [\n          \"Network ping latency\",\n          \"Network transfer latency\",\n          \"Server rendering latency\",\n          \"Client rendering latency\"\n        ],\n        keys: [\n          \"latencyPing\",\n          \"latencyNetworkTransfer\",\n          \"latencyServerRendering\",\n          \"latencyClientRendering\"\n        ],\n        dataset: getStatsDataset(this.session?.stats, [\n          \"latencyPing\",\n          \"latencyNetworkTransfer\",\n          \"latencyServerRendering\",\n          \"latencyClientRendering\"\n        ]),\n        tickFormat: (value: number, index: number) => {\n          return value + \"ms\";\n        }\n      };\n  }\n\n  get mirroringMessageKey() {\n    switch (this.session.mirroringStatus) {\n      case 'DENIED_MIRRORING_BY_USER':\n        return 'sessions.mirror.status.denied';\n      case 'WAITING_FOR_MIRRORING_APPROVAL':\n        return 'sessions.mirror.status.waiting';\n      default:\n        return null;\n    }\n  }\n\n  previousSessionPath = computedFn(function previousSessionPath(this: SessionsStore, currentId: string)\n   {\n    const sessions = this.filteredSessionsList\n    const currentSessionIndex = sessions?.findIndex((s) => s.id === currentId)\n\n    if (typeof currentSessionIndex === 'number' && currentSessionIndex > 0) {\n      const s = sessions![currentSessionIndex - 1]\n\n      return '/sessions' + s.applicationPath +'/'+ s.id\n    }\n\n    return undefined;\n  });\n\n  nextSessionPath = computedFn(function nextSessionPath(this: SessionsStore, currentId: string) {\n    const sessions = this.filteredSessionsList\n    const currentSessionIndex = sessions?.findIndex((s) => s.id === currentId);\n\n    if (sessions && typeof currentSessionIndex === 'number' && currentSessionIndex < sessions.length - 1) {\n      const s = sessions![currentSessionIndex + 1]\n\n      return '/sessions' + s.applicationPath +'/'+ s.id\n    }\n\n    return undefined;\n  });\n\n  get filteredSessionsList() {\n    const tab = this.sessionsTab as 'sessions' | 'closedSessions'\n    return !this.searchTerm\n    ? this.sessions![tab]\n    : (this.sessions![tab] as any[])?.filter(item =>\n        item.application?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase())||\n        item.id?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase()) ||\n        item.user?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase()) ||\n        item.status?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase())\n    )\n  };\n\n  get ftdCount() {\n    return this.filteredThreadDumps.length\n  }\n  get fRecCount() {\n    return this.filteredRecordings.length\n  }\n\n  get filteredThreadDumps() {\n    return !this.searchTerm\n      ? this.threadDumps!\n      : (this.threadDumps! as ThreadDumpInfo[])?.filter(item =>\n          item.fileName?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase()) ||\n          item.reason?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase()) ||\n          item.instanceId?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase())\n      )\n  }\n\n  get filteredRecordings() {\n    return !this.searchTerm\n    ? this.recordings!\n    : (this.recordings! as RecordingInfo[])?.filter(item =>\n        item.fileName?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase())||\n        item.instanceId?.toLowerCase().includes(this.searchTerm.toLocaleLowerCase())\n    );\n  }\n\n  get currentSessionIndex() {\n    return this.filteredSessionsList?.findIndex((s) => s.id === this.session.id);\n  };\n\n}\n\nexport default SessionsStore;","import { makeAutoObservable, runInAction } from 'mobx'\nimport { LogsService } from '@/services'\nimport { LogsOverview as ILogsOverview, SessionLogInfo, SwingSession } from '@/gen/models'\nimport { ApiServerUrl, ILogsEntry, ILogType, LogTypes, toPath, getSecuritySuffix } from '@/utils';\nimport { IBtndropProps } from '@/components/basic/Dropdown/Dropdown';\nimport { RootStore } from './RootStore';\n\nclass logsStore {\n  private rootStore: RootStore | undefined;\n  logSession?: SwingSession;\n  logs?: ILogsEntry[];\n  log?: any[];\n  logTimer: NodeJS.Timeout | undefined;\n  logStartOffset: number | undefined;\n  logEndOffset: number = -1;\n  instanceId: string = ''\n  appInstanceIds: SessionLogInfo[] = []\n  logsOverview: ILogsOverview = {};\n  serverLogId: string | undefined;\n  spLogId: string | undefined;\n  loading: boolean = false;\n  interval: NodeJS.Timeout | undefined;\n  lastUpdated: string | undefined;\n  type: ILogType | undefined;\n  searchTerm: string = '';\n  filterToggle: boolean = false;\n  compact: boolean = true;\n  logsToken: string | null | undefined;\n  fontSize:number = 1;\n  random:number = Math.random();\n\n  constructor(rootStore?: RootStore) {\n    makeAutoObservable(this)\n    this.rootStore = rootStore;\n  }\n\n  setInstanceId(id: string) {\n    if(id !== this.instanceId) {\n      this.instanceId = id\n    }\n  }\n\n  setCompact(bool?: boolean) {\n    this.compact = bool ? bool : !this.compact;\n  }\n\n  setFilterToggle(bool?: boolean) {\n    this.searchTerm = ''\n    this.filterToggle = bool ? bool : !this.filterToggle;\n  }\n\n  setSearchTerm(term: string) {\n    if(this.searchTerm !== term) {\n      this.searchTerm = term;\n    }\n  }\n\n  setServerLogId(id: string) {\n    if(id !== this.serverLogId) {\n      this.clearInterval()\n      this.serverLogId = id\n      this.refresh('',this.type?.url!)\n    }\n  }\n\n  setSessionSpLogId(id: string) {\n    this.spLogId = id\n  }\n\n  setSpLogId(id: string) {\n    if(id !== this.spLogId) {\n      this.clearInterval()\n      this.spLogId = id\n      this.refresh('','sessionpool')\n    }\n  }\n\n  adjustFontSize(amount:number){\n    this.fontSize += amount;\n    if(this.fontSize <= 0) this.fontSize = 0.1;\n    this.random = Math.random();\n  }\n\n  loadLogsOverview(app: string) {\n    this.loading = true;\n    return LogsService\n      .getLogsOverview()\n      .then((data: ILogsOverview | undefined) => {\n        runInAction(() => {\n          if(data) {\n            this.logsOverview = data;\n            this.serverLogId = this.serverLogId ? this.serverLogId : data.servers![0]?.id;\n            this.spLogId = this.spLogId ? this.spLogId : data.sessionPools![0]?.id;\n            this.logsToken = data.token;\n            this.appInstanceIds = data.sessions!\n            .filter((item) =>item.app === '/'+app)\n            .sort((x, y)=> Number(y.lastModified) - Number(x.lastModified))\n            this.loading = false;\n          }\n        })\n      })\n      .catch((e: any) => {\n        console.error(e);\n      });\n  }\n\n  load(size: number, start: number, backwards: boolean, app: string, type: string) {\n    const params: any = {\n      backwards,\n      offset: start,\n      max: size,\n      instanceId: undefined\n    };\n    this.loading = true;\n    if (backwards) {\n      this.log = this.logs = [];\n    }\n    if (this.type?.url === 'sessionpool' && this.isCluster) {\n      return LogsService\n        .getSessionPoolLogs(this.spLogId!, params)\n        .then((data: any) => {\n          runInAction(() => {\n            this.handleLogResponse(data, backwards, type);\n          })\n        })\n        .catch((e: any) => {\n          console.error(e);\n        });\n    }\n\n    if (this.type && this.isSessionType(this.type) || (app !== undefined && this.instanceId)) {\n      params.instanceId = this.instanceId || null;\n      if (app) {\n        return LogsService\n          .getSessionLog(this.spLogId!, this.instanceId, toPath('',app), params)\n          .then((data: any) => {\n            runInAction(() => {\n              this.handleLogResponse(data, backwards, type);\n            })\n          })\n          .catch((e: any) => {\n            console.error(e);\n          });\n      } else {\n        return Promise.resolve();\n      }\n    } else if (this.type && this.isAdminConsoleType(this.type)) {\n      return LogsService\n        .getAdminConsoleLogs(params)\n        .then((data: any) => {\n          runInAction(() => {\n            this.handleLogResponse(data, backwards, type);\n          })\n        })\n        .catch((e: any) => {\n          console.error(e);\n      });\n    } else if (this.type && this.isScalingType(this.type)) {\n      return LogsService\n        .getScalingLogs(params)\n        .then((data: any) => {\n          runInAction(() => {\n            this.handleLogResponse(data, backwards, type);\n          })\n        })\n        .catch((e: any) => {\n          console.error(e);\n      });\n    } else {\n      return LogsService\n        .getServerLogs(this.serverLogId!, type, params)\n        .then((data: any) => {\n          runInAction(() => {\n            this.handleLogResponse(data, backwards, type);\n          })\n        })\n        .catch((e: any) => {\n          console.error(e);\n      });\n    }\n  }\n\n  refresh(app: string,type: string) {\n    this.load(100 * 1024, -1, true,app,type)\n    .then(() => this.loadDelta(app,type))\n    .catch((e: any) => {\n      console.error(e);\n    });\n  }\n\n  setType(type: string) {\n      let t: ILogType;\n      for (t of LogTypes) {\n          if (t.url === type) {\n            this.type = t;\n          }\n      }\n  }\n\n  loadSessionLogs(app: string, instanceId: string) {\n    clearTimeout(this.logTimer!)\n    this.instanceId = instanceId;\n    this.logSession = this.rootStore?.sessionsStore.session;\n    this.refresh(app, 'session');\n  }\n\n  loadDelta(app: string, type: string) {\n    return this.load(100 * 1024, this.logEndOffset!, false, app, type)\n      .then(() => {\n        this.clearInterval();\n        this.setInterval(() => this.loadDelta(app, type), 2000);\n      })\n      .catch(() => {\n        this.clearInterval();\n      });\n  }\n\n  downloadLogs(type: string) {\n    if (type === 'sessionpool') {\n      let url = this.rootStore!.globalStore.serverUrl! + \"/rest/logs/sessionpool/\" + encodeURIComponent(this.spLogId!) + '/' + (this.logsToken || '');\n      url += ((url.indexOf(\"?\") !== -1) ? \"&\" : \"?\") + \"X-webswing-securitySuffix=\" + getSecuritySuffix();\n      window.open(url, \"_blank\");\n    } else if (type === 'admin') {\n      let url = ApiServerUrl + \"/rest/logs/console/\" + (this.logsToken || '');\n      url += ((url.indexOf(\"?\") !== -1) ? \"&\" : \"?\") + \"X-webswing-securitySuffix=\" + getSecuritySuffix();\n      window.open(url, \"_blank\");\n    } else {\n      let url = ApiServerUrl + \"/rest/logs/server/\" + encodeURIComponent(this.serverLogId!) + '/' + encodeURIComponent(type) + '/' + (this.logsToken || '');\n      url += ((url.indexOf(\"?\") !== -1) ? \"&\" : \"?\") + \"X-webswing-securitySuffix=\" + getSecuritySuffix();\n      window.open(url, \"_blank\");\n    }\n  }\n  \n  downloadSessionLogs(app: string, sessionPoolId?: string, instanceId?: string) {\n    let url = this.rootStore!.globalStore.serverUrl! + '/rest/logs/session/download?appPath=' + encodeURIComponent(app);\n    if (instanceId) {\n      url += `&instanceId=${encodeURIComponent(instanceId)}`\n    }\n    if (!sessionPoolId) {\n      sessionPoolId = this.spLogId;\n    }\n    url += `&sessionPoolId=${encodeURIComponent(sessionPoolId!)}`\n    url += \"&token=\" + (this.logsToken || '');\n    url += \"&X-webswing-securitySuffix=\" + getSecuritySuffix();\n    window.open(url, \"_blank\");\n  }\n\n  get searchTermLowerCase() {\n    return this.searchTerm.toLocaleLowerCase()\n  }\n\n  get dropdownServerButtons() {\n    const arr: IBtndropProps[] = []\n    this.logsOverview.servers?.forEach(btn => {\n      arr.push({label:btn.id, onClick:()=>this.setServerLogId(btn.id!)})\n    });\n    return arr\n  }\n  \n  get dropdownSpButtons() {\n    const arr: IBtndropProps[] = []\n    this.logsOverview.sessionPools?.forEach(btn => {\n      arr.push({label:btn.id, onClick:()=>this.setSpLogId(btn.id!)})\n    });\n    return arr\n  }\n\n  get isCluster() {\n    return this.logsOverview.servers ? this.logsOverview.servers[0].cluster : false\n  }\n\n  get isDropButtonVisible() {\n    if (this.logsOverview && this.type?.url === \"sessionpool\") {\n      return this.logsOverview.sessionPools!.length > 1\n    } else {\n      return this.logsOverview.servers!.length > 1\n    }\n  }\n\n  private handleLogResponse(data: any, backwards: boolean, type: string) {\n    if (data && data.log && data.log.length > 0) {\n        const logl = data.log.split(this.type?.lineDelimiter);\n        if (backwards) {\n          this.log = logl?.concat(this.log!);\n          this.logStartOffset = data?.startOffset;\n          this.logEndOffset = Math.max(Number(this.logEndOffset), Number(data?.endOffset));\n        } else {\n          this.log = this.log?.concat(logl);\n          this.logStartOffset = Math.min(Number(this.logStartOffset), Number(data?.startOffset));\n          this.logEndOffset = Number(data?.endOffset);\n        }\n        this.setCollection(type);\n      }\n      this.lastUpdated = String(new Date());\n      this.loading = false;\n  }\n\n  private setInterval(callback:any, delay:number) {\n    this.interval = setInterval(() => {\n      callback()\n    }, delay);\n  }\n  clearInterval() {\n    if(this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  private isSessionType = (type: ILogType) => {\n    return type.url === \"session\";\n  }\n\n  private isAdminConsoleType = (type: ILogType) => {\n    return type.url === \"admin\";\n  }\n\n  private isScalingType = (type: ILogType) => {\n    return type.url === \"scaling\";\n  }\n\n  private split = (line: string) => {\n    if (this.type?.delimiter != null) {\n      return line ? line.split(this.type.delimiter):'';\n    } else {\n      return [line];\n    }\n  }\n\n  private setCollection(type: string) {\n    let logs = this.log?.map((line)=>this.split(line));\n    logs = logs?.filter((entry) => Array.isArray(entry));\n    if(type === 'audit') {\n        this.logs = logs?.map(([timestamp, subject, value, user, secured_path, ip, ...detail]) => (\n          {timestamp, subject, value, user, secured_path, ip, detail: detail.join(\" | \")}\n        ));\n    } else {\n        this.logs = logs?.map(([msgs]) => ({msgs}));\n    }\n  }\n\n}\n\nexport default logsStore;\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ActiveSessionsInfo\n */\nexport interface ActiveSessionsInfo {\n    /**\n     * \n     * @type {number}\n     * @memberof ActiveSessionsInfo\n     */\n    connected?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ActiveSessionsInfo\n     */\n    disconnected?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ActiveSessionsInfo\n     */\n    total?: number;\n}\n\nexport function ActiveSessionsInfoFromJSON(json: any): ActiveSessionsInfo {\n    return ActiveSessionsInfoFromJSONTyped(json, false);\n}\n\nexport function ActiveSessionsInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveSessionsInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'connected': !exists(json, 'connected') ? undefined : json['connected'],\n        'disconnected': !exists(json, 'disconnected') ? undefined : json['disconnected'],\n        'total': !exists(json, 'total') ? undefined : json['total'],\n    };\n}\n\nexport function ActiveSessionsInfoToJSON(value?: ActiveSessionsInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'connected': value.connected,\n        'disconnected': value.disconnected,\n        'total': value.total,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    InstanceManagerStatus,\n    InstanceManagerStatusFromJSON,\n    InstanceManagerStatusFromJSONTyped,\n    InstanceManagerStatusToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ApplicationInfo\n */\nexport interface ApplicationInfo {\n    /**\n     * \n     * @type {string}\n     * @memberof ApplicationInfo\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ApplicationInfo\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ApplicationInfo\n     */\n    name?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ApplicationInfo\n     */\n    cluster?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof ApplicationInfo\n     */\n    runningInstances?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ApplicationInfo\n     */\n    enabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof ApplicationInfo\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ApplicationInfo\n     */\n    icon?: string;\n    /**\n     * \n     * @type {Array<InstanceManagerStatus>}\n     * @memberof ApplicationInfo\n     */\n    status?: Array<InstanceManagerStatus>;\n    /**\n     * \n     * @type {object}\n     * @memberof ApplicationInfo\n     */\n    config?: object;\n    /**\n     * \n     * @type {number}\n     * @memberof ApplicationInfo\n     */\n    connectedInstances?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ApplicationInfo\n     */\n    maxRunningInstances?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ApplicationInfo\n     */\n    finishedInstances?: number;\n    /**\n     * \n     * @type {{ [key: string]: { [key: string]: number; }; }}\n     * @memberof ApplicationInfo\n     */\n    stats?: { [key: string]: { [key: string]: number; }; };\n    /**\n     * \n     * @type {{ [key: string]: Array<string>; }}\n     * @memberof ApplicationInfo\n     */\n    warnings?: { [key: string]: Array<string>; };\n}\n\nexport function ApplicationInfoFromJSON(json: any): ApplicationInfo {\n    return ApplicationInfoFromJSONTyped(json, false);\n}\n\nexport function ApplicationInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'url': !exists(json, 'url') ? undefined : json['url'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'cluster': !exists(json, 'cluster') ? undefined : json['cluster'],\n        'runningInstances': !exists(json, 'runningInstances') ? undefined : json['runningInstances'],\n        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],\n        'message': !exists(json, 'message') ? undefined : json['message'],\n        'icon': !exists(json, 'icon') ? undefined : json['icon'],\n        'status': !exists(json, 'status') ? undefined : ((json['status'] as Array<any>).map(InstanceManagerStatusFromJSON)),\n        'config': !exists(json, 'config') ? undefined : json['config'],\n        'connectedInstances': !exists(json, 'connectedInstances') ? undefined : json['connectedInstances'],\n        'maxRunningInstances': !exists(json, 'maxRunningInstances') ? undefined : json['maxRunningInstances'],\n        'finishedInstances': !exists(json, 'finishedInstances') ? undefined : json['finishedInstances'],\n        'stats': !exists(json, 'stats') ? undefined : json['stats'],\n        'warnings': !exists(json, 'warnings') ? undefined : json['warnings'],\n    };\n}\n\nexport function ApplicationInfoToJSON(value?: ApplicationInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'path': value.path,\n        'url': value.url,\n        'name': value.name,\n        'cluster': value.cluster,\n        'runningInstances': value.runningInstances,\n        'enabled': value.enabled,\n        'message': value.message,\n        'icon': value.icon,\n        'status': value.status === undefined ? undefined : ((value.status as Array<any>).map(InstanceManagerStatusToJSON)),\n        'config': value.config,\n        'connectedInstances': value.connectedInstances,\n        'maxRunningInstances': value.maxRunningInstances,\n        'finishedInstances': value.finishedInstances,\n        'stats': value.stats,\n        'warnings': value.warnings,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    InstanceManagerStatus,\n    InstanceManagerStatusFromJSON,\n    InstanceManagerStatusFromJSONTyped,\n    InstanceManagerStatusToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface BasicApplicationInfo\n */\nexport interface BasicApplicationInfo {\n    /**\n     * \n     * @type {string}\n     * @memberof BasicApplicationInfo\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BasicApplicationInfo\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BasicApplicationInfo\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof BasicApplicationInfo\n     */\n    runningInstances?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof BasicApplicationInfo\n     */\n    enabled?: boolean;\n    /**\n     * \n     * @type {Array<InstanceManagerStatus>}\n     * @memberof BasicApplicationInfo\n     */\n    status?: Array<InstanceManagerStatus>;\n}\n\nexport function BasicApplicationInfoFromJSON(json: any): BasicApplicationInfo {\n    return BasicApplicationInfoFromJSONTyped(json, false);\n}\n\nexport function BasicApplicationInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BasicApplicationInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'url': !exists(json, 'url') ? undefined : json['url'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'runningInstances': !exists(json, 'runningInstances') ? undefined : json['runningInstances'],\n        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],\n        'status': !exists(json, 'status') ? undefined : ((json['status'] as Array<any>).map(InstanceManagerStatusFromJSON)),\n    };\n}\n\nexport function BasicApplicationInfoToJSON(value?: BasicApplicationInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'path': value.path,\n        'url': value.url,\n        'name': value.name,\n        'runningInstances': value.runningInstances,\n        'enabled': value.enabled,\n        'status': value.status === undefined ? undefined : ((value.status as Array<any>).map(InstanceManagerStatusToJSON)),\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MetaObject,\n    MetaObjectFromJSON,\n    MetaObjectFromJSONTyped,\n    MetaObjectToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Config\n */\nexport interface Config {\n    /**\n     * \n     * @type {MetaObject}\n     * @memberof Config\n     */\n    webConfig?: MetaObject;\n    /**\n     * Map of <session pool id> - <MetaObject>\n     * @type {{ [key: string]: MetaObject; }}\n     * @memberof Config\n     */\n    appConfig?: { [key: string]: MetaObject; };\n}\n\nexport function ConfigFromJSON(json: any): Config {\n    return ConfigFromJSONTyped(json, false);\n}\n\nexport function ConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): Config {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'webConfig': !exists(json, 'webConfig') ? undefined : MetaObjectFromJSON(json['webConfig']),\n        'appConfig': !exists(json, 'appConfig') ? undefined : (mapValues(json['appConfig'], MetaObjectFromJSON)),\n    };\n}\n\nexport function ConfigToJSON(value?: Config | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'webConfig': MetaObjectToJSON(value.webConfig),\n        'appConfig': value.appConfig === undefined ? undefined : (mapValues(value.appConfig, MetaObjectToJSON)),\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface IdleSession\n */\nexport interface IdleSession {\n    /**\n     * \n     * @type {string}\n     * @memberof IdleSession\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof IdleSession\n     */\n    sessionPoolId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof IdleSession\n     */\n    application?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof IdleSession\n     */\n    idleStatus?: IdleSessionIdleStatusEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof IdleSession\n     */\n    startedAt?: number;\n}\n\nexport function IdleSessionFromJSON(json: any): IdleSession {\n    return IdleSessionFromJSONTyped(json, false);\n}\n\nexport function IdleSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdleSession {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'sessionPoolId': !exists(json, 'sessionPoolId') ? undefined : json['sessionPoolId'],\n        'application': !exists(json, 'application') ? undefined : json['application'],\n        'idleStatus': !exists(json, 'idleStatus') ? undefined : json['idleStatus'],\n        'startedAt': !exists(json, 'startedAt') ? undefined : json['startedAt'],\n    };\n}\n\nexport function IdleSessionToJSON(value?: IdleSession | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'sessionPoolId': value.sessionPoolId,\n        'application': value.application,\n        'idleStatus': value.idleStatus,\n        'startedAt': value.startedAt,\n    };\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum IdleSessionIdleStatusEnum {\n    NEW = 'NEW',\n    STARTED = 'STARTED',\n    LAUNCHREQUESTED = 'LAUNCH_REQUESTED',\n    LAUNCHED = 'LAUNCHED',\n    KILLREQUESTED = 'KILL_REQUESTED'\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface InstanceManagerStatus\n */\nexport interface InstanceManagerStatus {\n    /**\n     * \n     * @type {string}\n     * @memberof InstanceManagerStatus\n     */\n    status?: InstanceManagerStatusStatusEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof InstanceManagerStatus\n     */\n    server?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InstanceManagerStatus\n     */\n    error?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InstanceManagerStatus\n     */\n    errorDetails?: string;\n}\n\nexport function InstanceManagerStatusFromJSON(json: any): InstanceManagerStatus {\n    return InstanceManagerStatusFromJSONTyped(json, false);\n}\n\nexport function InstanceManagerStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceManagerStatus {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'status': !exists(json, 'status') ? undefined : json['status'],\n        'server': !exists(json, 'server') ? undefined : json['server'],\n        'error': !exists(json, 'error') ? undefined : json['error'],\n        'errorDetails': !exists(json, 'errorDetails') ? undefined : json['errorDetails'],\n    };\n}\n\nexport function InstanceManagerStatusToJSON(value?: InstanceManagerStatus | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'status': value.status,\n        'server': value.server,\n        'error': value.error,\n        'errorDetails': value.errorDetails,\n    };\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum InstanceManagerStatusStatusEnum {\n    Starting = 'Starting',\n    Running = 'Running',\n    Stopped = 'Stopped',\n    Stopping = 'Stopping',\n    Error = 'Error'\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface LogRequest\n */\nexport interface LogRequest {\n    /**\n     * \n     * @type {boolean}\n     * @memberof LogRequest\n     */\n    backwards?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof LogRequest\n     */\n    offset?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof LogRequest\n     */\n    max?: number;\n}\n\nexport function LogRequestFromJSON(json: any): LogRequest {\n    return LogRequestFromJSONTyped(json, false);\n}\n\nexport function LogRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'backwards': !exists(json, 'backwards') ? undefined : json['backwards'],\n        'offset': !exists(json, 'offset') ? undefined : json['offset'],\n        'max': !exists(json, 'max') ? undefined : json['max'],\n    };\n}\n\nexport function LogRequestToJSON(value?: LogRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'backwards': value.backwards,\n        'offset': value.offset,\n        'max': value.max,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface LogResponse\n */\nexport interface LogResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof LogResponse\n     */\n    startOffset?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof LogResponse\n     */\n    endOffset?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof LogResponse\n     */\n    log?: string;\n}\n\nexport function LogResponseFromJSON(json: any): LogResponse {\n    return LogResponseFromJSONTyped(json, false);\n}\n\nexport function LogResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'startOffset': !exists(json, 'startOffset') ? undefined : json['startOffset'],\n        'endOffset': !exists(json, 'endOffset') ? undefined : json['endOffset'],\n        'log': !exists(json, 'log') ? undefined : json['log'],\n    };\n}\n\nexport function LogResponseToJSON(value?: LogResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'startOffset': value.startOffset,\n        'endOffset': value.endOffset,\n        'log': value.log,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ServerLogInfo,\n    ServerLogInfoFromJSON,\n    ServerLogInfoFromJSONTyped,\n    ServerLogInfoToJSON,\n    SessionLogInfo,\n    SessionLogInfoFromJSON,\n    SessionLogInfoFromJSONTyped,\n    SessionLogInfoToJSON,\n    SessionPoolLogInfo,\n    SessionPoolLogInfoFromJSON,\n    SessionPoolLogInfoFromJSONTyped,\n    SessionPoolLogInfoToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface LogsOverview\n */\nexport interface LogsOverview {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof LogsOverview\n     */\n    apps?: Array<string>;\n    /**\n     * \n     * @type {Array<ServerLogInfo>}\n     * @memberof LogsOverview\n     */\n    servers?: Array<ServerLogInfo>;\n    /**\n     * \n     * @type {Array<SessionPoolLogInfo>}\n     * @memberof LogsOverview\n     */\n    sessionPools?: Array<SessionPoolLogInfo>;\n    /**\n     * \n     * @type {Array<SessionLogInfo>}\n     * @memberof LogsOverview\n     */\n    sessions?: Array<SessionLogInfo>;\n    /**\n     * \n     * @type {string}\n     * @memberof LogsOverview\n     */\n    token?: string;\n}\n\nexport function LogsOverviewFromJSON(json: any): LogsOverview {\n    return LogsOverviewFromJSONTyped(json, false);\n}\n\nexport function LogsOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogsOverview {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'apps': !exists(json, 'apps') ? undefined : json['apps'],\n        'servers': !exists(json, 'servers') ? undefined : ((json['servers'] as Array<any>).map(ServerLogInfoFromJSON)),\n        'sessionPools': !exists(json, 'sessionPools') ? undefined : ((json['sessionPools'] as Array<any>).map(SessionPoolLogInfoFromJSON)),\n        'sessions': !exists(json, 'sessions') ? undefined : ((json['sessions'] as Array<any>).map(SessionLogInfoFromJSON)),\n        'token': !exists(json, 'token') ? undefined : json['token'],\n    };\n}\n\nexport function LogsOverviewToJSON(value?: LogsOverview | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'apps': value.apps,\n        'servers': value.servers === undefined ? undefined : ((value.servers as Array<any>).map(ServerLogInfoToJSON)),\n        'sessionPools': value.sessionPools === undefined ? undefined : ((value.sessionPools as Array<any>).map(SessionPoolLogInfoToJSON)),\n        'sessions': value.sessions === undefined ? undefined : ((value.sessions as Array<any>).map(SessionLogInfoToJSON)),\n        'token': value.token,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MetaObject\n */\nexport interface MetaObject {\n    /**\n     * \n     * @type {string}\n     * @memberof MetaObject\n     */\n    message?: string;\n    /**\n     * \n     * @type {Array<{ [key: string]: object; }>}\n     * @memberof MetaObject\n     */\n    fields?: Array<{ [key: string]: object; }>;\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof MetaObject\n     */\n    data?: { [key: string]: object; };\n}\n\nexport function MetaObjectFromJSON(json: any): MetaObject {\n    return MetaObjectFromJSONTyped(json, false);\n}\n\nexport function MetaObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetaObject {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'message': !exists(json, 'message') ? undefined : json['message'],\n        'fields': !exists(json, 'fields') ? undefined : json['fields'],\n        'data': !exists(json, 'data') ? undefined : json['data'],\n    };\n}\n\nexport function MetaObjectToJSON(value?: MetaObject | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'message': value.message,\n        'fields': value.fields,\n        'data': value.data,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface NameValue\n */\nexport interface NameValue {\n    /**\n     * \n     * @type {string}\n     * @memberof NameValue\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NameValue\n     */\n    value?: string;\n}\n\nexport function NameValueFromJSON(json: any): NameValue {\n    return NameValueFromJSONTyped(json, false);\n}\n\nexport function NameValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): NameValue {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function NameValueToJSON(value?: NameValue | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'value': value.value,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ServerInfo,\n    ServerInfoFromJSON,\n    ServerInfoFromJSONTyped,\n    ServerInfoToJSON,\n    SessionPoolInfo,\n    SessionPoolInfoFromJSON,\n    SessionPoolInfoFromJSONTyped,\n    SessionPoolInfoToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Overview\n */\nexport interface Overview {\n    /**\n     * \n     * @type {Array<ServerInfo>}\n     * @memberof Overview\n     */\n    servers?: Array<ServerInfo>;\n    /**\n     * \n     * @type {Array<SessionPoolInfo>}\n     * @memberof Overview\n     */\n    sessionPools?: Array<SessionPoolInfo>;\n}\n\nexport function OverviewFromJSON(json: any): Overview {\n    return OverviewFromJSONTyped(json, false);\n}\n\nexport function OverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): Overview {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'servers': !exists(json, 'servers') ? undefined : ((json['servers'] as Array<any>).map(ServerInfoFromJSON)),\n        'sessionPools': !exists(json, 'sessionPools') ? undefined : ((json['sessionPools'] as Array<any>).map(SessionPoolInfoFromJSON)),\n    };\n}\n\nexport function OverviewToJSON(value?: Overview | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'servers': value.servers === undefined ? undefined : ((value.servers as Array<any>).map(ServerInfoToJSON)),\n        'sessionPools': value.sessionPools === undefined ? undefined : ((value.sessionPools as Array<any>).map(SessionPoolInfoToJSON)),\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Permissions map. * key - string * value - boolean \n * @export\n * @interface Permissions\n */\nexport interface Permissions {\n    /**\n     * \n     * @type {string}\n     * @memberof Permissions\n     */\n    user?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    overview?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    scaling?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    configView?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    configSwingEdit?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    sessions?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    configEdit?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    start?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    stop?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    remove?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    create?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    logsView?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    startRecording?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    playbackRecording?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    startMirrorView?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    requestThreadDump?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Permissions\n     */\n    getThreadDump?: boolean;\n}\n\nexport function PermissionsFromJSON(json: any): Permissions {\n    return PermissionsFromJSONTyped(json, false);\n}\n\nexport function PermissionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Permissions {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'user': !exists(json, 'user') ? undefined : json['user'],\n        'overview': !exists(json, 'overview') ? undefined : json['overview'],\n        'scaling': !exists(json, 'scaling') ? undefined : json['scaling'],\n        'configView': !exists(json, 'configView') ? undefined : json['configView'],\n        'configSwingEdit': !exists(json, 'configSwingEdit') ? undefined : json['configSwingEdit'],\n        'sessions': !exists(json, 'sessions') ? undefined : json['sessions'],\n        'configEdit': !exists(json, 'configEdit') ? undefined : json['configEdit'],\n        'start': !exists(json, 'start') ? undefined : json['start'],\n        'stop': !exists(json, 'stop') ? undefined : json['stop'],\n        'remove': !exists(json, 'remove') ? undefined : json['remove'],\n        'create': !exists(json, 'create') ? undefined : json['create'],\n        'logsView': !exists(json, 'logsView') ? undefined : json['logsView'],\n        'startRecording': !exists(json, 'startRecording') ? undefined : json['startRecording'],\n        'playbackRecording': !exists(json, 'playbackRecording') ? undefined : json['playbackRecording'],\n        'startMirrorView': !exists(json, 'startMirrorView') ? undefined : json['startMirrorView'],\n        'requestThreadDump': !exists(json, 'requestThreadDump') ? undefined : json['requestThreadDump'],\n        'getThreadDump': !exists(json, 'getThreadDump') ? undefined : json['getThreadDump'],\n    };\n}\n\nexport function PermissionsToJSON(value?: Permissions | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'user': value.user,\n        'overview': value.overview,\n        'scaling': value.scaling,\n        'configView': value.configView,\n        'configSwingEdit': value.configSwingEdit,\n        'sessions': value.sessions,\n        'configEdit': value.configEdit,\n        'start': value.start,\n        'stop': value.stop,\n        'remove': value.remove,\n        'create': value.create,\n        'logsView': value.logsView,\n        'startRecording': value.startRecording,\n        'playbackRecording': value.playbackRecording,\n        'startMirrorView': value.startMirrorView,\n        'requestThreadDump': value.requestThreadDump,\n        'getThreadDump': value.getThreadDump,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    QuickStartFile,\n    QuickStartFileFromJSON,\n    QuickStartFileFromJSONTyped,\n    QuickStartFileToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface QuickStart\n */\nexport interface QuickStart {\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStart\n     */\n    folder?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof QuickStart\n     */\n    anyFiles?: boolean;\n    /**\n     * \n     * @type {Array<QuickStartFile>}\n     * @memberof QuickStart\n     */\n    files?: Array<QuickStartFile>;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStart\n     */\n    javaExecutable?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStart\n     */\n    javaVersion?: string;\n}\n\nexport function QuickStartFromJSON(json: any): QuickStart {\n    return QuickStartFromJSONTyped(json, false);\n}\n\nexport function QuickStartFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuickStart {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'folder': !exists(json, 'folder') ? undefined : json['folder'],\n        'anyFiles': !exists(json, 'anyFiles') ? undefined : json['anyFiles'],\n        'files': !exists(json, 'files') ? undefined : ((json['files'] as Array<any>).map(QuickStartFileFromJSON)),\n        'javaExecutable': !exists(json, 'javaExecutable') ? undefined : json['javaExecutable'],\n        'javaVersion': !exists(json, 'javaVersion') ? undefined : json['javaVersion'],\n    };\n}\n\nexport function QuickStartToJSON(value?: QuickStart | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'folder': value.folder,\n        'anyFiles': value.anyFiles,\n        'files': value.files === undefined ? undefined : ((value.files as Array<any>).map(QuickStartFileToJSON)),\n        'javaExecutable': value.javaExecutable,\n        'javaVersion': value.javaVersion,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    NameValue,\n    NameValueFromJSON,\n    NameValueFromJSONTyped,\n    NameValueToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface QuickStartConfig\n */\nexport interface QuickStartConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    appName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    appPath?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    appType?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    mainClass?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    vmArgs?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    mainParams?: string;\n    /**\n     * \n     * @type {Array<NameValue>}\n     * @memberof QuickStartConfig\n     */\n    appletParams?: Array<NameValue>;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    sysProps?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof QuickStartConfig\n     */\n    javaFX?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    customJavaVersion?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartConfig\n     */\n    customJavaExecutable?: string;\n}\n\nexport function QuickStartConfigFromJSON(json: any): QuickStartConfig {\n    return QuickStartConfigFromJSONTyped(json, false);\n}\n\nexport function QuickStartConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuickStartConfig {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'appName': !exists(json, 'appName') ? undefined : json['appName'],\n        'appPath': !exists(json, 'appPath') ? undefined : json['appPath'],\n        'appType': !exists(json, 'appType') ? undefined : json['appType'],\n        'mainClass': !exists(json, 'mainClass') ? undefined : json['mainClass'],\n        'vmArgs': !exists(json, 'vmArgs') ? undefined : json['vmArgs'],\n        'mainParams': !exists(json, 'mainParams') ? undefined : json['mainParams'],\n        'appletParams': !exists(json, 'appletParams') ? undefined : ((json['appletParams'] as Array<any>).map(NameValueFromJSON)),\n        'sysProps': !exists(json, 'sysProps') ? undefined : json['sysProps'],\n        'javaFX': !exists(json, 'javaFX') ? undefined : json['javaFX'],\n        'customJavaVersion': !exists(json, 'customJavaVersion') ? undefined : json['customJavaVersion'],\n        'customJavaExecutable': !exists(json, 'customJavaExecutable') ? undefined : json['customJavaExecutable'],\n    };\n}\n\nexport function QuickStartConfigToJSON(value?: QuickStartConfig | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'appName': value.appName,\n        'appPath': value.appPath,\n        'appType': value.appType,\n        'mainClass': value.mainClass,\n        'vmArgs': value.vmArgs,\n        'mainParams': value.mainParams,\n        'appletParams': value.appletParams === undefined ? undefined : ((value.appletParams as Array<any>).map(NameValueToJSON)),\n        'sysProps': value.sysProps,\n        'javaFX': value.javaFX,\n        'customJavaVersion': value.customJavaVersion,\n        'customJavaExecutable': value.customJavaExecutable,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface QuickStartFile\n */\nexport interface QuickStartFile {\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartFile\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QuickStartFile\n     */\n    mainClass?: string;\n}\n\nexport function QuickStartFileFromJSON(json: any): QuickStartFile {\n    return QuickStartFileFromJSONTyped(json, false);\n}\n\nexport function QuickStartFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuickStartFile {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'mainClass': !exists(json, 'mainClass') ? undefined : json['mainClass'],\n    };\n}\n\nexport function QuickStartFileToJSON(value?: QuickStartFile | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'mainClass': value.mainClass,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RecordingInfo\n */\nexport interface RecordingInfo {\n    /**\n     * \n     * @type {number}\n     * @memberof RecordingInfo\n     */\n    startDate?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingInfo\n     */\n    appPath?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingInfo\n     */\n    instanceId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingInfo\n     */\n    fileName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingInfo\n     */\n    token?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof RecordingInfo\n     */\n    size?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingInfo\n     */\n    sessionPoolId?: string;\n}\n\nexport function RecordingInfoFromJSON(json: any): RecordingInfo {\n    return RecordingInfoFromJSONTyped(json, false);\n}\n\nexport function RecordingInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordingInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'startDate': !exists(json, 'startDate') ? undefined : json['startDate'],\n        'appPath': !exists(json, 'appPath') ? undefined : json['appPath'],\n        'instanceId': !exists(json, 'instanceId') ? undefined : json['instanceId'],\n        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],\n        'token': !exists(json, 'token') ? undefined : json['token'],\n        'size': !exists(json, 'size') ? undefined : json['size'],\n        'sessionPoolId': !exists(json, 'sessionPoolId') ? undefined : json['sessionPoolId'],\n    };\n}\n\nexport function RecordingInfoToJSON(value?: RecordingInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'startDate': value.startDate,\n        'appPath': value.appPath,\n        'instanceId': value.instanceId,\n        'fileName': value.fileName,\n        'token': value.token,\n        'size': value.size,\n        'sessionPoolId': value.sessionPoolId,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RefreshTokenResult\n */\nexport interface RefreshTokenResult {\n    /**\n     * \n     * @type {string}\n     * @memberof RefreshTokenResult\n     */\n    accessToken?: string;\n}\n\nexport function RefreshTokenResultFromJSON(json: any): RefreshTokenResult {\n    return RefreshTokenResultFromJSONTyped(json, false);\n}\n\nexport function RefreshTokenResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefreshTokenResult {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],\n    };\n}\n\nexport function RefreshTokenResultToJSON(value?: RefreshTokenResult | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'accessToken': value.accessToken,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ApplicationInfo,\n    ApplicationInfoFromJSON,\n    ApplicationInfoFromJSONTyped,\n    ApplicationInfoToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ServerInfo\n */\nexport interface ServerInfo {\n    /**\n     * \n     * @type {string}\n     * @memberof ServerInfo\n     */\n    id?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ServerInfo\n     */\n    cluster?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ServerInfo\n     */\n    verboseLogging?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof ServerInfo\n     */\n    websocketUrl?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ServerInfo\n     */\n    connected?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof ServerInfo\n     */\n    sessionPools?: Array<string>;\n    /**\n     * \n     * @type {number}\n     * @memberof ServerInfo\n     */\n    instances?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ServerInfo\n     */\n    users?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ServerInfo\n     */\n    connections?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ServerInfo\n     */\n    idle?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ServerInfo\n     */\n    instancesConnected?: number;\n    /**\n     * \n     * @type {Array<ApplicationInfo>}\n     * @memberof ServerInfo\n     */\n    apps?: Array<ApplicationInfo>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof ServerInfo\n     */\n    userList?: Array<string>;\n}\n\nexport function ServerInfoFromJSON(json: any): ServerInfo {\n    return ServerInfoFromJSONTyped(json, false);\n}\n\nexport function ServerInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'cluster': !exists(json, 'cluster') ? undefined : json['cluster'],\n        'verboseLogging': !exists(json, 'verboseLogging') ? undefined : json['verboseLogging'],\n        'websocketUrl': !exists(json, 'websocketUrl') ? undefined : json['websocketUrl'],\n        'connected': !exists(json, 'connected') ? undefined : json['connected'],\n        'sessionPools': !exists(json, 'sessionPools') ? undefined : json['sessionPools'],\n        'instances': !exists(json, 'instances') ? undefined : json['instances'],\n        'users': !exists(json, 'users') ? undefined : json['users'],\n        'connections': !exists(json, 'connections') ? undefined : json['connections'],\n        'idle': !exists(json, 'idle') ? undefined : json['idle'],\n        'instancesConnected': !exists(json, 'instancesConnected') ? undefined : json['instancesConnected'],\n        'apps': !exists(json, 'apps') ? undefined : ((json['apps'] as Array<any>).map(ApplicationInfoFromJSON)),\n        'userList': !exists(json, 'userList') ? undefined : json['userList'],\n    };\n}\n\nexport function ServerInfoToJSON(value?: ServerInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'cluster': value.cluster,\n        'verboseLogging': value.verboseLogging,\n        'websocketUrl': value.websocketUrl,\n        'connected': value.connected,\n        'sessionPools': value.sessionPools,\n        'instances': value.instances,\n        'users': value.users,\n        'connections': value.connections,\n        'idle': value.idle,\n        'instancesConnected': value.instancesConnected,\n        'apps': value.apps === undefined ? undefined : ((value.apps as Array<any>).map(ApplicationInfoToJSON)),\n        'userList': value.userList,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ServerLogInfo\n */\nexport interface ServerLogInfo {\n    /**\n     * \n     * @type {string}\n     * @memberof ServerLogInfo\n     */\n    id?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ServerLogInfo\n     */\n    cluster?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof ServerLogInfo\n     */\n    logDir?: string;\n}\n\nexport function ServerLogInfoFromJSON(json: any): ServerLogInfo {\n    return ServerLogInfoFromJSONTyped(json, false);\n}\n\nexport function ServerLogInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerLogInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'cluster': !exists(json, 'cluster') ? undefined : json['cluster'],\n        'logDir': !exists(json, 'logDir') ? undefined : json['logDir'],\n    };\n}\n\nexport function ServerLogInfoToJSON(value?: ServerLogInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'cluster': value.cluster,\n        'logDir': value.logDir,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SessionLogInfo\n */\nexport interface SessionLogInfo {\n    /**\n     * \n     * @type {string}\n     * @memberof SessionLogInfo\n     */\n    app?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SessionLogInfo\n     */\n    sessionPoolId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SessionLogInfo\n     */\n    instanceId?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SessionLogInfo\n     */\n    lastModified?: number;\n}\n\nexport function SessionLogInfoFromJSON(json: any): SessionLogInfo {\n    return SessionLogInfoFromJSONTyped(json, false);\n}\n\nexport function SessionLogInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionLogInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'app': !exists(json, 'app') ? undefined : json['app'],\n        'sessionPoolId': !exists(json, 'sessionPoolId') ? undefined : json['sessionPoolId'],\n        'instanceId': !exists(json, 'instanceId') ? undefined : json['instanceId'],\n        'lastModified': !exists(json, 'lastModified') ? undefined : json['lastModified'],\n    };\n}\n\nexport function SessionLogInfoToJSON(value?: SessionLogInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'app': value.app,\n        'sessionPoolId': value.sessionPoolId,\n        'instanceId': value.instanceId,\n        'lastModified': value.lastModified,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SessionPoolInfo\n */\nexport interface SessionPoolInfo {\n    /**\n     * \n     * @type {string}\n     * @memberof SessionPoolInfo\n     */\n    id?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SessionPoolInfo\n     */\n    priority?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SessionPoolInfo\n     */\n    maxInstances?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SessionPoolInfo\n     */\n    maxIdleInstances?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SessionPoolInfo\n     */\n    drainMode?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SessionPoolInfo\n     */\n    drainAutoMode?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SessionPoolInfo\n     */\n    verboseLogging?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SessionPoolInfo\n     */\n    stopped?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SessionPoolInfo\n     */\n    staticSP?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof SessionPoolInfo\n     */\n    connectedServers?: Array<string>;\n    /**\n     * \n     * @type {number}\n     * @memberof SessionPoolInfo\n     */\n    idle?: number;\n    /**\n     * \n     * @type {{ [key: string]: number; }}\n     * @memberof SessionPoolInfo\n     */\n    apps?: { [key: string]: number; };\n}\n\nexport function SessionPoolInfoFromJSON(json: any): SessionPoolInfo {\n    return SessionPoolInfoFromJSONTyped(json, false);\n}\n\nexport function SessionPoolInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionPoolInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'priority': !exists(json, 'priority') ? undefined : json['priority'],\n        'maxInstances': !exists(json, 'maxInstances') ? undefined : json['maxInstances'],\n        'maxIdleInstances': !exists(json, 'maxIdleInstances') ? undefined : json['maxIdleInstances'],\n        'drainMode': !exists(json, 'drainMode') ? undefined : json['drainMode'],\n        'drainAutoMode': !exists(json, 'drainAutoMode') ? undefined : json['drainAutoMode'],\n        'verboseLogging': !exists(json, 'verboseLogging') ? undefined : json['verboseLogging'],\n        'stopped': !exists(json, 'stopped') ? undefined : json['stopped'],\n        'staticSP': !exists(json, 'staticSP') ? undefined : json['staticSP'],\n        'connectedServers': !exists(json, 'connectedServers') ? undefined : json['connectedServers'],\n        'idle': !exists(json, 'idle') ? undefined : json['idle'],\n        'apps': !exists(json, 'apps') ? undefined : json['apps'],\n    };\n}\n\nexport function SessionPoolInfoToJSON(value?: SessionPoolInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'priority': value.priority,\n        'maxInstances': value.maxInstances,\n        'maxIdleInstances': value.maxIdleInstances,\n        'drainMode': value.drainMode,\n        'drainAutoMode': value.drainAutoMode,\n        'verboseLogging': value.verboseLogging,\n        'stopped': value.stopped,\n        'staticSP': value.staticSP,\n        'connectedServers': value.connectedServers,\n        'idle': value.idle,\n        'apps': value.apps,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SessionPoolLogInfo\n */\nexport interface SessionPoolLogInfo {\n    /**\n     * \n     * @type {string}\n     * @memberof SessionPoolLogInfo\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SessionPoolLogInfo\n     */\n    logDir?: string;\n}\n\nexport function SessionPoolLogInfoFromJSON(json: any): SessionPoolLogInfo {\n    return SessionPoolLogInfoFromJSONTyped(json, false);\n}\n\nexport function SessionPoolLogInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionPoolLogInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'logDir': !exists(json, 'logDir') ? undefined : json['logDir'],\n    };\n}\n\nexport function SessionPoolLogInfoToJSON(value?: SessionPoolLogInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'logDir': value.logDir,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    IdleSession,\n    IdleSessionFromJSON,\n    IdleSessionFromJSONTyped,\n    IdleSessionToJSON,\n    SwingSession,\n    SwingSessionFromJSON,\n    SwingSessionFromJSONTyped,\n    SwingSessionToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Sessions\n */\nexport interface Sessions {\n    /**\n     * \n     * @type {Array<SwingSession>}\n     * @memberof Sessions\n     */\n    sessions?: Array<SwingSession>;\n    /**\n     * \n     * @type {Array<IdleSession>}\n     * @memberof Sessions\n     */\n    idle?: Array<IdleSession>;\n    /**\n     * \n     * @type {Array<SwingSession>}\n     * @memberof Sessions\n     */\n    closedSessions?: Array<SwingSession>;\n}\n\nexport function SessionsFromJSON(json: any): Sessions {\n    return SessionsFromJSONTyped(json, false);\n}\n\nexport function SessionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Sessions {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'sessions': !exists(json, 'sessions') ? undefined : ((json['sessions'] as Array<any>).map(SwingSessionFromJSON)),\n        'idle': !exists(json, 'idle') ? undefined : ((json['idle'] as Array<any>).map(IdleSessionFromJSON)),\n        'closedSessions': !exists(json, 'closedSessions') ? undefined : ((json['closedSessions'] as Array<any>).map(SwingSessionFromJSON)),\n    };\n}\n\nexport function SessionsToJSON(value?: Sessions | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'sessions': value.sessions === undefined ? undefined : ((value.sessions as Array<any>).map(SwingSessionToJSON)),\n        'idle': value.idle === undefined ? undefined : ((value.idle as Array<any>).map(IdleSessionToJSON)),\n        'closedSessions': value.closedSessions === undefined ? undefined : ((value.closedSessions as Array<any>).map(SwingSessionToJSON)),\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    RecordingInfo,\n    RecordingInfoFromJSON,\n    RecordingInfoFromJSONTyped,\n    RecordingInfoToJSON,\n    ThreadDumpInfo,\n    ThreadDumpInfoFromJSON,\n    ThreadDumpInfoFromJSONTyped,\n    ThreadDumpInfoToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface SwingSession\n */\nexport interface SwingSession {\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    pid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    user?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    userIp?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    userOs?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    userBrowser?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    application?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    applicationPath?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SwingSession\n     */\n    startedAt?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SwingSession\n     */\n    endedAt?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SwingSession\n     */\n    connected?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SwingSession\n     */\n    applet?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof SwingSession\n     */\n    disconnectedSince?: number;\n    /**\n     * \n     * @type {RecordingInfo}\n     * @memberof SwingSession\n     */\n    recordingFile?: RecordingInfo;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    recordingStatus?: SwingSessionRecordingStatusEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    mirroringStatus?: SwingSessionMirroringStatusEnum;\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof SwingSession\n     */\n    stats?: { [key: string]: object; };\n    /**\n     * \n     * @type {{ [key: string]: number; }}\n     * @memberof SwingSession\n     */\n    metrics?: { [key: string]: number; };\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    status?: SwingSessionStatusEnum;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof SwingSession\n     */\n    warnings?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof SwingSession\n     */\n    warningHistory?: Array<string>;\n    /**\n     * \n     * @type {Array<ThreadDumpInfo>}\n     * @memberof SwingSession\n     */\n    threadDumps?: Array<ThreadDumpInfo>;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    applicationUrl?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SwingSession\n     */\n    loggingEnabled?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SwingSession\n     */\n    statisticsLoggingEnabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof SwingSession\n     */\n    sessionPoolId?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SwingSession\n     */\n    canRecord?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SwingSession\n     */\n    canMirror?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SwingSession\n     */\n    detached?: boolean;\n}\n\nexport function SwingSessionFromJSON(json: any): SwingSession {\n    return SwingSessionFromJSONTyped(json, false);\n}\n\nexport function SwingSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwingSession {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'pid': !exists(json, 'pid') ? undefined : json['pid'],\n        'user': !exists(json, 'user') ? undefined : json['user'],\n        'userIp': !exists(json, 'userIp') ? undefined : json['userIp'],\n        'userOs': !exists(json, 'userOs') ? undefined : json['userOs'],\n        'userBrowser': !exists(json, 'userBrowser') ? undefined : json['userBrowser'],\n        'application': !exists(json, 'application') ? undefined : json['application'],\n        'applicationPath': !exists(json, 'applicationPath') ? undefined : json['applicationPath'],\n        'startedAt': !exists(json, 'startedAt') ? undefined : json['startedAt'],\n        'endedAt': !exists(json, 'endedAt') ? undefined : json['endedAt'],\n        'connected': !exists(json, 'connected') ? undefined : json['connected'],\n        'applet': !exists(json, 'applet') ? undefined : json['applet'],\n        'disconnectedSince': !exists(json, 'disconnectedSince') ? undefined : json['disconnectedSince'],\n        'recordingFile': !exists(json, 'recordingFile') ? undefined : RecordingInfoFromJSON(json['recordingFile']),\n        'recordingStatus': !exists(json, 'recordingStatus') ? undefined : json['recordingStatus'],\n        'mirroringStatus': !exists(json, 'mirroringStatus') ? undefined : json['mirroringStatus'],\n        'stats': !exists(json, 'stats') ? undefined : json['stats'],\n        'metrics': !exists(json, 'metrics') ? undefined : json['metrics'],\n        'status': !exists(json, 'status') ? undefined : json['status'],\n        'warnings': !exists(json, 'warnings') ? undefined : json['warnings'],\n        'warningHistory': !exists(json, 'warningHistory') ? undefined : json['warningHistory'],\n        'threadDumps': !exists(json, 'threadDumps') ? undefined : ((json['threadDumps'] as Array<any>).map(ThreadDumpInfoFromJSON)),\n        'applicationUrl': !exists(json, 'applicationUrl') ? undefined : json['applicationUrl'],\n        'loggingEnabled': !exists(json, 'loggingEnabled') ? undefined : json['loggingEnabled'],\n        'statisticsLoggingEnabled': !exists(json, 'statisticsLoggingEnabled') ? undefined : json['statisticsLoggingEnabled'],\n        'sessionPoolId': !exists(json, 'sessionPoolId') ? undefined : json['sessionPoolId'],\n        'canRecord': !exists(json, 'canRecord') ? undefined : json['canRecord'],\n        'canMirror': !exists(json, 'canMirror') ? undefined : json['canMirror'],\n        'detached': !exists(json, 'detached') ? undefined : json['detached'],\n    };\n}\n\nexport function SwingSessionToJSON(value?: SwingSession | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'pid': value.pid,\n        'user': value.user,\n        'userIp': value.userIp,\n        'userOs': value.userOs,\n        'userBrowser': value.userBrowser,\n        'application': value.application,\n        'applicationPath': value.applicationPath,\n        'startedAt': value.startedAt,\n        'endedAt': value.endedAt,\n        'connected': value.connected,\n        'applet': value.applet,\n        'disconnectedSince': value.disconnectedSince,\n        'recordingFile': RecordingInfoToJSON(value.recordingFile),\n        'recordingStatus': value.recordingStatus,\n        'mirroringStatus': value.mirroringStatus,\n        'stats': value.stats,\n        'metrics': value.metrics,\n        'status': value.status,\n        'warnings': value.warnings,\n        'warningHistory': value.warningHistory,\n        'threadDumps': value.threadDumps === undefined ? undefined : ((value.threadDumps as Array<any>).map(ThreadDumpInfoToJSON)),\n        'applicationUrl': value.applicationUrl,\n        'loggingEnabled': value.loggingEnabled,\n        'statisticsLoggingEnabled': value.statisticsLoggingEnabled,\n        'sessionPoolId': value.sessionPoolId,\n        'canRecord': value.canRecord,\n        'canMirror': value.canMirror,\n        'detached': value.detached,\n    };\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum SwingSessionRecordingStatusEnum {\n    NOTRECORDING = 'NOT_RECORDING',\n    WAITINGFORRECORDINGAPPROVAL = 'WAITING_FOR_RECORDING_APPROVAL',\n    DENIEDRECORDINGBYUSER = 'DENIED_RECORDING_BY_USER',\n    RECORDING = 'RECORDING'\n}\n/**\n* @export\n* @enum {string}\n*/\nexport enum SwingSessionMirroringStatusEnum {\n    NOTMIRRORING = 'NOT_MIRRORING',\n    WAITINGFORMIRRORINGAPPROVAL = 'WAITING_FOR_MIRRORING_APPROVAL',\n    DENIEDMIRRORINGBYUSER = 'DENIED_MIRRORING_BY_USER',\n    MIRRORING = 'MIRRORING'\n}\n/**\n* @export\n* @enum {string}\n*/\nexport enum SwingSessionStatusEnum {\n    NOTSTARTED = 'NOT_STARTED',\n    EXITING = 'EXITING',\n    RUNNING = 'RUNNING',\n    FORCEKILLED = 'FORCE_KILLED',\n    FINISHED = 'FINISHED'\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ThreadDumpInfo\n */\nexport interface ThreadDumpInfo {\n    /**\n     * \n     * @type {number}\n     * @memberof ThreadDumpInfo\n     */\n    timestamp?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ThreadDumpInfo\n     */\n    reason?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ThreadDumpInfo\n     */\n    fileName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ThreadDumpInfo\n     */\n    token?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ThreadDumpInfo\n     */\n    appPath?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ThreadDumpInfo\n     */\n    instanceId?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ThreadDumpInfo\n     */\n    size?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ThreadDumpInfo\n     */\n    sessionPoolId?: string;\n}\n\nexport function ThreadDumpInfoFromJSON(json: any): ThreadDumpInfo {\n    return ThreadDumpInfoFromJSONTyped(json, false);\n}\n\nexport function ThreadDumpInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThreadDumpInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],\n        'reason': !exists(json, 'reason') ? undefined : json['reason'],\n        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],\n        'token': !exists(json, 'token') ? undefined : json['token'],\n        'appPath': !exists(json, 'appPath') ? undefined : json['appPath'],\n        'instanceId': !exists(json, 'instanceId') ? undefined : json['instanceId'],\n        'size': !exists(json, 'size') ? undefined : json['size'],\n        'sessionPoolId': !exists(json, 'sessionPoolId') ? undefined : json['sessionPoolId'],\n    };\n}\n\nexport function ThreadDumpInfoToJSON(value?: ThreadDumpInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'timestamp': value.timestamp,\n        'reason': value.reason,\n        'fileName': value.fileName,\n        'token': value.token,\n        'appPath': value.appPath,\n        'instanceId': value.instanceId,\n        'size': value.size,\n        'sessionPoolId': value.sessionPoolId,\n    };\n}\n\n\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    ActiveSessionsInfo,\n    ActiveSessionsInfoFromJSON,\n    ActiveSessionsInfoToJSON,\n    ApplicationInfo,\n    ApplicationInfoFromJSON,\n    ApplicationInfoToJSON,\n    BasicApplicationInfo,\n    BasicApplicationInfoFromJSON,\n    BasicApplicationInfoToJSON,\n    Permissions,\n    PermissionsFromJSON,\n    PermissionsToJSON,\n    Sessions,\n    SessionsFromJSON,\n    SessionsToJSON,\n} from '../models';\n\n/**\n * no description\n */\nexport class BasicApi extends runtime.BaseAPI {\n\n    /**\n     * Returns count of all live application sessions\n     * Get Number of Active Sessions\n     */\n    async activeSessionsCountRaw(): Promise<runtime.ApiResponse<number>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/activeSessionsCount`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Returns count of all live application sessions\n     * Get Number of Active Sessions\n     */\n    async activeSessionsCount(): Promise<number> {\n        const response = await this.activeSessionsCountRaw();\n        return await response.value();\n    }\n\n    /**\n     * Returns count of connected, disconnected and total count of active sessions\n     * Get Number of Active Sessions\n     */\n    async activeSessionsInfoRaw(): Promise<runtime.ApiResponse<ActiveSessionsInfo>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/activeSessionsInfo`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ActiveSessionsInfoFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns count of connected, disconnected and total count of active sessions\n     * Get Number of Active Sessions\n     */\n    async activeSessionsInfo(): Promise<ActiveSessionsInfo> {\n        const response = await this.activeSessionsInfoRaw();\n        return await response.value();\n    }\n\n    /**\n     * Returns applications png file\n     * Get Application Icon\n     */\n    async getIconRaw(): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/appicon`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Returns applications png file\n     * Get Application Icon\n     */\n    async getIcon(): Promise<string> {\n        const response = await this.getIconRaw();\n        return await response.value();\n    }\n\n    /**\n     * Return detailed information of this Server or Application\n     * Get Path Info\n     */\n    async getInfoRaw(): Promise<runtime.ApiResponse<ApplicationInfo>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/info`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ApplicationInfoFromJSON(jsonValue));\n    }\n\n    /**\n     * Return detailed information of this Server or Application\n     * Get Path Info\n     */\n    async getInfo(): Promise<ApplicationInfo> {\n        const response = await this.getInfoRaw();\n        return await response.value();\n    }\n\n    /**\n     * Returns basic information about available applications\n     * Get Available Applications\n     */\n    async getPathsRaw(): Promise<runtime.ApiResponse<Array<BasicApplicationInfo>>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/paths`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BasicApplicationInfoFromJSON));\n    }\n\n    /**\n     * Returns basic information about available applications\n     * Get Available Applications\n     */\n    async getPaths(): Promise<Array<BasicApplicationInfo>> {\n        const response = await this.getPathsRaw();\n        return await response.value();\n    }\n\n    /**\n     * Resolves if current user has permissions to perform selected actions\n     * Get User Permissions\n     */\n    async getPermissionsRaw(): Promise<runtime.ApiResponse<Permissions>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/permissions`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PermissionsFromJSON(jsonValue));\n    }\n\n    /**\n     * Resolves if current user has permissions to perform selected actions\n     * Get User Permissions\n     */\n    async getPermissions(): Promise<Permissions> {\n        const response = await this.getPermissionsRaw();\n        return await response.value();\n    }\n\n    /**\n     * Returns all live and finished server sessions\n     * Get All Sessions\n     */\n    async getSessionsRaw(): Promise<runtime.ApiResponse<Sessions>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/sessions`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SessionsFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns all live and finished server sessions\n     * Get All Sessions\n     */\n    async getSessions(): Promise<Sessions> {\n        const response = await this.getSessionsRaw();\n        return await response.value();\n    }\n\n    /**\n     * Stats are used to show usage graphs (CPU, MEM, Net)\n     * Get Aggregated Stats\n     */\n    async getStatsRaw(): Promise<runtime.ApiResponse<{ [key: string]: { [key: string]: number; }; }>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/stats`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Stats are used to show usage graphs (CPU, MEM, Net)\n     * Get Aggregated Stats\n     */\n    async getStats(): Promise<{ [key: string]: { [key: string]: number; }; }> {\n        const response = await this.getStatsRaw();\n        return await response.value();\n    }\n\n    /**\n     * Public URL of webswing server connected to this admin server\n     * Webswing Server public URL\n     */\n    async getUrlRaw(): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/url`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Public URL of webswing server connected to this admin server\n     * Webswing Server public URL\n     */\n    async getUrl(): Promise<string> {\n        const response = await this.getUrlRaw();\n        return await response.value();\n    }\n\n    /**\n     * Current Version of webswing using git-describe format\n     * Webswing Server Version\n     */\n    async getVersionRaw(): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/version`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Current Version of webswing using git-describe format\n     * Webswing Server Version\n     */\n    async getVersion(): Promise<string> {\n        const response = await this.getVersionRaw();\n        return await response.value();\n    }\n\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    RefreshTokenResult,\n    RefreshTokenResultFromJSON,\n    RefreshTokenResultToJSON,\n} from '../models';\n\nexport interface LoginApiLoginRequest {\n    accessId: string;\n}\n\n/**\n * no description\n */\nexport class LoginApi extends runtime.BaseAPI {\n\n    /**\n     * Check server health status, returns \\\"ok\\\", \\\"warning\\\" or \\\"error\\\"\n     * Server health status\n     */\n    async healthRaw(): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/health`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Check server health status, returns \\\"ok\\\", \\\"warning\\\" or \\\"error\\\"\n     * Server health status\n     */\n    async health(): Promise<string> {\n        const response = await this.healthRaw();\n        return await response.value();\n    }\n\n    /**\n     * Login callback from Webswing server after successful login\n     * Login\n     */\n    async loginRaw(requestParameters: LoginApiLoginRequest): Promise<runtime.ApiResponse<RefreshTokenResult>> {\n        if (requestParameters.accessId === null || requestParameters.accessId === undefined) {\n            throw new runtime.RequiredError('accessId','Required parameter requestParameters.accessId was null or undefined when calling login.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.accessId !== undefined) {\n            queryParameters['accessId'] = requestParameters.accessId;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/login`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RefreshTokenResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Login callback from Webswing server after successful login\n     * Login\n     */\n    async login(requestParameters: LoginApiLoginRequest): Promise<RefreshTokenResult> {\n        const response = await this.loginRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Logs out current admin console session\n     * Logout\n     */\n    async logoutRaw(): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/logout`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Logs out current admin console session\n     * Logout\n     */\n    async logout(): Promise<void> {\n        await this.logoutRaw();\n    }\n\n    /**\n     * Returns refreshed access and refresh token.\n     * Refresh Token\n     */\n    async refreshTokenRaw(): Promise<runtime.ApiResponse<RefreshTokenResult>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/refreshToken`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RefreshTokenResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns refreshed access and refresh token.\n     * Refresh Token\n     */\n    async refreshToken(): Promise<RefreshTokenResult> {\n        const response = await this.refreshTokenRaw();\n        return await response.value();\n    }\n\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\n\nexport interface ManageApplicationsApiCreateAppRequest {\n    appPath: string | null;\n    appName: string;\n}\n\nexport interface ManageApplicationsApiRemoveAppRequest {\n    appPath: string | null;\n}\n\nexport interface ManageApplicationsApiStartAppRequest {\n    appPath: string | null;\n}\n\nexport interface ManageApplicationsApiStopAppRequest {\n    appPath: string | null;\n}\n\n/**\n * no description\n */\nexport class ManageApplicationsApi extends runtime.BaseAPI {\n\n    /**\n     * Creates new application on defined path\n     * Create Application\n     */\n    async createAppRaw(requestParameters: ManageApplicationsApiCreateAppRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.appPath === null || requestParameters.appPath === undefined) {\n            throw new runtime.RequiredError('appPath','Required parameter requestParameters.appPath was null or undefined when calling createApp.');\n        }\n\n        if (requestParameters.appName === null || requestParameters.appName === undefined) {\n            throw new runtime.RequiredError('appName','Required parameter requestParameters.appName was null or undefined when calling createApp.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.appPath !== undefined) {\n            queryParameters['appPath'] = requestParameters.appPath;\n        }\n\n        if (requestParameters.appName !== undefined) {\n            queryParameters['appName'] = requestParameters.appName;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/create`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Creates new application on defined path\n     * Create Application\n     */\n    async createApp(requestParameters: ManageApplicationsApiCreateAppRequest): Promise<void> {\n        await this.createAppRaw(requestParameters);\n    }\n\n    /**\n     * Removes existing application on defined path\n     * Remove Application\n     */\n    async removeAppRaw(requestParameters: ManageApplicationsApiRemoveAppRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.appPath === null || requestParameters.appPath === undefined) {\n            throw new runtime.RequiredError('appPath','Required parameter requestParameters.appPath was null or undefined when calling removeApp.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.appPath !== undefined) {\n            queryParameters['appPath'] = requestParameters.appPath;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/remove`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Removes existing application on defined path\n     * Remove Application\n     */\n    async removeApp(requestParameters: ManageApplicationsApiRemoveAppRequest): Promise<void> {\n        await this.removeAppRaw(requestParameters);\n    }\n\n    /**\n     * Initialize application on defined path and make it accessible for users\n     * Enable Application\n     */\n    async startAppRaw(requestParameters: ManageApplicationsApiStartAppRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.appPath === null || requestParameters.appPath === undefined) {\n            throw new runtime.RequiredError('appPath','Required parameter requestParameters.appPath was null or undefined when calling startApp.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.appPath !== undefined) {\n            queryParameters['appPath'] = requestParameters.appPath;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/start`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Initialize application on defined path and make it accessible for users\n     * Enable Application\n     */\n    async startApp(requestParameters: ManageApplicationsApiStartAppRequest): Promise<void> {\n        await this.startAppRaw(requestParameters);\n    }\n\n    /**\n     * Stops the application configured on defined path and makes it unavailable for users\n     * Disable Application\n     */\n    async stopAppRaw(requestParameters: ManageApplicationsApiStopAppRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.appPath === null || requestParameters.appPath === undefined) {\n            throw new runtime.RequiredError('appPath','Required parameter requestParameters.appPath was null or undefined when calling stopApp.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.appPath !== undefined) {\n            queryParameters['appPath'] = requestParameters.appPath;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/stop`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Stops the application configured on defined path and makes it unavailable for users\n     * Disable Application\n     */\n    async stopApp(requestParameters: ManageApplicationsApiStopAppRequest): Promise<void> {\n        await this.stopAppRaw(requestParameters);\n    }\n\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    Config,\n    ConfigFromJSON,\n    ConfigToJSON,\n} from '../models';\n\nexport interface ManageConfigurationApiGetMetaRequest {\n    config: Config;\n}\n\nexport interface ManageConfigurationApiResolveRequest {\n    type: ResolveTypeEnum;\n    resolve: string;\n    sessionPoolId?: string;\n}\n\nexport interface ManageConfigurationApiSaveConfigRequest {\n    config: Config;\n}\n\nexport interface ManageConfigurationApiSearchVariablesRequest {\n    type: SearchVariablesTypeEnum;\n    search: string;\n    sessionPoolId?: string;\n}\n\n/**\n * no description\n */\nexport class ManageConfigurationApi extends runtime.BaseAPI {\n\n    /**\n     * Returns the saved configuration described by Meta-objects\n     * Get Config\n     */\n    async getConfigRaw(): Promise<runtime.ApiResponse<Config>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/config`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ConfigFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns the saved configuration described by Meta-objects\n     * Get Config\n     */\n    async getConfig(): Promise<Config> {\n        const response = await this.getConfigRaw();\n        return await response.value();\n    }\n\n    /**\n     * Operation accepts a json object which is annotated with meta information required to generate configuration web UI\n     * Describe Configuration\n     */\n    async getMetaRaw(requestParameters: ManageConfigurationApiGetMetaRequest): Promise<runtime.ApiResponse<Config>> {\n        if (requestParameters.config === null || requestParameters.config === undefined) {\n            throw new runtime.RequiredError('config','Required parameter requestParameters.config was null or undefined when calling getMeta.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/metaConfig`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ConfigToJSON(requestParameters.config),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ConfigFromJSON(jsonValue));\n    }\n\n    /**\n     * Operation accepts a json object which is annotated with meta information required to generate configuration web UI\n     * Describe Configuration\n     */\n    async getMeta(requestParameters: ManageConfigurationApiGetMetaRequest): Promise<Config> {\n        const response = await this.getMetaRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Replaces all variables in a given string and returns the resolved string\n     * Resolve Variables.\n     */\n    async resolveRaw(requestParameters: ManageConfigurationApiResolveRequest): Promise<runtime.ApiResponse<{ [key: string]: Array<string>; }>> {\n        if (requestParameters.type === null || requestParameters.type === undefined) {\n            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling resolve.');\n        }\n\n        if (requestParameters.resolve === null || requestParameters.resolve === undefined) {\n            throw new runtime.RequiredError('resolve','Required parameter requestParameters.resolve was null or undefined when calling resolve.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.resolve !== undefined) {\n            queryParameters['resolve'] = requestParameters.resolve;\n        }\n\n        if (requestParameters.sessionPoolId !== undefined) {\n            queryParameters['sessionPoolId'] = requestParameters.sessionPoolId;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/variables/resolve/{type}`.replace(`{${\"type\"}}`, encodeURIComponent(String(requestParameters.type))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Replaces all variables in a given string and returns the resolved string\n     * Resolve Variables.\n     */\n    async resolve(requestParameters: ManageConfigurationApiResolveRequest): Promise<{ [key: string]: Array<string>; }> {\n        const response = await this.resolveRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Saves the submitted configuration to persistent store\n     * Set Config\n     */\n    async saveConfigRaw(requestParameters: ManageConfigurationApiSaveConfigRequest): Promise<runtime.ApiResponse<Array<string>>> {\n        if (requestParameters.config === null || requestParameters.config === undefined) {\n            throw new runtime.RequiredError('config','Required parameter requestParameters.config was null or undefined when calling saveConfig.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/config`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ConfigToJSON(requestParameters.config),\n        });\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Saves the submitted configuration to persistent store\n     * Set Config\n     */\n    async saveConfig(requestParameters: ManageConfigurationApiSaveConfigRequest): Promise<Array<string>> {\n        const response = await this.saveConfigRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * **Return list of first 10 variables which start with, or contain given string, the search sequence.**   Result contains only first 10 found variables whose start, or contain search sequence. Result is made, at first, from alphabetically sorted group of found variables, whose names start with search sequence. At second, following another sorted group of found variables, whose names contains search sequence. \n     * Find Variables\n     */\n    async searchVariablesRaw(requestParameters: ManageConfigurationApiSearchVariablesRequest): Promise<runtime.ApiResponse<{ [key: string]: string; }>> {\n        if (requestParameters.type === null || requestParameters.type === undefined) {\n            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling searchVariables.');\n        }\n\n        if (requestParameters.search === null || requestParameters.search === undefined) {\n            throw new runtime.RequiredError('search','Required parameter requestParameters.search was null or undefined when calling searchVariables.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.search !== undefined) {\n            queryParameters['search'] = requestParameters.search;\n        }\n\n        if (requestParameters.sessionPoolId !== undefined) {\n            queryParameters['sessionPoolId'] = requestParameters.sessionPoolId;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/variables/search/{type}`.replace(`{${\"type\"}}`, encodeURIComponent(String(requestParameters.type))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * **Return list of first 10 variables which start with, or contain given string, the search sequence.**   Result contains only first 10 found variables whose start, or contain search sequence. Result is made, at first, from alphabetically sorted group of found variables, whose names start with search sequence. At second, following another sorted group of found variables, whose names contains search sequence. \n     * Find Variables\n     */\n    async searchVariables(requestParameters: ManageConfigurationApiSearchVariablesRequest): Promise<{ [key: string]: string; }> {\n        const response = await this.searchVariablesRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n\n/**\n    * @export\n    * @enum {string}\n    */\nexport enum ResolveTypeEnum {\n    Basic = 'Basic',\n    SwingInstance = 'SwingInstance',\n    SwingApp = 'SwingApp',\n    AutoScaling = 'AutoScaling'\n}\n/**\n    * @export\n    * @enum {string}\n    */\nexport enum SearchVariablesTypeEnum {\n    Basic = 'Basic',\n    SwingInstance = 'SwingInstance',\n    SwingApp = 'SwingApp',\n    AutoScaling = 'AutoScaling'\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    MetaObject,\n    MetaObjectFromJSON,\n    MetaObjectToJSON,\n} from '../models';\n\nexport interface ManageScalingApiGetScalingMetaRequest {\n    metaObject: MetaObject;\n}\n\nexport interface ManageScalingApiGetScalingStatsRequest {\n    statType: GetScalingStatsStatTypeEnum;\n}\n\nexport interface ManageScalingApiResolveScalingRequest {\n    type: ResolveScalingTypeEnum;\n    resolve: string;\n}\n\nexport interface ManageScalingApiSaveScalingConfigRequest {\n    metaObject: MetaObject;\n}\n\nexport interface ManageScalingApiSearchScalingVariablesRequest {\n    type: SearchScalingVariablesTypeEnum;\n    search: string;\n}\n\n/**\n * no description\n */\nexport class ManageScalingApi extends runtime.BaseAPI {\n\n    /**\n     * Returns the saved configuration described by Meta-objects\n     * Get Scaling Config\n     */\n    async getScalingConfigRaw(): Promise<runtime.ApiResponse<MetaObject>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/scaling/config`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MetaObjectFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns the saved configuration described by Meta-objects\n     * Get Scaling Config\n     */\n    async getScalingConfig(): Promise<MetaObject> {\n        const response = await this.getScalingConfigRaw();\n        return await response.value();\n    }\n\n    /**\n     * Operation accepts a json object which is annotated with meta information required to generate configuration web UI\n     * Describe Scaling Configuration\n     */\n    async getScalingMetaRaw(requestParameters: ManageScalingApiGetScalingMetaRequest): Promise<runtime.ApiResponse<MetaObject>> {\n        if (requestParameters.metaObject === null || requestParameters.metaObject === undefined) {\n            throw new runtime.RequiredError('metaObject','Required parameter requestParameters.metaObject was null or undefined when calling getScalingMeta.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/scaling/metaConfig`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: MetaObjectToJSON(requestParameters.metaObject),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MetaObjectFromJSON(jsonValue));\n    }\n\n    /**\n     * Operation accepts a json object which is annotated with meta information required to generate configuration web UI\n     * Describe Scaling Configuration\n     */\n    async getScalingMeta(requestParameters: ManageScalingApiGetScalingMetaRequest): Promise<MetaObject> {\n        const response = await this.getScalingMetaRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns the scaling statistics\n     * Get Scaling Stats\n     */\n    async getScalingStatsRaw(requestParameters: ManageScalingApiGetScalingStatsRequest): Promise<runtime.ApiResponse<{ [key: string]: object; }>> {\n        if (requestParameters.statType === null || requestParameters.statType === undefined) {\n            throw new runtime.RequiredError('statType','Required parameter requestParameters.statType was null or undefined when calling getScalingStats.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.statType !== undefined) {\n            queryParameters['statType'] = requestParameters.statType;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/scaling/stats`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Returns the scaling statistics\n     * Get Scaling Stats\n     */\n    async getScalingStats(requestParameters: ManageScalingApiGetScalingStatsRequest): Promise<{ [key: string]: object; }> {\n        const response = await this.getScalingStatsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Replaces all variables in a given string and returns the resolved string\n     * Resolve Variables.\n     */\n    async resolveScalingRaw(requestParameters: ManageScalingApiResolveScalingRequest): Promise<runtime.ApiResponse<{ [key: string]: Array<string>; }>> {\n        if (requestParameters.type === null || requestParameters.type === undefined) {\n            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling resolveScaling.');\n        }\n\n        if (requestParameters.resolve === null || requestParameters.resolve === undefined) {\n            throw new runtime.RequiredError('resolve','Required parameter requestParameters.resolve was null or undefined when calling resolveScaling.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.resolve !== undefined) {\n            queryParameters['resolve'] = requestParameters.resolve;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/scaling/variables/resolve/{type}`.replace(`{${\"type\"}}`, encodeURIComponent(String(requestParameters.type))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Replaces all variables in a given string and returns the resolved string\n     * Resolve Variables.\n     */\n    async resolveScaling(requestParameters: ManageScalingApiResolveScalingRequest): Promise<{ [key: string]: Array<string>; }> {\n        const response = await this.resolveScalingRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Saves the submitted configuration to persistent store\n     * Set Scaling Config\n     */\n    async saveScalingConfigRaw(requestParameters: ManageScalingApiSaveScalingConfigRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.metaObject === null || requestParameters.metaObject === undefined) {\n            throw new runtime.RequiredError('metaObject','Required parameter requestParameters.metaObject was null or undefined when calling saveScalingConfig.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/scaling/config`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: MetaObjectToJSON(requestParameters.metaObject),\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Saves the submitted configuration to persistent store\n     * Set Scaling Config\n     */\n    async saveScalingConfig(requestParameters: ManageScalingApiSaveScalingConfigRequest): Promise<void> {\n        await this.saveScalingConfigRaw(requestParameters);\n    }\n\n    /**\n     * **Return list of first 10 variables which start with, or contain given string, the search sequence.**  Result contains only first 10 found variables whose start, or contain search sequence. Result is made, at first, from alphabetically sorted group of found variables, whose names start with search sequence. At second, following another sorted group of found variables, whose names contains search sequence. \n     * Find Variables\n     */\n    async searchScalingVariablesRaw(requestParameters: ManageScalingApiSearchScalingVariablesRequest): Promise<runtime.ApiResponse<{ [key: string]: string; }>> {\n        if (requestParameters.type === null || requestParameters.type === undefined) {\n            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling searchScalingVariables.');\n        }\n\n        if (requestParameters.search === null || requestParameters.search === undefined) {\n            throw new runtime.RequiredError('search','Required parameter requestParameters.search was null or undefined when calling searchScalingVariables.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.search !== undefined) {\n            queryParameters['search'] = requestParameters.search;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/scaling/variables/search/{type}`.replace(`{${\"type\"}}`, encodeURIComponent(String(requestParameters.type))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * **Return list of first 10 variables which start with, or contain given string, the search sequence.**  Result contains only first 10 found variables whose start, or contain search sequence. Result is made, at first, from alphabetically sorted group of found variables, whose names start with search sequence. At second, following another sorted group of found variables, whose names contains search sequence. \n     * Find Variables\n     */\n    async searchScalingVariables(requestParameters: ManageScalingApiSearchScalingVariablesRequest): Promise<{ [key: string]: string; }> {\n        const response = await this.searchScalingVariablesRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n\n/**\n    * @export\n    * @enum {string}\n    */\nexport enum GetScalingStatsStatTypeEnum {\n    Basic = 'Basic',\n    Extended = 'Extended'\n}\n/**\n    * @export\n    * @enum {string}\n    */\nexport enum ResolveScalingTypeEnum {\n    Basic = 'Basic',\n    SwingInstance = 'SwingInstance',\n    SwingApp = 'SwingApp',\n    AutoScaling = 'AutoScaling'\n}\n/**\n    * @export\n    * @enum {string}\n    */\nexport enum SearchScalingVariablesTypeEnum {\n    Basic = 'Basic',\n    SwingInstance = 'SwingInstance',\n    SwingApp = 'SwingApp',\n    AutoScaling = 'AutoScaling'\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    RecordingInfo,\n    RecordingInfoFromJSON,\n    RecordingInfoToJSON,\n    SwingSession,\n    SwingSessionFromJSON,\n    SwingSessionToJSON,\n    ThreadDumpInfo,\n    ThreadDumpInfoFromJSON,\n    ThreadDumpInfoToJSON,\n} from '../models';\n\nexport interface ManageSessionsApiGetMetricsRequest {\n    instanceId: string;\n}\n\nexport interface ManageSessionsApiGetSessionRequest {\n    id: string;\n}\n\nexport interface ManageSessionsApiListRecordingsRequest {\n    instanceId?: string;\n}\n\nexport interface ManageSessionsApiListThreadDumpsRequest {\n    instanceId?: string;\n}\n\nexport interface ManageSessionsApiRequestThreadDumpRequest {\n    instanceId: string;\n}\n\nexport interface ManageSessionsApiShutdownRequest {\n    id: string;\n    force?: string | null;\n}\n\nexport interface ManageSessionsApiStartRecordingRequest {\n    id: string;\n}\n\nexport interface ManageSessionsApiStopRecordingRequest {\n    id: string;\n}\n\nexport interface ManageSessionsApiToggleStatisticsLoggingRequest {\n    instanceId: string;\n    enabled: boolean;\n}\n\n/**\n * no description\n */\nexport class ManageSessionsApi extends runtime.BaseAPI {\n\n    /**\n     * Returns session metrics for single session\n     * Get Session Metrics\n     */\n    async getMetricsRaw(requestParameters: ManageSessionsApiGetMetricsRequest): Promise<runtime.ApiResponse<SwingSession>> {\n        if (requestParameters.instanceId === null || requestParameters.instanceId === undefined) {\n            throw new runtime.RequiredError('instanceId','Required parameter requestParameters.instanceId was null or undefined when calling getMetrics.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/metrics/{instanceId}`.replace(`{${\"instanceId\"}}`, encodeURIComponent(String(requestParameters.instanceId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SwingSessionFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns session metrics for single session\n     * Get Session Metrics\n     */\n    async getMetrics(requestParameters: ManageSessionsApiGetMetricsRequest): Promise<SwingSession> {\n        const response = await this.getMetricsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns details of single session\n     * Get Session details\n     */\n    async getSessionRaw(requestParameters: ManageSessionsApiGetSessionRequest): Promise<runtime.ApiResponse<SwingSession>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getSession.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/session/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SwingSessionFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns details of single session\n     * Get Session details\n     */\n    async getSession(requestParameters: ManageSessionsApiGetSessionRequest): Promise<SwingSession> {\n        const response = await this.getSessionRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * List recording files from recording folder\n     * List recordings\n     */\n    async listRecordingsRaw(requestParameters: ManageSessionsApiListRecordingsRequest): Promise<runtime.ApiResponse<Array<RecordingInfo>>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.instanceId !== undefined) {\n            queryParameters['instanceId'] = requestParameters.instanceId;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/record/list`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RecordingInfoFromJSON));\n    }\n\n    /**\n     * List recording files from recording folder\n     * List recordings\n     */\n    async listRecordings(requestParameters: ManageSessionsApiListRecordingsRequest): Promise<Array<RecordingInfo>> {\n        const response = await this.listRecordingsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * List thread dump files from thread dumps folder\n     * List thread dumps\n     */\n    async listThreadDumpsRaw(requestParameters: ManageSessionsApiListThreadDumpsRequest): Promise<runtime.ApiResponse<Array<ThreadDumpInfo>>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.instanceId !== undefined) {\n            queryParameters['instanceId'] = requestParameters.instanceId;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/threadDump/list`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ThreadDumpInfoFromJSON));\n    }\n\n    /**\n     * List thread dump files from thread dumps folder\n     * List thread dumps\n     */\n    async listThreadDumps(requestParameters: ManageSessionsApiListThreadDumpsRequest): Promise<Array<ThreadDumpInfo>> {\n        const response = await this.listThreadDumpsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Requests server to create a new thread dump for selected instance ID\n     * Create Thread Dump\n     */\n    async requestThreadDumpRaw(requestParameters: ManageSessionsApiRequestThreadDumpRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.instanceId === null || requestParameters.instanceId === undefined) {\n            throw new runtime.RequiredError('instanceId','Required parameter requestParameters.instanceId was null or undefined when calling requestThreadDump.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/threadDump/{instanceId}`.replace(`{${\"instanceId\"}}`, encodeURIComponent(String(requestParameters.instanceId))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Requests server to create a new thread dump for selected instance ID\n     * Create Thread Dump\n     */\n    async requestThreadDump(requestParameters: ManageSessionsApiRequestThreadDumpRequest): Promise<void> {\n        await this.requestThreadDumpRaw(requestParameters);\n    }\n\n    /**\n     * Requests clean session shutdown or forced session process kill if force parameter is true\n     * Request session shutdown\n     */\n    async shutdownRaw(requestParameters: ManageSessionsApiShutdownRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling shutdown.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.force !== undefined) {\n            queryParameters['force'] = requestParameters.force;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/session/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Requests clean session shutdown or forced session process kill if force parameter is true\n     * Request session shutdown\n     */\n    async shutdown(requestParameters: ManageSessionsApiShutdownRequest): Promise<void> {\n        await this.shutdownRaw(requestParameters);\n    }\n\n    /**\n     * Requests server to start session recording\n     * Start Session Recording\n     */\n    async startRecordingRaw(requestParameters: ManageSessionsApiStartRecordingRequest): Promise<runtime.ApiResponse<SwingSession>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling startRecording.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/record/start/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SwingSessionFromJSON(jsonValue));\n    }\n\n    /**\n     * Requests server to start session recording\n     * Start Session Recording\n     */\n    async startRecording(requestParameters: ManageSessionsApiStartRecordingRequest): Promise<SwingSession> {\n        const response = await this.startRecordingRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Requests server to stop session recording\n     * Stop Session Recording\n     */\n    async stopRecordingRaw(requestParameters: ManageSessionsApiStopRecordingRequest): Promise<runtime.ApiResponse<SwingSession>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling stopRecording.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/record/stop/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SwingSessionFromJSON(jsonValue));\n    }\n\n    /**\n     * Requests server to stop session recording\n     * Stop Session Recording\n     */\n    async stopRecording(requestParameters: ManageSessionsApiStopRecordingRequest): Promise<SwingSession> {\n        const response = await this.stopRecordingRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Sets current value of statistics logging for this session\n     * Set statistics logging value\n     */\n    async toggleStatisticsLoggingRaw(requestParameters: ManageSessionsApiToggleStatisticsLoggingRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.instanceId === null || requestParameters.instanceId === undefined) {\n            throw new runtime.RequiredError('instanceId','Required parameter requestParameters.instanceId was null or undefined when calling toggleStatisticsLogging.');\n        }\n\n        if (requestParameters.enabled === null || requestParameters.enabled === undefined) {\n            throw new runtime.RequiredError('enabled','Required parameter requestParameters.enabled was null or undefined when calling toggleStatisticsLogging.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/toggleStatisticsLogging/{instanceId}/{enabled}`.replace(`{${\"instanceId\"}}`, encodeURIComponent(String(requestParameters.instanceId))).replace(`{${\"enabled\"}}`, encodeURIComponent(String(requestParameters.enabled))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Sets current value of statistics logging for this session\n     * Set statistics logging value\n     */\n    async toggleStatisticsLogging(requestParameters: ManageSessionsApiToggleStatisticsLoggingRequest): Promise<void> {\n        await this.toggleStatisticsLoggingRaw(requestParameters);\n    }\n\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    Overview,\n    OverviewFromJSON,\n    OverviewToJSON,\n    VerboseModeRequest,\n    VerboseModeRequestFromJSON,\n    VerboseModeRequestToJSON,\n} from '../models';\n\nexport interface OverviewApiRequestSessionPoolDrainModeRequest {\n    id: string;\n}\n\nexport interface OverviewApiRequestSessionPoolReloadWebsocketUrlsRequest {\n    id: string;\n}\n\nexport interface OverviewApiRequestSessionPoolResumeRequest {\n    id: string;\n}\n\nexport interface OverviewApiRequestSessionPoolStopRequest {\n    id: string;\n}\n\nexport interface OverviewApiSetVerboseModeRequest {\n    verboseModeRequest: VerboseModeRequest;\n}\n\n/**\n * no description\n */\nexport class OverviewApi extends runtime.BaseAPI {\n\n    /**\n     * Info about cluster server, session pools and their stats\n     * Get information about cluster overview\n     */\n    async getOverviewRaw(): Promise<runtime.ApiResponse<Overview>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/overview`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => OverviewFromJSON(jsonValue));\n    }\n\n    /**\n     * Info about cluster server, session pools and their stats\n     * Get information about cluster overview\n     */\n    async getOverview(): Promise<Overview> {\n        const response = await this.getOverviewRaw();\n        return await response.value();\n    }\n\n    /**\n     * Forces a reload of admin console websocket URLs\n     * Reload AC Websocket URLs\n     */\n    async requestAdminConsoleReloadWebsocketUrlsRaw(): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/overview/reloadWebsocketUrls`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Forces a reload of admin console websocket URLs\n     * Reload AC Websocket URLs\n     */\n    async requestAdminConsoleReloadWebsocketUrls(): Promise<void> {\n        await this.requestAdminConsoleReloadWebsocketUrlsRaw();\n    }\n\n    /**\n     * Requests SessionPool to turn into drain mode\n     * Request drain mode\n     */\n    async requestSessionPoolDrainModeRaw(requestParameters: OverviewApiRequestSessionPoolDrainModeRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling requestSessionPoolDrainMode.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/overview/sessionpool/drain/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Requests SessionPool to turn into drain mode\n     * Request drain mode\n     */\n    async requestSessionPoolDrainMode(requestParameters: OverviewApiRequestSessionPoolDrainModeRequest): Promise<void> {\n        await this.requestSessionPoolDrainModeRaw(requestParameters);\n    }\n\n    /**\n     * Forces a reload of session pool websocket URLs\n     * Reload SP Websocket URLs\n     */\n    async requestSessionPoolReloadWebsocketUrlsRaw(requestParameters: OverviewApiRequestSessionPoolReloadWebsocketUrlsRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling requestSessionPoolReloadWebsocketUrls.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/overview/sessionpool/reloadWebsocketUrls/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Forces a reload of session pool websocket URLs\n     * Reload SP Websocket URLs\n     */\n    async requestSessionPoolReloadWebsocketUrls(requestParameters: OverviewApiRequestSessionPoolReloadWebsocketUrlsRequest): Promise<void> {\n        await this.requestSessionPoolReloadWebsocketUrlsRaw(requestParameters);\n    }\n\n    /**\n     * Requests SessionPool resume\n     * Request resume\n     */\n    async requestSessionPoolResumeRaw(requestParameters: OverviewApiRequestSessionPoolResumeRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling requestSessionPoolResume.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/overview/sessionpool/resume/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Requests SessionPool resume\n     * Request resume\n     */\n    async requestSessionPoolResume(requestParameters: OverviewApiRequestSessionPoolResumeRequest): Promise<void> {\n        await this.requestSessionPoolResumeRaw(requestParameters);\n    }\n\n    /**\n     * Requests SessionPool stop\n     * Request stop\n     */\n    async requestSessionPoolStopRaw(requestParameters: OverviewApiRequestSessionPoolStopRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling requestSessionPoolStop.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/overview/sessionpool/stop/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Requests SessionPool stop\n     * Request stop\n     */\n    async requestSessionPoolStop(requestParameters: OverviewApiRequestSessionPoolStopRequest): Promise<void> {\n        await this.requestSessionPoolStopRaw(requestParameters);\n    }\n\n    /**\n     * Requests Server or session pool to enable/disable verbose logging\n     * Set verbose logging\n     */\n    async setVerboseModeRaw(requestParameters: OverviewApiSetVerboseModeRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.verboseModeRequest === null || requestParameters.verboseModeRequest === undefined) {\n            throw new runtime.RequiredError('verboseModeRequest','Required parameter requestParameters.verboseModeRequest was null or undefined when calling setVerboseMode.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/overview/verbose`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: VerboseModeRequestToJSON(requestParameters.verboseModeRequest),\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Requests Server or session pool to enable/disable verbose logging\n     * Set verbose logging\n     */\n    async setVerboseMode(requestParameters: OverviewApiSetVerboseModeRequest): Promise<void> {\n        await this.setVerboseModeRaw(requestParameters);\n    }\n\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    QuickStart,\n    QuickStartFromJSON,\n    QuickStartToJSON,\n    QuickStartConfig,\n    QuickStartConfigFromJSON,\n    QuickStartConfigToJSON,\n} from '../models';\n\nexport interface QuickStartApiQuickStartConfigRequest {\n    quickStartConfig: QuickStartConfig;\n}\n\n/**\n * no description\n */\nexport class QuickStartApi extends runtime.BaseAPI {\n\n    /**\n     * Get feedback URL if this is eval and feedback is requested\n     * Get feedback URL\n     */\n    async getFeedbackUrlRaw(): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/feedbackUrl`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Get feedback URL if this is eval and feedback is requested\n     * Get feedback URL\n     */\n    async getFeedbackUrl(): Promise<string> {\n        const response = await this.getFeedbackUrlRaw();\n        return await response.value();\n    }\n\n    /**\n     * Get information required in quick start process.\n     * Get Quickstart Information\n     */\n    async getQuickStartRaw(): Promise<runtime.ApiResponse<QuickStart>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/quickstart`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QuickStartFromJSON(jsonValue));\n    }\n\n    /**\n     * Get information required in quick start process.\n     * Get Quickstart Information\n     */\n    async getQuickStart(): Promise<QuickStart> {\n        const response = await this.getQuickStartRaw();\n        return await response.value();\n    }\n\n    /**\n     * Submits quick start config and creates the app. Returns created app path.\n     * Submit quick start config\n     */\n    async quickStartConfigRaw(requestParameters: QuickStartApiQuickStartConfigRequest): Promise<runtime.ApiResponse<string>> {\n        if (requestParameters.quickStartConfig === null || requestParameters.quickStartConfig === undefined) {\n            throw new runtime.RequiredError('quickStartConfig','Required parameter requestParameters.quickStartConfig was null or undefined when calling quickStartConfig.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/quickstartconfig`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: QuickStartConfigToJSON(requestParameters.quickStartConfig),\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Submits quick start config and creates the app. Returns created app path.\n     * Submit quick start config\n     */\n    async quickStartConfig(requestParameters: QuickStartApiQuickStartConfigRequest): Promise<string> {\n        const response = await this.quickStartConfigRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n","// tslint:disable\n// eslint-disable\n/**\n * Webswing REST API\n * The public REST API provided by Webswing Server\n *\n * The version of the OpenAPI document: API version\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    LogRequest,\n    LogRequestFromJSON,\n    LogRequestToJSON,\n    LogResponse,\n    LogResponseFromJSON,\n    LogResponseToJSON,\n    LogsOverview,\n    LogsOverviewFromJSON,\n    LogsOverviewToJSON,\n} from '../models';\n\nexport interface ViewLogsApiDownloadAdminConsoleLogsRequest {\n    token: string;\n}\n\nexport interface ViewLogsApiDownloadServerLogsRequest {\n    id: string;\n    type: string;\n    token: string;\n}\n\nexport interface ViewLogsApiGetAdminConsoleLogsRequest {\n    logRequest: LogRequest;\n}\n\nexport interface ViewLogsApiGetAutoScalingLogsRequest {\n    logRequest: LogRequest;\n}\n\nexport interface ViewLogsApiGetServerLogsRequest {\n    id: string;\n    type: string;\n    logRequest: LogRequest;\n}\n\nexport interface ViewLogsApiGetSessionLogsRequest {\n    sessionPoolId: string;\n    instanceId: string;\n    appPath: string;\n    logRequest: LogRequest;\n}\n\nexport interface ViewLogsApiGetSessionPoolLogsRequest {\n    id: string;\n    logRequest: LogRequest;\n}\n\n/**\n * no description\n */\nexport class ViewLogsApi extends runtime.BaseAPI {\n\n    /**\n     * Downloads log files as a single zip file\n     * Download Admin Console logs\n     */\n    async downloadAdminConsoleLogsRaw(requestParameters: ViewLogsApiDownloadAdminConsoleLogsRequest): Promise<runtime.ApiResponse<Blob>> {\n        if (requestParameters.token === null || requestParameters.token === undefined) {\n            throw new runtime.RequiredError('token','Required parameter requestParameters.token was null or undefined when calling downloadAdminConsoleLogs.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/logs/console/{token}`.replace(`{${\"token\"}}`, encodeURIComponent(String(requestParameters.token))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.BlobApiResponse(response);\n    }\n\n    /**\n     * Downloads log files as a single zip file\n     * Download Admin Console logs\n     */\n    async downloadAdminConsoleLogs(requestParameters: ViewLogsApiDownloadAdminConsoleLogsRequest): Promise<Blob> {\n        const response = await this.downloadAdminConsoleLogsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Downloads log files as a single zip file\n     * Download Server Logs\n     */\n    async downloadServerLogsRaw(requestParameters: ViewLogsApiDownloadServerLogsRequest): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling downloadServerLogs.');\n        }\n\n        if (requestParameters.type === null || requestParameters.type === undefined) {\n            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling downloadServerLogs.');\n        }\n\n        if (requestParameters.token === null || requestParameters.token === undefined) {\n            throw new runtime.RequiredError('token','Required parameter requestParameters.token was null or undefined when calling downloadServerLogs.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/logs/server/{id}/{type}/{token}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${\"type\"}}`, encodeURIComponent(String(requestParameters.type))).replace(`{${\"token\"}}`, encodeURIComponent(String(requestParameters.token))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Downloads log files as a single zip file\n     * Download Server Logs\n     */\n    async downloadServerLogs(requestParameters: ViewLogsApiDownloadServerLogsRequest): Promise<object> {\n        const response = await this.downloadServerLogsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns requested range of admin console logs\n     * Request Admin Console Log Content\n     */\n    async getAdminConsoleLogsRaw(requestParameters: ViewLogsApiGetAdminConsoleLogsRequest): Promise<runtime.ApiResponse<LogResponse>> {\n        if (requestParameters.logRequest === null || requestParameters.logRequest === undefined) {\n            throw new runtime.RequiredError('logRequest','Required parameter requestParameters.logRequest was null or undefined when calling getAdminConsoleLogs.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/logs/console`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: LogRequestToJSON(requestParameters.logRequest),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LogResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns requested range of admin console logs\n     * Request Admin Console Log Content\n     */\n    async getAdminConsoleLogs(requestParameters: ViewLogsApiGetAdminConsoleLogsRequest): Promise<LogResponse> {\n        const response = await this.getAdminConsoleLogsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns requested range of scaling logs\n     * Request Auto-Scaling Service Log Content\n     */\n    async getAutoScalingLogsRaw(requestParameters: ViewLogsApiGetAutoScalingLogsRequest): Promise<runtime.ApiResponse<LogResponse>> {\n        if (requestParameters.logRequest === null || requestParameters.logRequest === undefined) {\n            throw new runtime.RequiredError('logRequest','Required parameter requestParameters.logRequest was null or undefined when calling getAutoScalingLogs.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/logs/scaling`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: LogRequestToJSON(requestParameters.logRequest),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LogResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns requested range of scaling logs\n     * Request Auto-Scaling Service Log Content\n     */\n    async getAutoScalingLogs(requestParameters: ViewLogsApiGetAutoScalingLogsRequest): Promise<LogResponse> {\n        const response = await this.getAutoScalingLogsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns overview of log sources\n     * Get logs overview\n     */\n    async getLogsOverviewRaw(): Promise<runtime.ApiResponse<LogsOverview>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/rest/logs/overview`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LogsOverviewFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns overview of log sources\n     * Get logs overview\n     */\n    async getLogsOverview(): Promise<LogsOverview> {\n        const response = await this.getLogsOverviewRaw();\n        return await response.value();\n    }\n\n    /**\n     * Returns requested range of server logs from defined log type\n     * Request Server Log Content\n     */\n    async getServerLogsRaw(requestParameters: ViewLogsApiGetServerLogsRequest): Promise<runtime.ApiResponse<LogResponse>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getServerLogs.');\n        }\n\n        if (requestParameters.type === null || requestParameters.type === undefined) {\n            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling getServerLogs.');\n        }\n\n        if (requestParameters.logRequest === null || requestParameters.logRequest === undefined) {\n            throw new runtime.RequiredError('logRequest','Required parameter requestParameters.logRequest was null or undefined when calling getServerLogs.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/logs/server/{id}/{type}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${\"type\"}}`, encodeURIComponent(String(requestParameters.type))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: LogRequestToJSON(requestParameters.logRequest),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LogResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns requested range of server logs from defined log type\n     * Request Server Log Content\n     */\n    async getServerLogs(requestParameters: ViewLogsApiGetServerLogsRequest): Promise<LogResponse> {\n        const response = await this.getServerLogsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns requested range of session logs\n     * Request Session Log Content\n     */\n    async getSessionLogsRaw(requestParameters: ViewLogsApiGetSessionLogsRequest): Promise<runtime.ApiResponse<LogResponse>> {\n        if (requestParameters.sessionPoolId === null || requestParameters.sessionPoolId === undefined) {\n            throw new runtime.RequiredError('sessionPoolId','Required parameter requestParameters.sessionPoolId was null or undefined when calling getSessionLogs.');\n        }\n\n        if (requestParameters.instanceId === null || requestParameters.instanceId === undefined) {\n            throw new runtime.RequiredError('instanceId','Required parameter requestParameters.instanceId was null or undefined when calling getSessionLogs.');\n        }\n\n        if (requestParameters.appPath === null || requestParameters.appPath === undefined) {\n            throw new runtime.RequiredError('appPath','Required parameter requestParameters.appPath was null or undefined when calling getSessionLogs.');\n        }\n\n        if (requestParameters.logRequest === null || requestParameters.logRequest === undefined) {\n            throw new runtime.RequiredError('logRequest','Required parameter requestParameters.logRequest was null or undefined when calling getSessionLogs.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.sessionPoolId !== undefined) {\n            queryParameters['sessionPoolId'] = requestParameters.sessionPoolId;\n        }\n\n        if (requestParameters.instanceId !== undefined) {\n            queryParameters['instanceId'] = requestParameters.instanceId;\n        }\n\n        if (requestParameters.appPath !== undefined) {\n            queryParameters['appPath'] = requestParameters.appPath;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/logs/session`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: LogRequestToJSON(requestParameters.logRequest),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LogResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns requested range of session logs\n     * Request Session Log Content\n     */\n    async getSessionLogs(requestParameters: ViewLogsApiGetSessionLogsRequest): Promise<LogResponse> {\n        const response = await this.getSessionLogsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns requested range of session pool logs\n     * Request Session Pool Log Content\n     */\n    async getSessionPoolLogsRaw(requestParameters: ViewLogsApiGetSessionPoolLogsRequest): Promise<runtime.ApiResponse<LogResponse>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getSessionPoolLogs.');\n        }\n\n        if (requestParameters.logRequest === null || requestParameters.logRequest === undefined) {\n            throw new runtime.RequiredError('logRequest','Required parameter requestParameters.logRequest was null or undefined when calling getSessionPoolLogs.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/logs/sessionpool/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: LogRequestToJSON(requestParameters.logRequest),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LogResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns requested range of session pool logs\n     * Request Session Pool Log Content\n     */\n    async getSessionPoolLogs(requestParameters: ViewLogsApiGetSessionPoolLogsRequest): Promise<LogResponse> {\n        const response = await this.getSessionPoolLogsRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n","import { makeAutoObservable, runInAction, toJS } from 'mobx'\nimport { ScalingService } from '@/services'\nimport { getSimpleConfigData, getStatsDataset, parseObject } from '@/utils';\nimport { showToastOk } from '@/components';\nimport i18n from '@/i18n';\nimport { GetScalingStatsStatTypeEnum, MetaObject } from '@/gen';\n\nclass ScalingStore {\n\n  config?: MetaObject;\n  origConfig?: MetaObject;\n  changed: boolean = false;\n  filterToggle: boolean = false;\n  searchTerm: string = '';\n  stats?: { [key: string]: object; };\n  statType: GetScalingStatsStatTypeEnum = GetScalingStatsStatTypeEnum.Basic;\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  loadStats = async () => {\n    try {\n      const data = await ScalingService.getScalingStats(this.statType);\n      if (data) {\n        runInAction(() => {\n          this.stats = data;\n        })\n      }\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n\n  isScalingEnabled() {\n    return this.stats != null && Object.keys(this.stats).length > 0;\n  }\n\n  toggleStatType() {\n    this.statType = this.statType == GetScalingStatsStatTypeEnum.Basic ? GetScalingStatsStatTypeEnum.Extended : GetScalingStatsStatTypeEnum.Basic;\n    this.loadStats();\n  }\n\n  setFilterToggle(bool?: boolean) {\n    this.searchTerm = '';\n    this.filterToggle = bool ? bool : !this.filterToggle;\n  }\n\n  setSearchTerm(term: string) {\n    if (this.searchTerm !== term) {\n      this.searchTerm = term;\n    }\n  }\n\n  get activeApply() {\n    return this.changed;\n  }\n\n  compareConfig() {\n    if (this.origConfig && this.config) {\n      const jsOrigConfig = getSimpleConfigData(toJS(this.origConfig));\n      const jsConfig = getSimpleConfigData(toJS(this.config));\n      this.changed = !parseObject(jsOrigConfig).isEqual(jsConfig);\n    }\n  }\n\n  clearConfigData = () => {\n    this.origConfig = {};\n    this.config = {};\n    this.changed = false;\n  }\n\n  loadConfig = async () => {\n    try {\n      const data = await ScalingService.getConfig();\n      if (data) {\n        runInAction(() => {\n          this.clearConfigData();\n          this.origConfig = data;\n          this.config = data;\n          this.changed = false;\n        });\n      }\n    } catch (err) {\n      console.log('apiError', err)\n    }\n  }\n\n  updateConfigStore = (config: any) => {\n    this.config = config;\n  }\n\n  onRequestUpdate = () => {\n    this.updateFormStructure(getSimpleConfigData(this.config!));\n  }\n\n  resetConfig = () => {\n    this.config = parseObject(this.origConfig!).clone();\n    this.loadConfig();\n  }\n\n  setConfig = () => {\n    this.updateFormStructure(getSimpleConfigData(this.config!)).then(() => {\n      ScalingService.setConfig(this.config!).then(() => {\n        setTimeout(async () => await this.loadConfig(), 50);\n        showToastOk(i18n.t('ok.changesAppliedSuccess'));\n      })\n    })\n  }\n\n  updateFormStructure = async (config: MetaObject) => {\n    const data = await ScalingService.getMeta(config);\n    if (data) {\n      runInAction(() => {\n        this.config = { ...this.config, ...data };\n      })\n    }\n  }\n\n  get getUtilizationStats() {\n    const nameAr = [i18n.t(\"scaling.utilization.freeSlots\"), i18n.t(\"scaling.utilization.takenSlots\")];\n    return {\n      names: nameAr,\n      keys: [\"freeSlots\", \"takenSlots\"],\n      dataset: getStatsDataset(this.stats, [\"freeSlots\", \"takenSlots\"]),\n      tickFormat: (value: number, _index: number) => { return value + \"\"; },\n      tooltipFormatter: (value: any, name: any) => {\n        let label = name;\n        if (name == 'freeSlots') {\n            label = nameAr[0];\n         }\n        if (name == 'takenSlots') {\n          label = nameAr[1];\n        }\n        return [value, label];\n      }\n    };\n  }\n\n  get getStatusStats() {\n    const nameAr = [i18n.t(\"scaling.status.active\"), i18n.t(\"scaling.status.autoDrained\"), i18n.t(\"scaling.status.drained\")];\n    return {\n      names: nameAr,\n      keys: [\"activeSP\", \"autodrainedSP\", \"drainedSP\"],\n      dataset: getStatsDataset(this.stats, [\"activeSP\", \"autodrainedSP\", \"drainedSP\"]),\n      tickFormat: (value: number, _index: number) => { return value + \"\"; },\n      tooltipFormatter: (value: any, name: any) => {\n        let label = name;\n        if (name == 'activeSP') {\n            label = nameAr[0];\n         }\n        if (name == 'autodrainedSP') {\n          label = nameAr[1];\n        }\n        if (name == 'drainedSP') {\n          label = nameAr[2];\n        }\n        return [value, label];\n      }\n    };\n  }\n\n}\n\nexport default ScalingStore;","import PermissionsStore from './PermissionsStore';\nimport GlobalStore from './GlobalStore';\nimport OverviewStore from './OverviewStore';\nimport ConfigStore from './ConfigStore';\nimport SessionsStore from './SessionsStore';\nimport LogsStore from './LogsStore';\nimport ScalingStore from './ScalingStore';\n\nexport class RootStore {\n  permissionsStore: PermissionsStore;\n  globalStore: GlobalStore;\n  overviewStore: OverviewStore;\n  configStore: ConfigStore;\n  sessionsStore: SessionsStore;\n  logsStore: LogsStore;\n  scalingStore: ScalingStore;\n\n  constructor() {\n    this.permissionsStore = new PermissionsStore(this);\n    this.globalStore = new GlobalStore();\n    this.overviewStore = new OverviewStore();\n    this.configStore = new ConfigStore();\n    this.sessionsStore = new SessionsStore(this);\n    this.logsStore = new LogsStore(this);\n    this.scalingStore = new ScalingStore();\n  }\n}\nexport const store = new RootStore","import { autorun, toJS } from 'mobx';\nimport React, { createContext, FC, ReactElement, ReactNode, useContext } from 'react';\nimport {store, RootStore} from './RootStore'\nexport * from './RootStore'\n\n\ntype StoreComponent = FC<{\n    store: RootStore;\n    children: ReactNode;\n}>;\n\n/* Store Context */\nconst StoreContext = createContext(store);\n\n\n/* store Provider */\nexport const StoreProvider: StoreComponent = ({\n    children,\n    store\n  }): ReactElement => {\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n \n/* Hook to use store in any functional component */\nexport const useStore = () => useContext(StoreContext);\n\nexport function makeLocalStorage<T extends object, K extends keyof T>(\n  obj: T,\n  prefix: string,\n  keys: K[],\n): void {\n  for (const key of keys) {\n    const localKey = `${prefix}_${key as string}`;\n\n    const valueStr = localStorage.getItem(localKey);\n\n    if (!valueStr) {\n      continue;\n    }\n\n    const value = JSON.parse(valueStr);\n    obj[key] = value;\n  }\n\n  autorun(() => {\n    for (const key of keys) {\n      const localKey = `${prefix}_${key as string}`;\n\n      localStorage.setItem(localKey, JSON.stringify(toJS(obj[key])));\n    }\n  });\n}","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport cx from 'classnames';\nimport { useStore } from \"@/stores\";\nimport css from '../Logs.module.scss'\n\nexport const HighlightedText = observer(({text}:{text: string|undefined}) => {\n    const { logsStore } = useStore();\n    // Split on highlight term and include term into parts, ignore case\n    const parts = logsStore.searchTerm ? text?.split(new RegExp(`(${logsStore.searchTerm})`, 'gi')) : [text || \"\"];\n    return <span> { parts?.map((part, i) => \n        <span key={i} className={cx({[css.highlight]:part.toLowerCase() === logsStore.searchTermLowerCase})}>\n            { part }\n        </span>)\n    } </span>;\n})","// .core\nimport React from 'react'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './Status.module.scss'\nimport { HighlightedText } from '@/views/LogsView/partial/HighlightedText'\n// utils\ninterface IStatusProps {\n  className?: string,\n  label:string | undefined,\n  /**\n   * Styling of the point, default theme color will be used if none specified.\n   */\n  color?: 'new' | 'opened' | 'success'| 'danger' | 'resolved' | 'closed' | 'reopened' | 'exiting' | string,\n  onClick?(): void\n  dotOnly?: boolean\n}\n\nexport const Status = ({\n  label='',\n  color=label.toLowerCase(),\n  className,\n  onClick,\n  dotOnly=false\n}: IStatusProps) => {\n  \n  const getLabel = () => {\n    return label ? label.split('_').join(' ').toLowerCase():''\n  }\n\n  return (\n    <span onClick={onClick} className={cx(css.root, className)}>\n      <div className={cx(css.dot, css[color ? color.trim().toLowerCase(): ''])} />\n      {!dotOnly && (\n        <HighlightedText text={getLabel()} />\n      )}\n    </span>\n  )\n}\n\n","// .core\nimport React, { ReactNode } from 'react'\n// components\nimport { Icon, IconColor, Spinner } from '@/components';\n\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './ButtonDefault.module.scss'\n\nexport interface IButtonDefaultProps {\n  bDisabled?: boolean\n  bLoading?: boolean\n\n  className?: string\n  classNameLabel?: string\n\n  label?: string\n  icon?: string | ReactNode\n  size?: 'small' | 'medium' | 'large' | string\n  type?: 'submit' | 'reset' | 'button'\n  color?: 'danger' | 'neutral' | 'blue' | 'neutralTrans' | 'white' | string\n  iconColor?: IconColor\n  hover?: 'shadow' | 'transparent'\n\n  /**\n   * for rare use cases, needed by <Avatar />\n   */\n  style?: React.CSSProperties\n  onClick?(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void\n}\n\n/**\n * Default button component w/ label & loading spinner support\n */\nexport const ButtonDefault = ({\n  bDisabled,\n  bLoading,\n  color = 'blue',\n  size = 'medium',\n  iconColor = 'white',\n  className,\n  classNameLabel,\n  hover,\n  label,\n  icon,\n  type,\n  style,\n  onClick,\n}: IButtonDefaultProps) => (\n  <button\n    className={cx(\n      css.wButtonDefault,\n      bLoading && css.bLoading,\n      className,\n      css[color],\n      css[size],\n      hover && css[hover],\n      {\n        [css.icon]: icon,\n      }\n    )}\n    disabled={bDisabled || bLoading}\n    style={style}\n    type={type || 'button'}\n    onClick={onClick}>\n    {/* LOADING SPINNER */}\n    {bLoading ? (\n      <Spinner className={css.wSpinner} />\n    ) : // LABEL\n    label ? (\n      <label className={cx(classNameLabel)}>{label}</label>\n    ) : icon && typeof icon === 'string' ? (\n      <Icon size={size} name={icon} color={iconColor} />\n    ) : icon ? (\n      icon\n    ) : null}\n  </button>\n)\n","// .core\nimport React from 'react'\n// components\nimport { ButtonDefault, IButtonDefaultProps } from '../ButtonDefault/ButtonDefault'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './ButtonGroup.module.scss'\nimport { Tooltip } from '@/components'\n\ninterface IButtons extends IButtonDefaultProps {\n  tooltip?:string,\n  show?:boolean | null,\n}\n\ninterface IButtonGroupProps {\n  buttons: IButtons[]\n  className?: string\n}\n\nexport const ButtonGroup: React.FC<IButtonGroupProps> = ({\n  buttons,\n  className,\n}: IButtonGroupProps) => (\n  <div className={cx(css.wButtonGroup, className)}>\n    {buttons.filter((btn)=>(null == btn.show || btn.show)).map((btn, index) => (\n      <React.Fragment key={'btn_' + index}>\n      {\n        btn.tooltip ?\n          <Tooltip content={btn.tooltip}>\n            <span className={css.wSubButton}>\n              <ButtonDefault {...btn} className={cx(btn.className)} />\n            </span>\n          </Tooltip>\n        :\n        <ButtonDefault {...btn} className={cx(css.wSubButton, btn.className)} />\n      }\n      </React.Fragment>\n    ))}\n  </div>\n)\n","// .core\nimport React from 'react'\n// components\nimport { IButtonDefaultProps } from '../ButtonDefault/ButtonDefault'\n// libraries\n// import Ink from 'react-ink'\nimport cx from 'classnames'\n// styles\nimport css from '../ButtonDefault/ButtonDefault.module.scss'\n\ninterface IButtonUIProps extends IButtonDefaultProps {\n  children: React.ReactNode\n}\n\n/**\n * `UI wrapper` variant a button\n *\n * Wrapps its children in a HTML button\n */\nexport const ButtonUI = ({ bDisabled, children, className, onClick, color = '', size= ''}: IButtonUIProps) => {\n  return (\n    <button className={cx(css.wButtonDefault, className, css[color], css[size])} disabled={bDisabled} onClick={onClick}>\n      {children}\n\n      {/* {!bNoRipple && <Ink />} */}\n    </button>\n  )\n}\n","// .core\nimport React from 'react'\n// components\nimport { ButtonDefault, IButtonDefaultProps } from './variants/ButtonDefault/ButtonDefault'\nimport { ButtonGroup } from './variants/ButtonGroup/ButtonGroup'\nimport { ButtonUI } from './variants/ButtonUI/ButtonUI'\n\nexport class Button extends React.Component<IButtonDefaultProps> {\n  static Default = ButtonDefault\n  static Group = ButtonGroup\n  static UI = ButtonUI\n\n  render() {\n    return <ButtonDefault {...this.props} />\n  }\n}\n","// .core\nimport React from 'react'\nimport cx from 'classnames'\n// styles\nimport css from './ButtonIcon.module.scss'\nimport { Badge, Button, CoinColor, Icon } from '@/components'\n\ninterface IButtonIconProps {\n  children: React.ReactNode\n  active: boolean\n  className?: string,\n  icon: string,\n  onClick: () => void,\n  badge?: string | number | undefined\n  badgeColor?:CoinColor|undefined\n}\n\nexport const ButtonIcon = ({ className, onClick, active, icon, children, badge, badgeColor}: IButtonIconProps) => {\n  return (\n    <Button.UI className={cx(css.wButtonIcon, {[css.active]: active}, className)}>\n      {\n        badge ?\n          <Badge\n            bOnBadge\n            className={cx(css.changesTracking)}\n            vertical='top'\n            side='right'\n            color={badgeColor?badgeColor:'danger'}\n            size='medium'\n            content={badge}\n            onClick={onClick}\n          >\n            <Icon className={css.btnIcon} name={icon} /> \n          </Badge>\n        :\n        <Icon className={css.btnIcon} name={icon} onClick={onClick} /> \n      }\n      <div className={css.btntxt} onClick={onClick}>{children}</div>      \n    </Button.UI>\n  )\n}\n","// core\nimport React, { memo } from 'react'\n\nimport cx from 'classnames'\n\n// components\nimport { IComponentProps } from '@/components'\n\n// styles\nimport css from './Backdrop.module.scss'\n\nexport interface IBackdropProps extends IComponentProps {\n  /**\n   * Whether bacdrop should be visible\n   */\n  dark?:boolean\n  visible: boolean\n  /**\n   * Css z-index value\n   */\n  zIndex?: number\n  /**\n   * Callback to run on backdrop click\n   */\n  onClick?: (e: any) => void\n}\n\nexport const Backdrop = memo(function Backdrop({\n  visible,\n  dark=false,\n  zIndex,\n  onClick,\n  className,\n}: IBackdropProps) {\n  return (\n    <div\n      className={cx(css.root, visible ? css.visible : '', className, {[css.dark]:dark})}\n      style={{ zIndex }}\n      onClick={onClick}\n    />\n  )\n})\n","// .core\nimport React from 'react'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './Divider.module.scss'\n\ninterface IDividerProps {\n  className?: string\n  margin?: number\n  vertical?: boolean\n}\n\n/**\n * Simple line that divides containers w/ custom margin and vertical or horizontal placement\n */\nexport const Divider = ({ className, vertical = false, margin = 5 }: IDividerProps) => (\n  <div\n    className={cx(css.wDivider, vertical && css.wVertical, className)}\n    style={{ margin: vertical ? `0 ${margin}px` : `${margin}px 0` }}\n  />\n)\n","// .core\nimport React, { useState, useCallback } from 'react'\n// components\nimport { Icon } from '../../..'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './InputDefault.module.scss'\n// utils\nimport { ISelectItem, TIcon } from '@/utils';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '@/i18n';\n// declarations\ntype TValue = string | number\n\ninterface IInputIcon {\n  className?: string\n  name: TIcon\n  position: 'labelLeft' | 'labelRight' // 'inputLeft' | 'inputRight' |\n}\n\nexport interface IInputDefaultProps {\n  bAutoFocus?: boolean\n  bClearable?: boolean\n  bDisabled?: boolean\n  bReadOnly?: boolean\n  bRequired?: boolean\n  bTextArea?: boolean\n\n  className?: string\n  classNameError?: string\n  classNameInput?: string\n  classNameLabel?: string\n\n  error?: string\n  id?: string\n  label?: string | React.ReactNode\n  icon?: IInputIcon\n  max?: number\n  maxLength?: number\n  min?: number\n  minLength?: number\n  name?: string\n  placeholder?: string\n  value: TValue\n  options?: ISelectItem[]\n  type?: 'email' | 'text' | 'number' | 'password' | 'checkbox' | 'select' | 'hidden'\n  onClose?(event?: any):void\n  onBlur?(event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void\n  onChange?(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void\n  onKeyPress?(event:React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>):void\n}\n\n/** #TODO: turn into `React.FC`\n * Default Input component\n */\nexport const InputDefault = ({\n  bAutoFocus,\n  bClearable,\n  bDisabled,\n  bReadOnly,\n  bRequired,\n  bTextArea,\n\n  className,\n  classNameError,\n  classNameInput,\n  classNameLabel,\n\n  error,\n  icon,\n  id,\n  label,\n  max,\n  maxLength,\n  min,\n  minLength,\n  name,\n  placeholder = i18n.t('ENTER_VALUE'),\n  type = 'text',\n  value = '',\n\n  onClose,\n  onBlur,\n  onChange,\n  onKeyPress\n}: IInputDefaultProps) => {\n  const input = React.createRef<HTMLInputElement | HTMLTextAreaElement>()\n  const [visiblePassword, setVisiblePassword] = useState<boolean>(false)\n  const handleToggleVisibility = useCallback(() => {\n    setVisiblePassword(prev => !prev)\n  }, [setVisiblePassword])\n\n  const _onClear = () => {\n    const event = new Event('input', { bubbles: true })\n\n    if (input.current && onChange) {\n      input.current.value = ''\n      input.current.dispatchEvent(event)\n      onChange(event as any)\n    }\n  }\n\n  return (\n    <div className={cx(css.wInput, className, type)}>\n      {/* LABEL - container */}\n      {label && 'hidden' !== type && (\n        <div className={css.wLabel}>\n          {/* ICON - left from label */}\n          {icon && icon.position === 'labelLeft' && <Icon {...icon} />}\n\n          {/* LABEL - text */}\n          <label\n            className={cx(css.tLabel, bRequired && 'gInputRequired', classNameLabel, {\n              [css.disabled]: bDisabled,\n            })}\n            htmlFor={id || 'input'}>\n            {label}\n          </label>\n\n          {/* ICON - right from label */}\n          {icon && icon.position === 'labelRight' && <Icon {...icon} />}\n        </div>\n      )}\n\n      {/* TEXT AREA / INPUT FIELD */}\n      {bTextArea ? (\n        <textarea\n          ref={input as React.Ref<HTMLTextAreaElement>}\n          autoFocus={bAutoFocus}\n          className={cx(css.fInput, classNameInput)}\n          disabled={bDisabled}\n          id={id}\n          maxLength={maxLength}\n          minLength={minLength}\n          placeholder={placeholder}\n          readOnly={bReadOnly}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          onKeyPress={onKeyPress}\n        />\n      ) : (\n        <div className={css.inputDiv}>\n          <input\n            ref={input as React.Ref<HTMLInputElement>}\n            autoFocus={bAutoFocus}\n            className={cx(css.fInput, classNameInput, { [css.password]: type === 'password' })}\n            disabled={bDisabled}\n            id={id}\n            max={max}\n            maxLength={maxLength}\n            min={min}\n            minLength={minLength}\n            name={name}\n            placeholder={placeholder}\n            readOnly={bReadOnly}\n            type={\n              type === 'password' && !visiblePassword\n                ? 'password'\n                : type === 'password'\n                ? 'text'\n                : type\n            }\n            value={value}\n            onChange={onChange}\n            onBlur={onBlur}\n            onKeyPress={onKeyPress}\n          />\n          {type === 'password' && (\n            <Icon\n              className={css.visibility}\n              color={visiblePassword ? 'primary' : 'neutral'}\n              name=\"visibility\"\n              size=\"small\"\n              onClick={handleToggleVisibility}\n            />\n          )}\n          {/* X - clear icon */}\n          {bClearable ?\n          <Icon className={css.visibility} name=\"close\" size=\"small\" onClick={_onClear} />\n          : onClose ?\n          <Icon className={css.visibility} name=\"close\" size=\"small\" onClick={()=>{\n            _onClear();\n            onClose();\n          }} />\n          :null\n          }\n        </div>\n      )}\n\n      {/* ERROR MESSAGE */}\n      {error && <span className={cx(css.tError, classNameError)}>{error}</span>}\n    </div>\n  )\n}\n","// .core\nimport React from 'react'\n// components\nimport { InputDefault, IInputDefaultProps } from './variants/InputDefault/InputDefault'\n// ---variants\n// import { Select } from './variants/Select/Select'\n\nexport class Input extends React.Component<IInputDefaultProps> {\n  // static Select = Select\n\n  render() {\n    return <InputDefault {...this.props} />\n  }\n}\n","// core\nimport React from 'react'\n\n// libraries\nimport cx from 'classnames'\n\n// components\nimport { IWrapperComponentProps } from '@/components'\n\n// styles\nimport css from './Switch.module.scss'\n\nexport type SwitchColor = 'white' | 'neutral' | 'primary' | 'success' | 'blue'\n\nexport type SwitchSize = 'small' | 'medium' | 'large'\n\nexport interface ISwitchProps extends IWrapperComponentProps {\n  value?: boolean\n  /**\n   * Coin size\n   */\n  size?: SwitchSize\n  position?: 'right' | 'left'\n  /**\n   * onClick event\n   */\n  onClick?(ev: any): void\n\n  disabled?: boolean\n}\n\nexport const Switch = ({ children, className, size = 'medium',position='left', value = false, disabled = false, onClick }: ISwitchProps) => {\n\n  const click = (ev: any) => {\n    if(disabled) return\n    if(onClick) {\n      onClick(ev)\n    }\n    \n  }\n  return (\n    <div className={cx(css.wrapper, css[position],{[css.disabled]: disabled}, className)}>\n        <span className={cx(css.root, css[size], css[position], {[css.on]: value})} onClick={click}\n      //class=\"bg-gray-200 relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n       aria-pressed=\"false\">\n        {/* <!-- Enabled: \"translate-x-5\", Not Enabled: \"translate-x-0\" --> */}\n        <span aria-hidden=\"true\" className={css.circle}\n        //class=\"translate-x-0 pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200\"\n        ></span>\n      </span>\n      {children}\n    </div>\n  )\n  // </span><div className={classnames(css.root, css[color], css[size], className)} onClick={()=>value=!value}>{children}</div>\n}\n\n","// .core\nimport React from 'react'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './SearchFilter.module.scss'\nimport { Input } from '@/components'\nimport { useTranslation } from 'react-i18next'\n\nexport interface ISearchFilterProps {\n  value:string,\n  onChange:(event:React.ChangeEvent<HTMLInputElement>)=>void\n  onClose?:()=>void\n  className?:string\n  inputClassName?:string\n}\n\n/**\n * Simple line that divides containers w/ custom margin and vertical or horizontal placement\n */\nexport const SearchFilter = ({ value='',onChange, onClose, className, inputClassName }: ISearchFilterProps) => {\n  const {t} = useTranslation();\n  return (\n  <div className={cx(css.appsFilter, className)}>\n    <Input\n      classNameInput={cx(css.input, inputClassName)}\n      type=\"text\"\n      placeholder={t('general.search')}\n      value={value}\n      onChange={onChange}\n      onClose={onClose}\n      bAutoFocus\n      // onFocus={()=>globalStore.toggleLeftSideMenu(true)}\n    />\n  </div>\n)}\n","// .core\nimport React, { ReactNode } from 'react'\n// components\nimport { Icon } from '../Icon/Icon'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './NoData.module.scss'\n// utils\nimport { TIcon } from '@/utils'\n\nimport i18n from '@/i18n'\n\nexport interface INoDataProps {\n  className?: string\n  icon?: TIcon\n  message?: string\n  children?: ReactNode\n}\n\nexport const NoData: React.FC<INoDataProps> = ({\n  className,\n  icon = 'info',\n  message = i18n.t('general.noData'),\n  children,\n}: INoDataProps) => {\n  return (\n    <div className={cx(css.wNoData, className)}>\n      {/* ICON */}\n      <Icon name={icon} />\n  \n      {/* MESSAGE */}\n      <span>{message}</span>\n      {children}\n    </div>\n  )\n}\n\n","// .core\nimport React from 'react'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './Spinner.module.scss'\n\nexport interface ISpinnerProps {\n  className?: string\n  size?: number\n}\n\n/**\n * `Spinner` variant of animated loading indicator\n */\nexport const Spinner = ({ className, size }: ISpinnerProps) => {\n  return (\n    <svg\n      className={cx(css.wSpinner, className)}\n      width={size || '45px'}\n      height={size || '45px'}\n      viewBox=\"0 0 66 66\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <circle\n        className={css.path}\n        fill=\"none\"\n        strokeWidth=\"6\"\n        strokeLinecap=\"round\"\n        cx=\"33\"\n        cy=\"33\"\n        r=\"30\"\n      />\n    </svg>\n  )\n}\n","// .core\nimport React from 'react'\n// components\nimport { Spinner } from '../Spinner/Spinner'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './Fullscreen.module.scss'\n\ninterface IFullScreenProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nexport const Fullscreen = ({ children, className }: IFullScreenProps) => (\n  <div className={cx(css.wFullscreen, className)}>{children ?? <Spinner />}</div>\n)\n","// .core\nimport React from 'react'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './Line.module.scss'\nimport { ISpinnerProps } from '../../..';\n\ninterface ILoaderLineProps extends ISpinnerProps {\n  bLoading?: boolean\n  position?: 'bottom' | 'top'\n}\n\n/**\n * `Line` variant of animated loading indicator\n */\nexport const Line = ({ bLoading, position, className }: ILoaderLineProps) => {\n  const style: React.CSSProperties = {}\n\n  if (position === 'bottom') {\n    style.bottom = 0\n  }\n\n  return bLoading ? (\n    <div className={cx(css.loaderLine, className)} style={style}>\n      <div />\n    </div>\n  ) : null\n}\n","export default \"__VITE_ASSET__5b3471c4__\"","// .core\nimport React from 'react';\n\n// components\nimport { Spinner } from '@/components';\n\n// libraries\nimport cx from 'classnames';\n\n// styles\nimport css from './Branded.module.scss';\n// assets\nimport Logo from '@/assets/images/webswingLogoText.svg';\nimport { ApiServerUrl, toPath } from '@/utils';\n\ninterface IBrandedProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nexport const Branded = ({ children, className }: IBrandedProps) => (\n  <div className={cx(css.wFullscreenBranded, className)}>{children ?? (\n    <>\n      <img src={toPath(ApiServerUrl,Logo)} height={124} alt=\"Webswing - Admin Console\"/>\n      <Spinner/>\n    </>\n  )}</div>\n);\n","// .core\nimport React from 'react'\n// components\nimport { Fullscreen } from './variants/Fullscreen/Fullscreen'\nimport { Line } from './variants/Line/Line'\nimport { ISpinnerProps, Spinner } from './variants/Spinner/Spinner'\nimport { Branded } from './variants/Branded/Branded'\n\n/**\n * Default `Loader` component using `Spinner`\n */\nexport class Loader extends React.Component<ISpinnerProps> {\n  static Fullscreen = Fullscreen\n  static Line = Line\n  static Spinner = Spinner\n  static Branded = Branded\n\n  render() {\n    return <Spinner {...this.props} />\n  }\n}\n","// .core\nimport React, { useState } from 'react'\n// components\nimport { Chip, Status, Dialog } from '@/components'\n// styles\nimport css from './StatusBar.module.scss'\n// utils\nimport { observer } from 'mobx-react'\nimport { useStore } from '@/stores'\nimport { InstanceManagerStatus, InstanceManagerStatusStatusEnum } from '@/gen'\nimport { useTranslation } from 'react-i18next'\n\ninterface IStatusBarProps {\n  loadMessage?: string,\n  className?: string,\n  status: InstanceManagerStatus[],\n  onClick?(): void\n}\n\nexport const StatusBar = observer(function StatusBar({\n  loadMessage='',\n  className,\n  onClick,\n  status,\n}: IStatusBarProps) {\n  const {globalStore} = useStore();\n  const countRunning = globalStore.countStatuses(status,'Running');\n  const countStopped = globalStore.countStatuses(status,'Stopped');\n  const countError = globalStore.countStatuses(status,'Error');\n  const {t} = useTranslation();\n  const [showErrorStatusDetailModal, setShowErrorStatusDetailModal] = useState<boolean>(false);\n\n  const canShowErrorStatusDetail = () => {\n    return status != null && status.length == 1 && status[0].status == InstanceManagerStatusStatusEnum.Error \n    && status[0].errorDetails != null && status[0].errorDetails.length > 0;\n  }\n\n  const showSingleErrorStatusDetail = () => {\n    if (canShowErrorStatusDetail()) {\n        // only for single error status\n        setShowErrorStatusDetailModal(true);\n      }\n  };\n\n  const getErrorStatusDetail = () => {\n    if (canShowErrorStatusDetail()) {\n      return status[0].errorDetails;\n    }\n    return \"\";\n  };\n\n  return (<>\n      <span className={css.root}>\n      {loadMessage ? <Chip color={'neutral'} label={loadMessage} /> :\n          <span className={canShowErrorStatusDetail() ? css.hasError : \"\"}>\n            {countRunning ? <Status color={'success'} label={countError ? countRunning + ' -'+ t('apps.running'): t('apps.running')} /> : null }\n            {countStopped ? <Status color={'warning'} label={t('apps.stopped')}/> : null }\n            {countError ? <Status color={'danger'} label={t('apps.error')} onClick={showSingleErrorStatusDetail} /> : null }\n          </span>\n        }\n      </span>\n      <Dialog\n        bOpen={showErrorStatusDetailModal}\n        title={t(\"error.securityModule.dialogTitle\")}\n        footer={false}\n        onToggle={() => setShowErrorStatusDetailModal(false)}>\n        {\n          <div className={css.errorDetailsContent}>\n            <pre>\n              {getErrorStatusDetail()}\n            </pre>\n          </div>\n        }\n      </Dialog>\n    </>\n  )\n})","// .core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// components\nimport { Button, Icon } from '@/components';\n// libraries\nimport cx from 'classnames';\n// styles\nimport css from './DialogDefault.module.scss';\n\n\nexport interface IDialogDefaultProps {\n  \n  bOpen?: boolean\n  className?: string\n  classNameContent?: string\n  title?: string\n\n  onToggle?(bOpen?: boolean): void\n\n  onConfirm?(): void\n\n  labelOk?: string\n  labelCancel?: string\n  footer?: boolean\n}\n\nexport class DialogDefault extends React.Component<IDialogDefaultProps> {\n  \n  static defaultProps: IDialogDefaultProps = {\n    footer: true,\n    title: 'DIALOG',\n  };\n\n  // =============== I N I T ===============\n  //   componentDidMount() {}\n  //   componentWillUnmount() {}\n\n  dialogBg = React.createRef<HTMLDivElement>();  \n\n  // =============== E V E N T S ===============\n  onToggle = (event:any) => {\n    const { bOpen, onToggle } = this.props;\n    event.preventDefault();\n    onToggle?.(!bOpen);\n  };\n\n  onToggleBg = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event && event.target && this.dialogBg.current && this.dialogBg.current == event.target) {\n      this.onToggle(event);\n    }\n  };\n\n  onConfirm = () => {\n    const { onConfirm } = this.props;\n\n    onConfirm?.();\n  };\n\n  render(): React.ReactNode {\n    const { bOpen, children, className, classNameContent, title, onToggle, labelOk, labelCancel, footer } = this.props;\n    if (!bOpen) return null;\n\n    return ReactDOM.createPortal(\n      <>\n      <div ref={this.dialogBg} className={css.wBackground} onClick={this.onToggleBg}>\n        <div className={cx(css.wDialog, className)}>\n          {/* HEADER */}\n          <Icon className={css.wClose} name=\"close\" onClick={onToggle}/>\n          <div className={cx(css.wHeader)}>\n            <span>{title}</span>\n          </div>\n\n          {/* CONTENT */}\n          <div className={cx(css.wContent, classNameContent)}>{children}</div>\n\n          {/* FOOTER */}\n          {footer ? (\n            <div className={cx(css.wFooter)}>\n              <Button color=\"neutral\" label={labelCancel || 'Cancel'} size=\"small\" onClick={this.onToggle} />\n              <Button color=\"danger\" label={labelOk || 'Confirm'} size=\"small\" onClick={this.onConfirm} />\n            </div>\n          ) : null}\n        </div>\n      </div>\n      </>,\n      document.body,\n    );\n  }\n}\n","// .core\nimport React from 'react'\n// components\nimport { DialogDefault, IDialogDefaultProps } from '../DialogDefault/DialogDefault'\n// libraries\nimport cx from 'classnames'\n// utils\nimport {} from '@/utils'\n// declarations\n\ninterface IRenderProps extends IDialogRPState {\n  onToggle: (overrideVal?: boolean) => () => void\n}\ninterface IDialogRPProps extends Omit<IDialogDefaultProps, 'onToggle'> {\n  children(renderProps: IRenderProps): React.ReactNode\n  classNameTrigger?: string\n  /**\n   * Trigger element that shows up the `<Dialog />` when clicked (mostly a `<Button /> || <Icon />`)\n   */\n  trigger: React.ReactNode\n}\ninterface IDialogRPState {\n  bOpen: boolean\n}\n\n/**\n * Dialog using React's Render Props feature\n */\nexport class DialogRP extends React.Component<IDialogRPProps, IDialogRPState> {\n  state: IDialogRPState = {\n    bOpen: !!this.props.bOpen,\n  }\n\n  // =============== I N I T ===============\n  //   componentDidMount() {}\n  //   componentWillUnmount() {}\n\n  // =============== E V E N T S ===============\n  onToggle = (val?: boolean) => () => {\n    this.setState(prevState => ({\n      bOpen: val ?? !prevState.bOpen,\n    }))\n  }\n\n  render() {\n    const { children, classNameTrigger, trigger, ...modalProps } = this.props\n\n    return (\n      <>\n        {/* TRIGGER */}\n        <div className={cx(classNameTrigger)} onClick={this.onToggle(true)}>\n          {trigger}\n        </div>\n\n        {/* DIALOG */}\n        <DialogDefault {...modalProps} bOpen={this.state.bOpen} onToggle={this.onToggle}>\n          {children({\n            ...this.state,\n            onToggle: val => this.onToggle(val),\n          })}\n        </DialogDefault>\n      </>\n    )\n  }\n}\n","// .core\nimport React from 'react'\n// components\nimport { DialogDefault, IDialogDefaultProps } from './variants/DialogDefault/DialogDefault'\nimport { DialogRP } from './variants/DialogRP/DialogRP'\n\nexport class Dialog extends React.Component<IDialogDefaultProps> {\n  static RP = DialogRP\n\n  render() {\n    return <DialogDefault {...this.props} />\n  }\n}\n","// core\nimport React, { createElement, ReactElement } from 'react'\n\n// libraries\nimport classnames from 'classnames'\n\n// style\nimport css from './Heading.module.scss'\nimport { IComponentProps } from '@/components'\nimport { IButtonDefaultProps } from '@/components/basic/Button/variants/ButtonDefault/ButtonDefault'\n\nexport interface IHeadingInterface extends IComponentProps {\n  /**\n   * title to display\n   */\n  title: string\n  /**\n   * Buttons to render above the card\n   */\n  button?: (ReactElement<IButtonDefaultProps> | null)\n  /**\n   * variant of heading\n   */\n  variant?: 'h1' | 'h2' | 'h3'\n}\n\nexport const Heading = ({\n  button,\n  title,\n  variant = 'h1',\n  className,\n  classes = {},\n}: IHeadingInterface) => {\n  return (\n    <div className={classnames(css.root, className, classes.root)}>\n      {createElement(variant, {\n        children: title,\n        className: classnames(css.heading, css[variant], classes.heading),\n      })}\n      {button ? (\n        <div className={classnames(css.buttonsWrap, classes.buttonsWrap)}>{button}</div>\n      ) : null}\n    </div>\n  )\n}\n","// .core\nimport React from 'react'\n// components\nimport { INoDataProps, NoData } from '../../basic/NoData/NoData'\nimport { Loader } from '../../basic/Loader/Loader'\n// libraries\nimport cx from 'classnames'\nimport { AutoSizer } from 'react-virtualized/dist/commonjs/AutoSizer'\nimport { ScrollParams } from 'react-virtualized/dist/commonjs/Grid'\n// import { InfiniteLoader } from 'react-virtualized/dist/commonjs/InfiniteLoader'\nimport { List as ListVirtualized, ListRowProps } from 'react-virtualized/dist/commonjs/List'\n// styles\nimport css from './List.module.scss'\nimport 'react-virtualized/styles.css'\nimport { CellMeasurer, CellMeasurerCache } from 'react-virtualized'\nimport { Button } from '@/components'\n// declarations\nexport type IRowData<T> = T & { index: number }\n\nexport interface IListProps<T> {\n  /**\n   * Whether data fetching is in progress, renders a `<Loader.Line />` at the top of `List`\n   */\n  bLoading?: boolean\n  bVirtualized?: boolean\n  className?: string\n  rowClass?:string\n  /**\n   * List of data being used by List's items\n   */\n  collection?: T[]\n  /**\n   * Custom component rendered per item in collection\n   *\n   * @default\n   * <ListItem />\n   */\n  item: (rowData?: IRowData<T>) => JSX.Element\n  /**\n   * Config for what to display when there are no records\n   */\n  noData?: INoDataProps\n  /**\n   * Custom height of each row\n   *\n   * @default '40px'\n   */\n  rowHeight?: number\n  /**\n   * Distance from the bottom of the list at which the `onReachEnd` is called\n   *\n   * @default 0\n   */\n  threshold?: number\n  /**\n   * Event fired everytime the `collection` changes in any way (add, reorder, delete)\n   */\n  // #UNUSED\n  //   onChange?(): void\n  /**\n   * Event fired when scroll reaches end of the list\n   *\n   * Enabled on when `bVirtualized === true`\n   */\n  onReachEnd?(): void\n  /**\n   * Event fired when and item (or group of items) is reordered\n   */\n  onReorder?(): void\n  bscrollToBottom: boolean\n  bstaticHeight: boolean\n  minListWidth?: number\n  searched?: string\n}\n\ninterface IState {\n  scrolledtoBottom?: boolean;\n  scrollCount: number;\n}\n\n/**\n * Component for rendering any type of list (vertical, horizontal, grid based)\n * Supports\n */\nexport class List<T> extends React.Component<IListProps<T>, IState> {\n  static defaultProps = {\n    rowHeight: 50,\n    treshold: 0,\n    bscrollToBottom:false,\n    bstaticHeight:true\n  }\n  private cache;\n  constructor(props:IListProps<T>) {\n    super(props);\n    this.state = {\n      scrolledtoBottom: props.bscrollToBottom,\n      scrollCount: 2,\n    };\n    const cache = new CellMeasurerCache({\n      fixedWidth: true,\n      defaultHeight: 60\n    });\n    this.cache = cache;\n  }\n\n  refList = React.createRef<ListVirtualized>()\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", ()=>this.recalculateSize());\n    if(this.props.bscrollToBottom) {\n      setTimeout(() => this.scrollTo('bottom'), 200)\n    }\n  }\n\n  componentDidUpdate(prevProps:IListProps<T>) {\n    const { collection, bscrollToBottom, bstaticHeight, searched } = this.props;\n    const { scrolledtoBottom } = this.state;\n    if (bscrollToBottom && collection?.length !== prevProps.collection?.length) {\n      if(!bstaticHeight) {\n        this.cache.clearAll()\n        this.refList.current?.recomputeRowHeights();\n      }\n      if(scrolledtoBottom) {\n        this.scrollTo('bottom');\n      }\n    }\n    if( searched !== prevProps.searched) {\n      this.refList.current?.forceUpdateGrid();\n    }\n  }\n\n  componentWillUnmount() {\n      window.removeEventListener(\"resize\", ()=>this.recalculateSize());\n  }\n\n  recalculateSize() {\n    setTimeout(() =>{\n      if(!this.props.bstaticHeight) {\n        this.cache.clearAll()\n        this.refList.current?.recomputeRowHeights();\n      }\n    },300)\n  }\n\n  onScroll = (e: ScrollParams) => {\n    const { threshold, onReachEnd } = this.props\n    if (e.scrollTop >= e.scrollHeight - e.clientHeight - (threshold || 0)) {\n      onReachEnd?.()\n      this.setState({scrolledtoBottom:true})\n    } else {\n      this.setState({scrolledtoBottom:false})\n    }\n  }\n\n  /**\n   * Scroll to bottom & top of List/Grid\n   */\n\n  scrollingDirection='';\n  public scrollTo = (position: 'bottom' | 'top') => {\n    const element = document.querySelector('.ReactVirtualized__List');\n    if(element) {\n      switch (position) {\n        case 'bottom':\n            this.scrollingDirection='bottom';\n            const maxScrollTop = element.scrollHeight - element.clientHeight;\n            if (maxScrollTop > element.scrollTop) {\n              this.refList.current?.scrollToPosition(maxScrollTop); // Ref to <List /> component instance (or Grid)\n              requestAnimationFrame(()=>{\n                if(this.scrollingDirection!=='bottom') return;\n                this.scrollTo('bottom')\n              });\n            }\n          break;\n        case 'top':\n          this.scrollingDirection='top';\n          const current = element.scrollTop;\n          if (current > 0) {\n            this.refList.current?.scrollToPosition(0); // Ref to <List /> component instance (or Grid)\n            requestAnimationFrame(()=>{\n              if(this.scrollingDirection!=='top') return;\n              this.scrollTo('top')\n            });\n          }\n          break;\n      }\n    }\n  };\n\n  public isScrollable = () => {\n    const element = document.querySelector('.ReactVirtualized__List');\n    if(element) {\n      return element.scrollHeight > element.clientHeight;\n    }\n  };\n\n\n  public scrollToggle = () => {\n    if(this.state.scrolledtoBottom) {\n      this.scrollTo('top');\n    } else {\n      this.scrollTo('bottom');\n    }\n  }\n\n  // #UNUSED\n  /**\n   * Event that scrolls to a row based on provided index\n   * @param index Index of row to scroll to\n   */\n  onScrollTo(index: number) {\n    this.refList.current?.scrollToRow(index)\n  }\n\n  renderNoData = () => <div className={cx(css.wListVirtualized)} ><NoData {...this.props.noData} /></div>\n\n  renderRow = ({ index, parent, key, style }: ListRowProps): JSX.Element => {\n    const { collection, item,bstaticHeight } = this.props\n\n    return <CellMeasurer \n      key={key}\n      cache={this.cache}\n      parent={parent}\n      columnIndex={0}\n      rowIndex={index}\n    >\n      {/* {isScrolling ? (\n        <Skeleton.Table bLoading count={1} style={style} />\n      ) : ( */}\n          <div key={key} style={{ ...style }} className={bstaticHeight?css.noWrap:''}>\n            {item(collection && { ...collection[index], index })}\n          </div>\n      {/* )} */}\n    </CellMeasurer>\n  }\n\n  renderList = () => {\n    const { bVirtualized, collection, item, rowHeight, rowClass, bstaticHeight, minListWidth } = this.props\n    return bVirtualized ? (\n      <div className={css.wList}>\n        {\n          collection?.length ? \n            <AutoSizer>\n            {({ height, width }) => {\n              let makeWidth = width\n              if (minListWidth) {\n                makeWidth = width < minListWidth ? minListWidth : width\n              }\n              return (\n                <ListVirtualized\n                  ref={this.refList}\n                  rowRenderer={this.renderRow}\n                  rowCount={collection?.length || 0}\n                  rowHeight={!bstaticHeight ? this.cache.rowHeight: rowHeight!}\n                  className={cx(css.wListVirtualized)}\n                  height={height}\n                  overscanRowCount={5}\n                  deferredMeasurementCache={this.cache}\n                  width={bstaticHeight ? makeWidth : width}\n                  onScroll={this.onScroll}\n                />\n              )}\n              }\n            </AutoSizer>\n          :\n          this.renderNoData()\n        }\n        {\n          this.isScrollable() &&\n          <Button className={css.fab} icon={this.state.scrolledtoBottom?'arrow_upward':'arrow_downward'} onClick={()=>this.scrollToggle()} />\n        }\n      </div>\n    ) \n    : (\n      <div className={css.wListRegular}>\n        {collection\n          ? collection.map((row, index) => (\n              <div key={'row_' + index} className={rowClass} style={{ height: rowHeight }}>\n                {item({ ...row, index })}\n              </div>\n            ))\n          : this.renderNoData()}\n      </div>\n    )\n  }\n\n  render() {\n    const { bLoading, className } = this.props\n  \n    return (\n      <div className={cx(className)}>\n        {/* LOADER */}\n        <Loader.Line bLoading={bLoading} />\n        {this.renderList()}\n      </div>\n    )\n  }\n}\n","// .core\nimport React, { ReactNode } from 'react'\n// libraries\nimport classnames from 'classnames'\n// styles\nimport css from './Card.module.scss'\nimport { Heading } from '@/components/complex'\nimport { IComponentProps } from '@/components'\n\ninterface ICardProps extends IComponentProps {\n  className?: string\n  titleClassName?: string\n  children: React.ReactNode\n  margin?: string\n  title?: string\n  onClick?(): void\n}\n\nexport const Card: React.FC<ICardProps> = ({\n  children,\n  className,\n  titleClassName,\n  margin,\n  title,\n  onClick,\n  classes = {},\n}: ICardProps) => {\n  const _onClick = () => {\n    onClick?.()\n  }\n\n  return (\n    <>\n      {/* TITLE */}\n      {title && <Heading className={classnames(css.heading, titleClassName)} variant=\"h3\" title={title} />}\n      <div\n        className={classnames(css.wCard, onClick && ['gClickable', css.clickable], className)}\n        style={{ margin }}\n        onClick={_onClick}>\n        {/* CONTENT */}\n        <div className={classnames(css.wContent, classes.content)}>{children}</div>\n      </div>\n    </>\n  )\n}\n\nexport interface ICardContentProps extends IComponentProps {\n  children: ReactNode\n  onClick?(): void\n}\n\nexport const CardContent = ({ children, className, onClick }: ICardContentProps) => {\n  const _onClick = () => {\n    onClick?.()\n  }\n  return <div className={classnames(css.cardContent, className)} onClick={_onClick}>{children}</div>\n}\n","// .core\nimport React from 'react'\n// libraries\nimport cx from 'classnames'\nimport { Property } from 'csstype'\n// styles\nimport css from './Flex.module.scss'\n\nexport interface IFlexProps {\n  alignItems?: 'start' | 'center' | 'end' | 'baseline' | 'stretch'\n  /**\n   * Whether to add `.wColumn` class\n   */\n  bColumn?: boolean\n  children: React.ReactNode\n  className?: string\n  flex?: Property.Flex<undefined>\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse' | 'initial' | 'inherit'\n  /**\n   * Adds `.itemsPerRow(number)` class and sets `flexWrap: 'wrap'` to the `Grid`\n   */\n  itemsPerRow?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 12\n  justifyContent?:\n    | 'start'\n    | 'center'\n    | 'end'\n    | 'flex-start'\n    | 'flex-end'\n    | 'space-around'\n    | 'space-between'\n  /**\n   * Adds `.spacing` and `.spacing(number)` class - adds `margin-right` for `rows` and `margin-bottom` for `columns`\n   * onto every `Grid`'s child\n   */\n  spacing?: 0.5 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10\n  style?: React.CSSProperties\n  onClick?(): void\n}\n\nexport const Flex: React.FC<IFlexProps> = (props: IFlexProps) => {\n  const {\n    alignItems,\n    bColumn,\n    children,\n    className,\n    flex,\n    flexWrap,\n    itemsPerRow,\n    justifyContent,\n    spacing,\n    style,\n    onClick,\n  } = props\n\n  const classNames = cx(\n    css.wGrid,\n    bColumn ? css.wColumn : css.wRow,\n    spacing && [css.spacing, css['spacing' + spacing]],\n    itemsPerRow && css['itemsPerRow' + itemsPerRow],\n    onClick && 'gClickable',\n    className\n  )\n\n  const styles: React.CSSProperties = {\n    alignItems,\n    justifyContent,\n    flex,\n    flexWrap: itemsPerRow ? 'wrap' : flexWrap,\n    // width: itemsPerRow ? (100 / itemsPerRow) + '%' : 'unset'\n    ...style,\n  }\n\n  const _onClick = () => {\n    onClick?.()\n  }\n\n  return (\n    <div className={classNames} style={styles} onClick={_onClick}>\n      {children}\n    </div>\n  )\n}\n","// .core\nimport React from 'react'\n// components\nimport { ISkeletonProps } from './SkeletonUI'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from '../Skeleton.module.scss'\n\ninterface ISkeletonCircleProps extends ISkeletonProps {}\n\n// #TODO\nexport const SkeletonCircle: React.FC<ISkeletonCircleProps> = ({\n  className\n}: ISkeletonCircleProps) => <div className={cx(css.wSkeletonCircle, className)} />\n","// .core\nimport React from 'react'\n// components\nimport { ISkeletonProps } from './SkeletonUI'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from '../Skeleton.module.scss'\n\ninterface ISkeletonLineProps extends ISkeletonProps {}\n\n// #TODO\nexport const SkeletonLine: React.FC<ISkeletonLineProps> = ({ className }: ISkeletonLineProps) => (\n  <div className={cx(css.wSkeletonLine, className)} />\n)\n","// .core\nimport React from 'react'\n// components\nimport { ISkeletonProps } from './SkeletonUI'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from '../Skeleton.module.scss'\n\ninterface ISkeletonSquareProps extends ISkeletonProps {}\n\n// #TODO\nexport const SkeletonSquare: React.FC<ISkeletonSquareProps> = ({\n  className\n}: ISkeletonSquareProps) => <div className={cx(css.wSkeletonSquare, className)} />\n","// .core\nimport React from 'react'\n// components\nimport { ISkeletonProps } from './SkeletonUI'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from '../Skeleton.module.scss'\n\nexport interface ISkeletonTableProps extends Omit<ISkeletonProps, 'children'> {\n  borderRadius?: number\n  /**\n   * how many skeleton rows to display\n   */\n  count?: number\n  rowHeight?: number\n}\n\nexport const SkeletonTable: React.FC<ISkeletonTableProps> = (props: ISkeletonTableProps) => {\n  const { count, rowHeight, className, borderRadius, style } = props\n\n  const items = Array(count || 5).fill(1)\n\n  const styles = { height: rowHeight, borderRadius: borderRadius }\n\n  return (\n    <div style={style} className={cx(css.wSkeletonTable, className)}>\n      {items.map((_, index) => (\n        <div\n          key={index}\n          className={cx(css.item, css.itemAnimation)}\n          style={{ ...styles, animationDelay: `${0.05 * index}s` }}\n        />\n      ))}\n    </div>\n  )\n}\n","// .core\nimport React from 'react'\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from '../Skeleton.module.scss'\n\nexport interface ISkeletonProps {\n  bLoading: boolean\n  children: any // React.ReactNode\n  className?: string\n  style?: React.CSSProperties\n}\n\nexport const SkeletonUI: React.FC<ISkeletonProps> = ({ bLoading, children }: ISkeletonProps) => {\n  return bLoading\n    ? React.Children.map(children, (child, index) => {\n        return (\n          <div style={{ position: 'relative' }}>\n            <div\n              className={cx(css.item, css.itemAnimation)}\n              style={{ animationDelay: `${0.05 * index}s` }}\n            />\n            {child}\n          </div>\n        )\n      })\n    : children\n}\n","// .core\nimport React from 'react'\n// components\nimport { SkeletonCircle } from './variants/SkeletonCircle'\nimport { SkeletonLine } from './variants/SkeletonLine'\nimport { SkeletonSquare } from './variants/SkeletonSquare'\nimport { SkeletonTable } from './variants/SkeletonTable'\nimport { ISkeletonProps, SkeletonUI } from './variants/SkeletonUI'\n\nexport class Skeleton extends React.Component<ISkeletonProps> {\n  static Circle = SkeletonCircle\n  static Line = SkeletonLine\n  static Square = SkeletonSquare\n  static Table = SkeletonTable\n  static UI = SkeletonUI\n\n  render() {\n    return <SkeletonUI {...this.props} />\n  }\n}\n","// core\nimport React, { useEffect, useRef, useCallback } from 'react'\n\nimport classnames from 'classnames'\n\n// components\nimport { IWrapperComponentProps } from '@/components'\n\n// styles\nimport css from './Popover.module.scss'\nimport { Card } from '@/components/containers'\nimport { Backdrop } from '@/components/basic/Backdrop/Backdrop'\nimport { runCallback } from '@/utils'\n\nexport interface IPopoverProps extends IPopoverComponentProps {\n  /**\n   * Callback to run on blur\n   */\n  onBlur?: () => any\n  /**\n   * Css z-index value\n   */\n  zIndex?: number\n  /**\n   * should be displayed backdrop\n   */\n  darkBP?: boolean\n  backdrop?: boolean\n}\n\nexport interface IPopoverComponentProps extends IWrapperComponentProps {\n  /**\n   * Invert colors\n   */\n  inverted?: boolean\n  /**\n   * Whether to show content\n   */\n  open: boolean\n  /**\n   * From which side to open\n   */\n  side?: 'left' | 'right'\n  /**\n   * Width of popover\n   */\n  width?: number\n}\n\nfunction PopoverComponent({\n  inverted,\n  open,\n  side = 'left',\n  width,\n  className,\n  children,\n  classes = {},\n}: IPopoverProps) {\n  const rootRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (rootRef.current) {\n      rootRef.current.style.width = open ? '100%' : '0px'\n    }\n  }, [open, children])\n\n  return (\n    <div\n      ref={rootRef}\n      className={classnames(\n        css.root,\n        {\n          [css.open]: open,\n        },\n        css[side],\n        className\n      )}>\n      <Card className={classnames(css.card, classes.card)}>\n        <div className={classnames({ [css.boxInverted]: inverted })}>\n          <div className={classnames(css.content, classes.content)} style={{ width }}>\n            {children}\n          </div>\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport function Popover({\n  open,\n  side = 'left',\n  onBlur,\n  backdrop,\n  className,\n  darkBP,\n  classes = {},\n  zIndex = 400,\n  width: requestedWidth,\n  ...passingProps\n}: IPopoverProps) {\n  const popoverPositionRef = useRef<HTMLDivElement>(null)\n\n  const popoverWidth = requestedWidth || 400\n\n  const handleBlur = useCallback(\n    (e: any) => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      runCallback(onBlur)\n    },\n    [onBlur]\n  )\n\n  return (\n    <div ref={popoverPositionRef} className={classnames(css.refDiv, css[side], className)}>\n      {backdrop ? (\n        <Backdrop\n          dark={darkBP}\n          className={classes.backdrop}\n          visible={open}\n          zIndex={zIndex}\n          onClick={handleBlur}\n        />\n      ) : null}\n      <PopoverComponent\n        className={classes.popover}\n        classes={classes}\n        open={open}\n        side={side}\n        width={popoverWidth}\n        {...passingProps}\n      />\n    </div>\n  )\n}\n","// .core\nimport React from 'react';\n// components\nimport { Button, Icon, INoDataProps, Loader, NoData } from '../../basic';\n// import { Skeleton } from '../../containers/Skeleton/Skeleton'        //      #CHECK\n// libraries\nimport cx from 'classnames';\nimport {sortByCol} from \"@/utils\";\n// import { AutoSizer } from 'react-virtualized/dist/commonjs/AutoSizer'\nimport 'react-virtualized/styles.css';\nimport { Column, ColumnProps, RowMouseEventHandlerParams, SortDirectionType, Table, TableCellProps, TableCellRenderer, TableHeaderProps, TableHeaderRenderer, TableHeaderRowRenderer } from 'react-virtualized/dist/commonjs/Table';\n// styles\nimport css from './Table.module.scss';\nimport { AutoSizer, Index, SortDirection } from 'react-virtualized';\n// import Scrollbars from 'react-custom-scrollbars';\n\n// utils\n// import { IFilter, ISort } from '@/utils' // #CHECK\n\ninterface IFilter<T> {\n  key: keyof T\n}\n\ninterface ISort<T> extends IFilter<T> {\n  direction: SortDirectionType\n}\n\nexport interface IColumns<T> extends Omit<ColumnProps, 'dataKey' | 'width'> {\n  /**\n   * Column's alignment\n   *\n   * @default 'center'\n   */\n  align?: 'start' | 'end'\n  /**\n   * Whether a column is filterable\n   *\n   * @default false || undefined\n   */\n  bFilter?: boolean\n  /**\n   * Whether a column is sortable\n   *\n   * @default false || undefined\n   */\n  bSort?: boolean\n  /**\n   * Whether a column is visible\n   *\n   * @default true || undefined\n   */\n  isVisible?: boolean\n  dataKey: keyof T\n  /**\n   * Render method that overrides the default cell render\n   *\n   * @default\n   * <div className={css.wCell}>\n   *    <span>{cellData}</span>\n   * </div>\n   */\n  component?: (cellData: T[keyof T], rowData: T) => JSX.Element\n  /**\n   * Name of the column\n   *\n   * @default dataKey\n   */\n  label?: string\n  /**\n   * Custom column's width, used for both column's width and maxWidth\n   *\n   * All columns have `flexGrow={1}` by def. Seting this value will override the flex\n   *\n   * @default 100\n   */\n  width?: number\n  flex?: number\n}\n\nexport interface ITableProps<T> {\n  /**\n   * Whether the `Table` is fetching more data, usually changed w/ `onReachEnd`\n   * Conditionally renders `Loader.Line` above the table\n   */\n  bLoading?: boolean\n  className?: string\n  /**\n   * Collection of data fetched from API to display\n   */\n  collection?: T[]\n  /**\n   * Columns config\n   */\n  columns: IColumns<T>[]\n  /**\n   * Custom `<div />` element to render instead of the default header\n   */\n  header?: React.ReactElement<HTMLDivElement>\n  /**\n   * Custom height of the header - should be identical or slightly bigger that `rowHeight`\n   *\n   * @default '50px'\n   */\n  headerHeight?: number\n  /**\n   * Config for what to display when there are no records\n   */\n  noData?: INoDataProps\n  /**\n   * Custom height of each row\n   *\n   * @default '60px'\n   */\n  rowHeight?: number\n  /**\n   * Distance from the bottom of the list at which the `onReachEnd` is called\n   *\n   * @default 0\n   */\n  threshold?: number\n  /**\n   * Distance from the bottom of the list at which the `onReachEnd` is called\n   *\n   * @default 0\n   */\n  minTableWidth?: number\n\n  onFilter?(filterParams: IFilter<T>): void\n\n  /**\n   * Event method called whenever user reaches bottom of the scrollable area\n   * Used for fetching more data (next page)\n   */\n  onReachEnd?(): void\n\n  onRowClick?(info?: RowMouseEventHandlerParams): void\n\n  onRowDoubleClick?(info?: RowMouseEventHandlerParams): void\n\n  onRowRightClick?(info?: RowMouseEventHandlerParams): void\n\n  rowClassName?: string | ((info: Index) => string)\n\n  bscrollToBottom?:boolean\n\n  sortBy?: string\n  sortDirection?: SortDirectionType\n}\n\ninterface ITableState {\n  sortBy:string\n  sortDirection: SortDirectionType\n  sortedList: any\n  scrolledtoBottom?: boolean;\n}\ninterface ISortTableState {\n  sortBy:string\n  sortDirection: SortDirectionType\n}\n\nexport class TableVirtualized<T> extends React.Component<ITableProps<T>, ITableState> {\n  static defaultProps = {\n    headerHeight: 50,\n    rowHeight: 60,\n    threshold: 0,\n    bscrollToBottom: false,\n  };\n\n  refList = React.createRef<Table>();\n  state: ITableState\n\n  constructor(props:ITableProps<T>) {\n    super(props);\n\n    const sortBy = props.sortBy || '';\n    const sortDirection = props.sortDirection || SortDirection.ASC;\n    this.state = {\n      sortBy,\n      sortDirection,\n      sortedList: [],\n      scrolledtoBottom: props.bscrollToBottom,\n    }\n\n    this._sort = this._sort.bind(this);\n  }\n  componentDidMount() {\n    const { sortBy, sortDirection, sortedList } = this.state;\n    this._sort({sortBy, sortDirection})\n    if(this.props.bscrollToBottom) {\n      this.refList.current?.scrollToRow(sortedList.length); \n    }\n  }\n\n  componentWillReceiveProps(nextProps:ITableProps<T>) {\n    const { sortBy, sortDirection } = this.state;\n    if (nextProps.collection) {\n      const sortedList = sortByCol(nextProps.collection, [sortBy]);\n      if (sortDirection === SortDirection.DESC) {\n        sortedList?.reverse();\n      }\n      this.setState({sortedList})\n    }\n  }\n\n  componentDidUpdate(prevProps:ITableProps<T>){\n    if(prevProps.minTableWidth !== this.props.minTableWidth){\n      this.refList.current?.forceUpdateGrid();\n    }\n\n    // autoScroll on props update\n    const { sortedList } = this.state;\n    if (this.props.bscrollToBottom && sortedList.length !== prevProps.collection?.length) {\n      this.refList.current?.scrollToRow(sortedList.length);  \n    }\n}\n\n  _sort({sortBy, sortDirection}:ISortTableState, newList?:[]) {\n    const sortedList = this._sortList({sortBy, sortDirection});\n    this.setState({sortBy, sortDirection, sortedList});\n  }\n\n  _sortList({ sortBy, sortDirection }: ISortTableState) {\n    const newList = sortByCol(this.props.collection, [sortBy]);\n    if (sortDirection === SortDirection.DESC) {\n      newList?.reverse();\n    }\n    return newList;\n  }\n  \n\n  /**\n   * Event method called when a filterable header column is clicked\n   */\n  onFilter = (key: keyof T) => () => {\n    const { onFilter } = this.props;\n\n    onFilter?.({ key });\n  };\n\n  /**\n   * Event method called when scrolling through the `Table` - handles fetching next page upon reaching Table's end\n   */\n  onScroll = (e: any /* ScrollEventData */) => {\n    const { threshold, onReachEnd } = this.props;\n\n    if (e.scrollTop >= e.scrollHeight - e.clientHeight - threshold!) {\n      onReachEnd?.()\n      this.setState({scrolledtoBottom:true})\n    } else {\n      this.setState({scrolledtoBottom:false})\n    }\n  };\n\n  scrollToggle = () => {\n    const { sortedList } = this.state;\n    if(this.state.scrolledtoBottom) {\n      this.onScrollTo(0)\n    } else {\n      this.onScrollTo(sortedList.length)\n    }\n  }\n\n  public isScrollable = () => {\n    if(!this.props.bscrollToBottom) {\n      return false;\n    }\n    const renderedRows = Number(this.refList.current?.props.height) / Number(this.props.rowHeight)-1;\n    return this.state.sortedList.length > renderedRows\n  };\n\n  // #UNUSED\n  /**\n   * Event method that scrolls to a row based on provided index\n   * @param index Index of row to scroll to\n   */\n  onScrollTo(index: number) {\n    this.refList.current?.scrollToRow(index);\n  }\n\n  /**\n   * Event method called when a sortable header column is clicked\n   *\n   * @param sortBy - column's `dataKey: keyof T`\n   * @param sortDirection - `'ASC' | 'DESC'`\n   *\n   * #NOTE: Had to redesign the param structure into custom one for more easier usage\n   */\n  // onSort = ({ sortBy: key }: { sortBy: string }) => {\n  //   const { onSort } = this.props;\n\n  //   this.setState(\n  //     ({ sortDirection: prevSortDirection }) => ({\n  //       sortDirection: prevSortDirection === 'ASC' ? 'DESC' : 'ASC',\n  //     }),\n  //     () => {\n  //       const { sortDirection } = this.state;\n        \n  //       onSort?.({ key: key as keyof T, direction: sortDirection });\n  //     },\n  //   );\n  // };\n\n  /**\n   * Getter method for retrieving row data\n   *\n   * Technically this is not represented on UI in any way, however the `TableVirtualized` has this marked as required\n   * and won't work w/o it.\n   */\n  rowGetter = ({ index }: { index: number }) => this.state.sortedList?.[index] ?? undefined; // this.state.sortedList?.[index]\n\n  /**\n   * Render method for displaying custom header passed via `header` prop\n   *\n   * Clones exactly what's passed w/ additional \"internal\" details (`height, width`)\n   */\n  renderHeader = (\n    width: number,\n  ): TableHeaderRowRenderer | undefined => (/* {}: TableHeaderRowProps */) => {\n    const { header, headerHeight: height } = this.props;\n\n    return (\n      header &&\n      React.cloneElement(header as any, { style: { ...header.props.style, height, width } })\n    );\n  };\n\n  /**\n   * Render method for individual column's header\n   */\n  renderHeaderForColumn = (colIndex: number): TableHeaderRenderer => ({\n                                                                        dataKey,\n                                                                      }: TableHeaderProps) => {\n    const { headerHeight, rowHeight, columns, onFilter } = this.props;\n    const { sortDirection, sortBy } = this.state;\n    const col = columns[colIndex];\n\n    return (\n      <div className={cx(css.wHeaderCell)} style={{ height: headerHeight || rowHeight, justifyContent: col.align && `flex-${col.align}`, minWidth: col.minWidth }}>\n        {/* LABEL */}\n        <span>{col.label || ''}</span>\n\n        {/* SORT */}\n        {/* #NOTE: as of now, the feather icons are broken, the required data-feather prop within Icon doesnt update hence the icon wont re-render, they're only temp. so who cares, this feature works */}\n        {\n          sortBy===col.dataKey && col.bSort?\n            <Icon name={sortDirection === 'ASC' ? 'expand_more' : 'expand_less'} />\n          : col.bSort?\n            <Icon color='neutral' name={'sort'} />\n          :null\n        }\n\n        {/* FILTER */}\n        {onFilter && col.bFilter && (\n          <Icon name=\"filter\" onClick={this.onFilter(dataKey as keyof T)}/>\n        )}\n      </div>\n    );\n  };\n\n  /**\n   * Render method for Table's individual cells\n   *\n   * Defaults to `span`, this can be overwritten by defining `component` prop within Table's `columns` prop (config)\n   */\n  renderCell: TableCellRenderer = ({\n                                     cellData,\n                                     columnIndex,\n                                     rowData /* ,dataKey, rowIndex */,\n                                   }: TableCellProps) => {\n    const { columns } = this.props;\n    const col = columns[columnIndex];\n\n    return (\n      col.component?.(cellData, rowData) || (\n        <div className={css.wCell} style={{ justifyContent: col.align && 'flex-' + col.align }}>\n          {/* #NOTE: `cellData === (collection[rowIndex] as any)[dataKey])` */}\n          <span>{cellData}</span>\n        </div>\n      )\n    );\n  };\n\n  /**\n   * Render method for displaying info message when there are no records within the `Table`\n   */\n  renderNoData = () => <NoData {...this.props.noData} message={this.props.bLoading ? 'Loading ...' : undefined} />;\n\n  /**\n   * Simple sorting method by direction\n   */\n  \n  // handleScroll = (e:any) => {\n  //   const { scrollTop, scrollLeft } = e.target;\n  //   const { g } = this.refList.current;\n  //   Table.handleScrollEvent({ scrollTop, scrollLeft });\n  // };\n  render() {\n    const {sortBy, sortDirection} = this.state;\n    const {\n      bLoading,\n      columns,\n      className,\n      collection,\n      header,\n      headerHeight,\n      rowHeight,\n      onRowClick,\n      onRowDoubleClick,\n      minTableWidth,\n      rowClassName,\n      //   onRowRightClick\n    } = this.props;\n\n    return (\n      <div className={cx(css.wTable, className)}>\n        {/* LOADER */}\n        <Loader.Line className={css.loader} bLoading={bLoading}/>\n\n        {/* TABLE */}\n        <AutoSizer>\n          {({ height, width }) => {\n            let makeWidth = width\n            if (minTableWidth) {\n              makeWidth = width < minTableWidth ? minTableWidth : width\n            }\n            return (\n              <Table\n                ref={this.refList}\n                headerHeight={headerHeight!}\n                headerRowRenderer={header && this.renderHeader(makeWidth)} //      #CHECK w/o `header &&` it wont render the def. header even when the method returns undefined\n                // height={maxHeight || (collection?.length || 0) * rowHeight! + rowHeight! - 10 || height}\n                height={height}\n                noRowsRenderer={this.renderNoData}\n                overscanRowCount={5}\n                rowCount={collection?.length || 0}\n                rowGetter={this.rowGetter}\n                rowHeight={rowHeight!}\n                sort={this._sort}\n                sortBy={sortBy}\n                sortDirection={sortDirection}\n                width={makeWidth}\n                minWidth={0}\n                rowClassName={`${rowClassName||''} ${onRowClick?css.pointer:''}`}\n                onRowClick={onRowClick}\n                onRowDoubleClick={onRowDoubleClick}\n                //   onRowRightClick={onRowRightClick}    // #NOTE: is in docs but not in .d.ts: https://github.com/bvaughn/react-virtualized/blob/master/docs/Table.md#headerrowrenderer\n                onScroll={this.onScroll}>\n                {columns.map((col, colIndex) => (\n                    <Column\n                      key={String(col.dataKey) + '_' + colIndex}\n                      cellRenderer={this.renderCell}\n                      dataKey={col.dataKey as string}\n                      disableSort={!col.bSort}\n                      className={cx(css.column, col.className)}\n                      flexGrow={col.flex || 1}\n                      headerRenderer={this.renderHeaderForColumn(colIndex)}\n                      maxWidth={col.width}\n                      minWidth={col.minWidth}\n                      width={col.width || 100}\n                    />\n                  ))}\n              </Table>\n            );\n          }}\n        </AutoSizer>\n        {\n          this.isScrollable() &&\n            <Button className={css.fab} icon={this.state.scrolledtoBottom?'arrow_upward':'arrow_downward'} onClick={()=>this.scrollToggle()} />\n        }\n      </div>\n    );\n  }\n}\n","// .core\nimport React, { ReactNode } from 'react'\n// libs\nimport classnames from 'classnames'\n// navigation\nimport { IUIConfig } from '@/views/routes'\n// styles\nimport css from './Content.module.scss'\nimport { observer } from 'mobx-react';\nimport { useStore } from '@/stores';\n\ninterface IContentProps extends Pick<IUIConfig, 'bShowHeader'> {\n  children: ReactNode\n  className?: string\n}\n\nexport const Content: React.FC<IContentProps> = observer(({ className, children }: IContentProps) => {\n  const {globalStore} = useStore()\n  return (\n    <div className={classnames(css.content, className, {[css.collapsed]: !globalStore.leftSideMenuOpen})}>\n      <main>\n        {children}\n      </main>\n    </div>\n  )\n})\n","// core\nimport React from 'react'\n\n// libraries\nimport { Link } from 'react-router-dom'\nimport classnames from 'classnames'\n\n// components\nimport { IWrapperComponentProps } from '@/components'\n\n// styles\nimport css from '../Header.module.scss'\n\nexport interface IMenuItemProps extends IWrapperComponentProps {\n  /**\n   * link where will click redirect\n   */\n  path: string\n  /**\n   * path that is currently active\n   */\n  activePath: string\n  target?: string\n  isActive?: boolean\n}\n\nexport const MenuItem = ({ children, path, activePath, target, isActive }: IMenuItemProps) => {\n  return (\n    <div className={css.menuItemParent}>\n      {target ? (\n        <a\n          href={path}\n          target={target}\n          className={css.menuItem}\n        >\n          <div className={css.text}>{children}</div>\n        </a>\n      ) : (\n        <Link\n        className={classnames(\n          css.menuItem, \n          { [css.activeLink]: isActive || activePath.includes(path.split(\"/\")[0])  }\n          )}\n        to={`/${path}`}>\n          {/* <div className={css.text}>{children}</div> */}\n          <div className={css.line} />\n          <span>{children}</span>\n      </Link>\n        )}\n    </div>\n  )\n}\n","export interface INav {\n  name: string, \n  path: string, \n  icon: string, \n  hasParam:boolean, \n  permission: string | null \n}\nexport const MENU_ITEMS: INav[] = [\n  {\n    name: 'routes.overview',\n    path: 'overview',\n    icon: 'dashboard',\n    permission: 'overview',\n    hasParam: false,\n  },\n  {\n    name: 'routes.apps',\n    path: 'apps',\n    icon: 'settings',\n    permission: 'configView',\n    hasParam: true,\n  },\n  {\n    name: 'routes.sessions',\n    path: 'sessions',\n    icon: 'cloud',\n    permission: 'sessions',\n    hasParam: true,\n  },\n  {\n    name: 'routes.logs',\n    path: 'logs/admin',\n    icon: 'cancel',\n    permission: 'logsView',\n    hasParam: true,\n  },\n]\n","// core\nimport React, { useState, useCallback, Fragment } from 'react';\n\n// libraries\nimport cx from 'classnames';\n\n// components\nimport { Avatar, Badge, Icon, Divider } from '@/components/basic';\nimport { Popover } from '@/components/complex';\n\n// styles\nimport css from './RightToggleMenu.module.scss';\nimport { AccessService } from '@/services';\nimport { useStore } from '@/stores';\nimport { observer } from 'mobx-react';\nimport { useTranslation } from 'react-i18next';\nimport { useMediaQuery } from 'react-responsive';\n\ninterface IRightToggleMenuProps {\n  bsmall?:boolean\n}\n\nexport const RightToggleMenu = observer(({bsmall=false}:IRightToggleMenuProps) => {\n  const {permissionsStore, globalStore} = useStore();\n  const [expanded, setExpanded] = useState(false);\n  const [expandedLang, setExpandedLang] = useState(false);\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-width: 992px)'\n  })\n  const {t,i18n} = useTranslation(); \n  const logout = () => {\n    AccessService.logout();\n  }\n\n  const handleToggleExpand = useCallback(() => {\n    setExpanded(val=>!val);\n    if(expandedLang) {\n      setExpandedLang(val=>!val);\n    }\n  }, [setExpanded, expanded]); \n\n  const changeLang = (code:string) => {\n    i18n.changeLanguage(code)\n    setExpanded(val=>!val);\n  }\n\n  return (\n    <div className={css.root}>\n      <Popover\n        darkBP\n        backdrop\n        width={240}\n        className={cx(css.popover,{[css.smaller]:bsmall})}\n        open={expanded}\n        side=\"right\"\n        onBlur={handleToggleExpand}>\n        { globalStore.availableLangs.length > 1 &&\n        <div className={cx(css.MenuItem)} onClick={()=>setExpandedLang((val)=>!val)} >\n          <div>{t('general.language')}</div>\n          <Icon name={!expandedLang?'expand_more':'expand_less'}/>\n        </div>\n        }\n        {\n          expandedLang &&\n          <>\n            {\n              globalStore.availableLangs.filter(l=>l.code!==i18n.language).map(lang => (\n                <Fragment key={lang.code}>\n                  <Divider margin={0}/>\n                  <div key={lang.code} className={cx(css.MenuItem)} onClick={()=>changeLang(lang.code)} >\n                    <div>{lang.name}</div>\n                    <Icon name=\"translate\"/>\n                  </div>\n                </Fragment>\n              ))\n            }\n          </>\n        }\n        <Divider margin={0}/>\n        <div className={cx(css.MenuItem)} onClick={logout}>\n          <div>{t('general.logout')}</div>\n          <Icon name=\"person_outline\"/>\n        </div>\n        <Divider margin={0}/>\n        <a className={cx(css.MenuItem, css.danger)} href={globalStore.serverUrl}>\n          <div>{t('general.exit')}</div>\n          <Icon name=\"exit_to_app\"/>\n        </a>\n      </Popover>\n      <Badge\n        className={css.avatar}\n        vertical=\"bottom\"\n        color=\"blue\"\n        content={<Icon size=\"mini\" name={expanded ? 'expand_less' : 'expand_more'}/>}\n        onClick={handleToggleExpand}\n        >\n        <Avatar \n          shape={'expandableCircle'} \n          bExpanded={expanded} \n          label={expanded && isDesktopOrLaptop ? t('general.hello', {user:permissionsStore.get('user')}):(permissionsStore.get('user') as string).charAt(0)}\n        />\n      </Badge>\n    </div>\n  );\n});\n","// core\nimport React, { useCallback, useEffect, useState } from 'react'\nimport cx from 'classnames'\n// libraries\nimport { useLocation } from 'react-router-dom'\nimport css from './Header.module.scss'\n\n// stores\nimport { observer } from 'mobx-react'\n// partials\nimport { MenuItem } from './partials/MenuItem'\n\nimport {useStore} from '@/stores'\n// import { toJS } from 'mobx'\nimport { MENU_ITEMS, INav } from './data'\nimport { RightToggleMenu } from '../RightToggleMenu/RightToggleMenu'\nimport { useTranslation } from 'react-i18next'\nimport { Icon, Popover } from '@/components'\n\nexport const Header = observer(function Header() {\n  const {permissionsStore, globalStore} = useStore();\n  const [small, setSmall] = useState(false);\n  const [expandMenu, setExpandMenu] = useState(false);\n  const { pathname } = useLocation();\n  const { t } = useTranslation();\n  \n  const getPath = (item:INav) => {\n    if(item.hasParam && globalStore.app) {\n      return item.path.includes('logs') ? \n      'logs/session/'+ globalStore.app\n      :\n      item.path + '/'+ globalStore.app\n    } else {\n      return item.path\n    }\n  }\n  const handleExpandMenu = useCallback(() => {\n    setExpandMenu(val=>!val);\n  }, [setExpandMenu, expandMenu]);\n\n  const rootScrollListener = () => {\n    setSmall(document.getElementById('root')?.scrollTop! > 30)\n  };\n\n  const isActive = (item: INav) => {\n    const path = getPath(item);\n    if (pathname.includes(path.split(\"/\")[0])) {\n      return true;\n    }\n    if (path == 'apps' && pathname == '/quickstart/app') {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    let root: HTMLElement | null;\n    if (typeof window !== \"undefined\") {\n      root = document.getElementById('root')\n      if (root != null) {\n        root.addEventListener(\"scroll\", rootScrollListener);\n      }\n    }\n\n    return () => {\n      if (root != null) {\n        root.removeEventListener(\"scroll\", rootScrollListener);\n      }\n    };\n  }, []);\n  \n  return (\n    <header className={cx(css.root, {[css.headerSmaller]:small})}>\n      <div className={css.wrap} >\n        <Icon name='menu' className={css.hamburger} onClick={handleExpandMenu}></Icon>\n        <Popover\n          darkBP\n          backdrop\n          width={240}\n          //className={cx(css.popover,{[css.smaller]:bsmall})}\n          open={expandMenu}\n          side=\"left\"\n          onBlur={handleExpandMenu}>\n          {MENU_ITEMS.filter(item => null === item.permission || permissionsStore.get(item.permission as any) ).map(item => (\n            <MenuItem\n              key={item.path}\n              activePath={pathname}\n              path={getPath(item)}\n              isActive={isActive(item)}\n              >\n              {t(item.name)}\n            </MenuItem>\n          ))}\n        </Popover>\n        <nav className={css.menu}>\n          {MENU_ITEMS.filter(item => null === item.permission || permissionsStore.get(item.permission as any) ).map(item => (\n            <MenuItem\n              key={item.path}\n              activePath={pathname}\n              path={getPath(item)}\n              isActive={isActive(item)}\n            >\n              {t(item.name)}\n            </MenuItem>\n          ))}\n        </nav>\n        \n        <RightToggleMenu bsmall={small} />\n      </div>\n    </header>\n  )\n})","// core\nimport React from 'react'\n\n// libraries\nimport { Link } from 'react-router-dom'\nimport classnames from 'classnames'\n\n// components\nimport { Icon } from '@/components/basic'\nimport { IWrapperComponentProps } from '@/components'\n\n// styles\nimport css from '../LeftSideMenu.module.scss'\nimport { ApiServerUrl } from '@/utils'\n\nexport interface IMenuItemProps extends IWrapperComponentProps {\n  /**\n   * link where will click redirect\n   */\n  path?: string\n  /**\n   * image to show\n   */\n  image?: string\n  /**\n   * icon to show\n   */\n  icon?: string\n  /**\n   * path that is currently active\n   */\n  activePath?: string\n  active?: boolean\n\n  /**\n   * callback after click\n   */\n  onClick?: () => void\n}\n\nexport const MenuItem = ({ children, path, image, icon, activePath, onClick, className, active }: IMenuItemProps) => {\n  return (\n    <li className={className}>\n      {\n        path ? \n        <Link\n          className={classnames(css.menuItem, { [css.activeLink]: activePath === `/${path}` })}\n          to={`/${path}`}\n          onClick={onClick}>\n          {image && <img src={ApiServerUrl + image + '/rest/appicon'} alt=\"appIcon\"/> }\n          {icon && <Icon className={css.menuItemIcon} name={icon} />}\n          <div className={css.text}>{children}</div>\n        </Link>\n        : \n        <span\n          className={classnames(css.menuItem, { [css.activeLink]: active })}\n          onClick={onClick}>\n          {image && <img src={ApiServerUrl + image + '/rest/appicon'} alt=\"appIcon\"/> }\n          {icon && <Icon className={css.menuItemIcon} name={icon} />}\n          <div className={css.text} >{children}</div>\n        </span>\n\n      }\n    </li>\n  )\n}","export default \"__VITE_ASSET__9f5ee417__\"","import React, { useEffect } from \"react\";\nimport cx from 'classnames';\nimport { Input, showToastErr } from \"@/components\";\nimport { Flex } from \"@/components/containers\";\nimport css from '../LeftSideMenu.module.scss'\nimport appIcon from '@/assets/images/appjava.png';\nimport { ButtonGroup } from \"@/components/basic/Button/variants/ButtonGroup/ButtonGroup\";\nimport { observer } from \"mobx-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { convertToSlug } from \"@/utils\";\nimport { useStore } from \"@/stores\";\n\ninterface ICreateAppItemProps {\n    onSubmit: (appPath: string, appName: string) => void\n    onClose:  any\n}\nexport const CreateApp = observer(({onSubmit,onClose}:ICreateAppItemProps) => {\n  const [appname, setAppname] = React.useState<string>(\"\");\n  const [apppath, setAppPath] = React.useState<string>(\"/\");\n  const {globalStore} = useStore();\n  const {t} = useTranslation();\n  const handleEnter = (event:React.KeyboardEvent) => {\n    if(event.key === 'Enter') {\n      submit()\n    }\n}\n\n  const close = ()=> {\n    setAppname('');\n    setAppPath('/');\n    onClose();\n  }\n\n  const submit = ()=> {\n    const allPathsAreDifferent = globalStore.paths?.filter((path)=>path.path===apppath).length===0\n    if(allPathsAreDifferent) {\n      onSubmit(apppath,appname)\n    } else {\n      showToastErr(t('apps.valMessageChangePath'))\n      return\n    }\n\n  }\n\n  const onChangeNameInput = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setAppname(e.currentTarget.value)\n    setAppPath('/'+convertToSlug(e.currentTarget.value))\n  }\n\n  useEffect(()=> {\n    if(globalStore.isDuplicate) {\n      setAppname(globalStore.app)\n      setAppPath('/'+convertToSlug(globalStore.app))\n    }\n  },[])\n  \n  return (\n    <Flex className={cx(css.menuItem, css.activeLink, css.addApp)}>\n      <img src={globalStore.isDuplicate? globalStore.info?.path+ '/rest/appicon':appIcon} alt=\"appIcon\"/>\n      <div className={css.inputGroup}>\n        <Input \n          placeholder={t('apps.createPlaceholder')} \n          classNameInput={cx(css.inputCreate)} \n          value={appname} \n          onKeyPress={handleEnter} \n          onChange={onChangeNameInput} \n          bAutoFocus\n        />\n        <Input \n          classNameInput={cx(css.inputCreate, css.inputSmall)} \n          value={apppath} \n          onKeyPress={handleEnter} \n          onChange={(ev)=>setAppPath('/'+convertToSlug(ev.currentTarget.value))} \n        />\n      </div>\n      <ButtonGroup buttons={[\n        {color:'blue', icon:'check', iconColor:'white', onClick:submit},\n        {color:'neutral', icon:'close', onClick:close}\n      ]} />\n    </Flex>\n  )\n})","// core\nimport React, { ReactNode, useEffect, useRef, useState } from 'react'\n\nimport classnames from 'classnames'\n\n// components\nimport { Button, IComponentProps, Icon, Tooltip } from '@/components'\nimport { IButtonDefaultProps } from '../Button/variants/ButtonDefault/ButtonDefault'\n\n// style\nimport css from './Dropdown.module.scss'\n\nexport interface IBtndropProps  extends IButtonDefaultProps {\n  buttons?: IButtonDefaultProps[]\n  shouldShow?: boolean | null | string\n  sDisabled?:string\n}\n\nexport interface IDropdownProps extends IComponentProps {\n  children?: ReactNode\n  active?: string;\n  color?: string;\n  size?: string;\n  position?:'left'|'right';\n  buttons: IBtndropProps[]\n}\n\n/**\n * Count badge displayed at the top corner for any component which it wraps\n */\nexport const Dropdown = ({\n  color='',\n  size='',\n  position='left',\n  active='',\n  buttons,\n  children,\n  className,\n  classes = {},\n}: IDropdownProps) => {\n  const [open, setOpen] = useState(false);\n  const [subOpen, setSubOpen] = useState(false);\n  const [clickedOutside, setClickedOutside] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const handleClickOutside = (e:any) => {\n      if (!dropdownRef.current?.contains(e.target)) {\n          setClickedOutside(true);\n          setOpen(false)\n      }\n  };\n\n  const handleClickInside = () => setClickedOutside(false);\n  const handleClick = (btn:any) => {\n    if(btn.sDisabled) {\n      return\n    }\n    setClickedOutside(true);\n    setOpen(false)\n    btn.onClick();\n  };\n\n  const shouldShow = (btn:IBtndropProps) => {\n    let isNotActive = true\n    if (active) {\n      isNotActive = active !== btn.label\n    }\n    return (null == btn.shouldShow || btn.shouldShow) && isNotActive\n  }\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  });\n\n  return (\n    <div\n      className={classnames(css.root, className)}\n      onClick={handleClickInside}\n      ref={dropdownRef} \n      >\n      <Button.UI color={color} size={size} onClick={()=>setOpen(!open)}>\n        {children ? children :<>{active} <Icon name={open ? 'expand_less': 'expand_more'} /></> }\n      </Button.UI>\n      <nav \n        className={classnames(css.menu,css[position], {[css.menuActive]: open})}\n        >\n          {\n            buttons.filter(btn=>shouldShow(btn)).map((btn)=> (\n              <React.Fragment key={btn.label}>\n                <Button.UI\n                className={classnames(\n                  css.button,\n                  btn.className,\n                  {\n                    [css[btn.color!]]:btn.color\n                  },\n                  {\n                    [css.icon]: btn.icon,\n                  },\n                  {\n                    [css.disabled]: btn.sDisabled,\n                  }\n                )}\n                style={btn.style}\n                type={btn.type || 'button'}\n                bDisabled={btn.bDisabled}\n                >\n                  {\n                    btn.sDisabled ?\n                    <Tooltip content={btn.sDisabled}>\n                      <span className={classnames(css.btnText, {[css.fullW]: !btn.buttons})} onClick={()=>handleClick(btn)}>\n                        <ItemContent icon={btn.icon} label={btn.label} />\n                      </span>\n                    </Tooltip>\n                    :\n                    <span className={classnames(css.btnText, {[css.fullW]: !btn.buttons})} onClick={()=>handleClick(btn)}>\n                      <ItemContent icon={btn.icon} label={btn.label} />\n                    </span>\n                  }\n                  {btn.buttons && <Icon name={'expand_more'} className={css.expandIcon} onClick={()=>setSubOpen(!subOpen)} />}\n              </Button.UI>\n              {\n                subOpen && btn.buttons?.map((btn)=> (\n                  <Button.UI\n                    key={btn.label}\n                    className={classnames(\n                      css.button,\n                      css.sub,\n                      btn.className,\n                    )}\n                    style={btn.style}\n                    type={btn.type || 'button'}\n                    onClick={()=>handleClick(btn)}\n                  >\n                    <span className={css.btnText}>\n                      {btn.label}\n                    </span>\n                  </Button.UI>\n                ))\n              }\n              </React.Fragment>\n            ))\n          }\n      </nav>\n    </div>\n  )\n}\n\nconst ItemContent = ({icon,label}:{icon?: React.ReactNode, label?:string}) => (\n  <>\n    {icon && typeof icon === 'string' ? (\n      <Icon name={icon} />\n    ) : null}\n    {label}\n  </>\n)\n","// core\nimport React, { HTMLAttributes, useEffect } from 'react'\n// libraries\nimport { useLocation, useHistory, useParams } from 'react-router-dom'\nimport cx from 'classnames'\n// import i18n from '@/i18n'\n//utils\nimport { useInterval } from '@/utils'\n// components\nimport { Icon, Input, Button, Flex, showToastOk, showToastErr } from '@/components'\n// partials\nimport { MenuItem } from './MenuItem'\n// styles\nimport css from '../LeftSideMenu.module.scss'\n// data (will be fetched from somewhere later)\nimport { observer } from 'mobx-react'\nimport {useStore} from '@/stores'\nimport { CreateApp } from './CreateApp'\nimport {Scrollbars} from 'rc-scrollbars'\nimport { useTranslation } from 'react-i18next'\nimport { Dropdown } from '@/components/basic/Dropdown/Dropdown'\nexport const Menu = observer(function AppsMenu() {\n  const {permissionsStore, globalStore, logsStore} = useStore();\n  const { pathname } = useLocation()\n  const history = useHistory()\n  const {t} = useTranslation()\n  const [searchTerm, setSearchTerm] = React.useState<string>(\"\");\n  const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n  \n  const isConfig = pathname.includes('apps') || pathname.includes('quickstart/app')\n  const isLogs = pathname.includes('logs')\n  const isAppView = pathname === '/apps'\n\n  const results = !searchTerm\n    ? globalStore.paths\n    : globalStore.paths?.filter(item =>\n        item.name?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n        item.path?.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n      );\n\n  const getAppPaths = (path:string):string => {\n    return (isConfig?'apps':isLogs? 'logs/session':'sessions')+path\n  }\n\n  const renderThumb = ({ style, ...props }: HTMLAttributes<HTMLDivElement>) => {\n    const finalStyle = {\n      ...style,\n      cursor: 'pointer',\n      backgroundColor: 'rgba(255,255,255,.5)',\n    };\n    return <div style={finalStyle} {...props} />;\n  }\n\n  const create = (appPath:string, appName:string) => {\n    if(appPath && appName) {\n      const duplicateApp = globalStore.isDuplicate ? globalStore.app : undefined\n      globalStore.createApp(appPath, appName, duplicateApp)\n        .then(() => {\n          globalStore.setToggleAddApp()\n          showToastOk(`${t('apps.toastCreated')} ${appName}`)\n          history.push('/apps');\n        })\n      }\n    }\n    \n    const showCreateInput = (appToCopy?:string)=> {\n      if(appToCopy) {\n        globalStore.setIsDuplicate(true);\n      }\n      globalStore.setToggleAddApp(true)\n    }\n    \n  const showQuickstart = () => {\n    history.push('/quickstart/app', {time: new Date().getTime()});\n  }\n\n  useEffect(()=>{\n    globalStore.loadPaths();\n  },[])\n\n  useInterval(() => {\n    globalStore.loadPaths();\n  }, 5000);\n\n  return (\n    <>\n      <div className={css.menuFlex}>\n        <ul className={cx(css.menuItems)}>\n          {\n            isConfig ?\n              <>\n                <MenuItem\n                  key={'server'}\n                  activePath={pathname}\n                  path={'apps'}\n                  icon={'apps'}\n                  >\n                    {t('apps.all')}\n                  </MenuItem>\n              </>\n            :isLogs ?\n            <>\n              <MenuItem key={'admin'} activePath={pathname} path={'logs/admin'} className={css.wfull} icon={'settings_applications'}>\n                <div className={css.downloadFlex}>\n                  {t('logs.admin')}\n                  <Icon className={css.absIcon} name={'cloud_download'} onClick={()=>logsStore.downloadLogs('admin')} />\n                </div>\n              </MenuItem>\n              <MenuItem key={'audit'} activePath={pathname} path={'logs/audit'} className={css.wfull} icon={'verified_user'}>\n                <div className={css.downloadFlex}>\n                  {t('logs.audit')}\n                  {!logsStore.isCluster &&  <Icon className={css.absIcon} name={'cloud_download'} onClick={()=>logsStore.downloadLogs('audit')} /> }\n                </div>\n              </MenuItem>\n              <MenuItem key={'server'} activePath={pathname} path={'logs/server'} className={css.wfull} icon={'dns'}>\n                <div className={css.downloadFlex}>\n                  {t('overview.server')}\n                  {!logsStore.isCluster &&  <Icon className={css.absIcon} name={'cloud_download'} onClick={()=>logsStore.downloadLogs('server')} /> }\n                </div>\n              </MenuItem>\n              {\n                logsStore.isCluster &&\n                <MenuItem key={'sessionpool'} activePath={pathname} path={'logs/sessionpool'} className={css.wfull} icon={'view_module'}>\n                  <div className={css.downloadFlex}>\n                    {t('sessions.sp')}\n                    {!logsStore.isCluster &&  <Icon className={css.absIcon} name={'cloud_download'} onClick={()=>logsStore.downloadLogs('sessionpool')} /> }\n                  </div>\n                </MenuItem>\n              }\n            </>\n            :\n            <MenuItem key={'sessions'} activePath={pathname} path={'sessions'} icon={'apps'}>\n              {t('sessions.all')}\n            </MenuItem>\n          }\n          <div className={css.divider}></div>\n          <Flex className={css.toolRow} spacing={2} bColumn={!globalStore.leftSideMenuOpen}>\n            {\n              (isConfig && permissionsStore.get('create')) && \n              <Dropdown\n                className={css.addAppDropdown}\n                buttons={[\n                  {label: t('apps.createNew'), icon:'add_circle_outline', onClick:()=>showCreateInput()},\n                  {label: t('apps.quickstart'), shouldShow: !globalStore.isCluster,  icon:'flash_on', onClick: () => showQuickstart()},\n                  {\n                    sDisabled: isAppView? t('apps.selectAppFirst') : '', \n                    label: t('apps.duplicateConfig') + (isAppView?'':' '+ globalStore.info?.name), \n                    icon:'content_copy', \n                    onClick:()=>showCreateInput(globalStore.app)\n                  },\n                ]}\n                >\n                  <Button color={globalStore.toggleAddApp?'neutral':'blue'} icon={'add'} />\n              </Dropdown>\n            }\n            <div className={css.appsFilter}>\n              {!globalStore.toggleSearch && <Button color='neutralTrans' icon={'search'} onClick={()=>globalStore.setToggleSearch()} /> } \n              {globalStore.toggleSearch &&\n              <Input\n                classNameInput={css.input}\n                type=\"text\"\n                placeholder={t('general.search')}\n                value={searchTerm}\n                onChange={handleChange}\n                onClose={()=>globalStore.setToggleSearch()}\n                icon={{name:'x', position:'labelRight'}}\n                bAutoFocus\n                // onFocus={()=>globalStore.toggleLeftSideMenu(true)}\n              />}\n            </div>\n          </Flex>\n          {globalStore.toggleAddApp && isConfig && <CreateApp onSubmit={create} onClose={()=>globalStore.setToggleAddApp()} />}\n          <div className={css.scrollable} style={isLogs? {height:'calc(100vh - 324px)'}:{}}>\n            <Scrollbars \n              renderThumbVertical={renderThumb}\n              renderThumbHorizontal={renderThumb}\n            style={{height:'100%', width:'100%'}}>\n              <>\n                {results?.map(item => (\n                  <MenuItem\n                    key={item.path}\n                    activePath={pathname}\n                    path={getAppPaths(item.path!)}\n                    image={item.path}\n                  >\n                    <div className={css.downloadFlex}>\n                      <Flex bColumn>\n                        <span className={css.truncate}>{item.name}</span>\n                        <small className={css.truncate} onClick={()=>history.push(item.url!)} >{item.path}</small>\n                      </Flex>\n                      { isLogs &&  <Icon className={css.absIcon} name={'cloud_download'} onClick={()=>logsStore.downloadSessionLogs(item.path!)} /> }\n                    </div>\n\n                  </MenuItem>\n                ))}\n              </>\n            </Scrollbars>\n          </div>\n        </ul>\n      </div>\n      <div className={css.sideMenuArrow}>\n        <Icon\n          size=\"small\"\n          color=\"white\"\n          className={css.arrowIcon}\n          name=\"keyboard_arrow_left\"\n          onClick={globalStore.toggleLeftSideMenu}\n        />\n      </div>\n    </>\n  )\n})\n","export default \"__VITE_ASSET__25873d39__\"","export default \"__VITE_ASSET__c452a854__\"","// core\nimport React from 'react'\n\n// libraries\nimport { Link } from 'react-router-dom'\n//stores\nimport {useStore} from '@/stores'\n// logo\nimport WebswingLogoWText from '@/assets/images/AdminConsole.svg'\nimport LogoIcon from '@/assets/images/logo_ico.svg'\nimport { observer } from 'mobx-react'\nimport { ApiServerUrl, toPath } from '@/utils'\n\ninterface ILogoProps {\n  withLink?: boolean\n  forceSmall?: boolean\n}\n\nexport const Logo = observer(({ withLink = true, forceSmall = false }: ILogoProps) => {\n  const {globalStore} = useStore()\n  \n  const getLogoPath = (path:string, fallbackPath:string) => {\n    let resultPath = path?path:fallbackPath;\n    return toPath(ApiServerUrl, resultPath)\n  }\n  \n  const getLinkContent = () => {\n    return globalStore.leftSideMenuOpen && !forceSmall ?\n      <img src={getLogoPath(globalStore.customization?.logo!,WebswingLogoWText)} alt=\"logo\" />\n      :\n      <img src={getLogoPath(globalStore.customization?.logoCollapsed!,LogoIcon)} style={{maxWidth: '40px'}} alt=\"logo\" />\n  };\n\n  return (\n    withLink ? <Link to=\"/overview\"> { getLinkContent() } </Link> : getLinkContent()\n  )\n})\n\n","import React from 'react';\nimport css from '../LeftSideMenu.module.scss'\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { useStore } from '@/stores';\n\nconst Footer = observer((props: { center?: boolean }) => {\n  const { globalStore } = useStore()\n  const { t } = useTranslation()\n  return(\n    <>\n    {\n      globalStore.customization?.footerHTML! ? \n      <div className={cx(css.footer, props.center && css.center)} dangerouslySetInnerHTML={{__html:globalStore.customization?.footerHTML!}}></div>\n      :\n      <>\n        {t('general.developed')} <a href=\"https://www.webswing.org\">webswing.org</a><br />\n        <a target='_blank' href='https://www.webswing.org/docs/'>{t('routes.documentation')}</a>, <a target='_blank' href='https://portal.webswing.org/support'>{t('routes.reportbug')}</a>\n        <div className={cx(css.footer, props.center && css.center)} >\n          {(new Date()).getFullYear().toString()} Webswing Ltd. {t('general.allRightReserved')}\n        </div>\n      </>\n    }\n  </>\n)});\n\nexport default Footer;\n","// core\nimport React from 'react'\n// libraries\nimport { useLocation } from 'react-router-dom'\nimport cx from 'classnames'\n// import i18n from '@/i18n'\n\n// components\nimport { Icon, Input, Button } from '@/components'\n\n// partials\nimport { MenuItem } from './MenuItem'\n\n// styles\nimport css from '../LeftSideMenu.module.scss'\n\n// data (will be fetched from somewhere later)\nimport { observer } from 'mobx-react'\nimport { useStore} from '@/stores'\nimport { Flex } from '@/components/containers'\nimport { useTranslation } from 'react-i18next'\n\nexport const OverviewMenu = observer(function AppsMenu() {\n  const { overviewStore, globalStore, permissionsStore } = useStore()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    overviewStore.setSearchTerm(event.target.value);\n  };\n\n  return (\n    <>\n      <div className={css.menuFlex}>\n        <ul className={cx(css.menuItems, css.scrollable)}>\n          {\n            overviewStore.isCluster ?\n            <>\n              <MenuItem activePath={pathname} path={'overview/server-config'} icon={'settings_applications'}>{t('overview.serConf')}</MenuItem>\n              <div className={css.divider}></div>\n              <Flex className={css.toolRow} spacing={2} bColumn={!globalStore.leftSideMenuOpen}>\n                <div className={css.appsFilter}>\n                  {!globalStore.toggleSearch && <Button color='neutralTrans' icon={'search'} onClick={()=>globalStore.setToggleSearch()} /> } \n                  {globalStore.toggleSearch &&\n                  <Input\n                  classNameInput={css.input}\n                  type=\"text\"\n                  placeholder={t('overview.searchServerSp')}\n                  value={overviewStore.searchTerm}\n                  onChange={handleChange}\n                  onClose={()=>globalStore.setToggleSearch()}\n                  icon={{name:'x', position:'labelRight'}}\n                  />}\n                </div>\n              </Flex>\n              <MenuItem activePath={pathname} path={'overview/servers'} icon={'dns'}>{t('overview.server_plural')}</MenuItem>\n              <MenuItem activePath={pathname} path={'overview/sessionpools'} icon={'apps'}>{t('sessions.sp_plural')}</MenuItem>\n              {permissionsStore.get('scaling') && <MenuItem activePath={pathname} path={'overview/scaling'} icon={'trending_up'}>{t('overview.scaling')}</MenuItem>}\n            </>\n            :\n            <>\n              <MenuItem activePath={pathname} path={'overview'} icon={'apps'}>{t('overview.server_stats')}</MenuItem>\n              <MenuItem activePath={pathname} path={'overview/server-config'} icon={'settings_applications'}>{t('overview.serConf')}</MenuItem>\n            </>\n          }\n        </ul>\n      </div>\n      <div className={css.sideMenuArrow}>\n        <Icon\n          size=\"small\"\n          color=\"white\"\n          className={css.arrowIcon}\n          name=\"keyboard_arrow_left\"\n          onClick={globalStore.toggleLeftSideMenu}\n        />\n      </div>\n    </>\n  )\n})\n","// core\nimport React, { useEffect } from 'react'\n\n// libraries\nimport classnames from 'classnames'\nimport { useMediaQuery } from 'react-responsive'\nimport i18n from '@/i18n'\n\n// components\nimport { Menu } from './Partials/Menu'\n// styles\nimport css from './LeftSideMenu.module.scss'\n\n// stores\nimport { useStore } from '@/stores'\n\nimport { observer } from 'mobx-react'\nimport { Logo } from '../Header/partials/Logo'\nimport Footer from './Partials/Footer'\nimport { useLocation } from 'react-router-dom'\nimport { OverviewMenu } from './Partials/OverviewMenu'\n\n\nexport const LeftSideMenu = observer(function LeftSideMenu() {\n  const { globalStore } = useStore()\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n  useEffect(()=>{\n    if(isTabletOrMobile) {\n      globalStore.toggleLeftSideMenu(false)\n    } else {\n      globalStore.toggleLeftSideMenu(true)\n    }\n  },[isTabletOrMobile])\n  const {pathname} = useLocation()\n  const isOverview = pathname.includes('overview') || pathname === '/'\n  return (\n    <>\n      <aside className={classnames(css.root, { [css.collapsed]: !globalStore.leftSideMenuOpen })}>\n        <div className={css.logo}>\n          <Logo />\n        </div>\n        {\n          isOverview ? <OverviewMenu /> : <Menu />\n        }\n        <div className={css.developed}>\n          <Footer />\n        </div>\n      </aside>\n    </>\n  )\n})\n","import { showToastOk } from '@/components';\nimport { basicApi, manageSessionsApi, getAuthenticationHeaders, handleRestError } from '@/utils';\nimport {AccessService} from './AccessHandlerService';\nimport i18n from '@/i18n';\n\nclass SessionsRestService {\n\n  private static _instance:SessionsRestService = new SessionsRestService();\n  \n  constructor() {\n    if(SessionsRestService._instance){\n      throw new Error(\"Error: Instantiation failed: Use SessionsRestService.getInstance() instead of new.\");\n    }\n    SessionsRestService._instance = this;\n  }\n  \n  static getInstance():SessionsRestService\n  {\n    return SessionsRestService._instance;\n  }\n\n  async getAccessToken() {\n    return await AccessService.getAccessToken();\n  }\n\n  async getSessions(path: string) {\n    try {\n        const appApi = basicApi(getAuthenticationHeaders(await this.getAccessToken()), path);\n        return await appApi.getSessions();\n    } catch (e) {\n      handleRestError(i18n.t('error.loadSessions'),e)\n    }\n  }\n\n  async getRecordings(path: string, sessionId?: string) {\n    try {\n        const appApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n        return await appApi.listRecordings({instanceId: sessionId != null ? sessionId : undefined});\n    } catch (e) {\n      handleRestError(i18n.t('error.loadRecordings'),e)\n    }\n  }\n\n  async getThreadDumps(path: string, sessionId?: string) {\n    try {\n        const appApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n        return await appApi.listThreadDumps({instanceId: sessionId != null ? sessionId : undefined});\n    } catch (e) {\n      handleRestError(i18n.t('error.loadThreadDumps'),e)\n    }\n  }\n\n  async getStats(path: string) {\n    try {\n        const appApi = basicApi(getAuthenticationHeaders(await this.getAccessToken()), path);\n        return await appApi.getStats();\n    } catch (e) {\n      handleRestError(i18n.t('error.loadStats'),e)\n    }\n  }\n\n  async getSession(path: string, id: string) {\n    try {\n      const SessionsApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      return await SessionsApi.getSession({id})\n    } catch (e) {\n      handleRestError(i18n.t('error.loadSession',{id:id}),e)\n    }\n  }\n\n  async startRecording(path: string, id: string) {\n    try {\n      const SessionsApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      const data = await SessionsApi.startRecording({id})\n      if(data) {\n        showToastOk(i18n.t('ok.recordingStarted'))\n      }\n      return data\n    } catch (e) {\n      handleRestError(i18n.t('error.startRecording'),e)\n    }\n  }\n\n  async stopRecording(path: string, id: string) {\n    try {\n      const SessionsApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      const data = await SessionsApi.stopRecording({id})\n      if(data) {\n        showToastOk(i18n.t('ok.recordingStopped'))\n      }\n      return data\n    } catch (e) {\n      handleRestError(i18n.t('error.couldNotStopRecording'),e)\n    }\n  }\n\n  async forceKillSession(path: string, id: string) {\n    try {\n      const SessionsApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      SessionsApi.shutdown({id, force:'true'});\n      showToastOk(i18n.t('ok.appForceTerminated'))\n      } catch (e) {\n      handleRestError(i18n.t('error.swingAppShutdownFailed'),e)\n    }\n  }\n\n  async killSession(path: string, id: string) {\n    try {\n      const SessionsApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      SessionsApi.shutdown({id});\n      showToastOk(i18n.t('Application signalled to exit.'))\n    } catch (e) {\n      handleRestError(i18n.t('error.couldNotKillSwingApp'),e)\n    }\n  }\n\n  async requestThreadDump(path: string, instanceId: string) {\n    try {\n      const SessionsApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n      SessionsApi.requestThreadDump({instanceId});\n      showToastOk(\n        i18n.t(\"ok.threadDumpreqWarningDialog\")\n      );\n    } catch (e) {\n      handleRestError(i18n.t('error.threadDumpFailed'),e)\n    }\n  }\n  \n  async toggleStatisticsLogging(path: string, instanceId: string, enabled: boolean) {\n\t  try {\n\t\t  const SessionsApi = manageSessionsApi(path, getAuthenticationHeaders(await this.getAccessToken()));\n\t\t  await SessionsApi.toggleStatisticsLogging({instanceId, enabled});\n      showToastOk(\n        `${i18n.t('ok.statisticLogs')} ${enabled?i18n.t('general.enabled'):i18n.t('general.disabled')}.`\n      );\n\t  } catch (e) {\n      handleRestError(i18n.t('error.couldNotToggleStatisticLogs'),e)\n\t  }\n  }\n  \n}\n\nexport const SessionsService = SessionsRestService.getInstance();","import { getAuthenticationHeaders, handleRestError, scalingApi } from '@/utils';\nimport { AccessService } from './AccessHandlerService';\nimport i18n from '@/i18n';\nimport { GetScalingStatsStatTypeEnum, MetaObject, ResolveScalingTypeEnum, SearchScalingVariablesTypeEnum } from '../gen';\n\nclass ScalingRestService {\n\n  private static _instance: ScalingRestService = new ScalingRestService();\n  public serverUrl: string | undefined;\n\n  constructor() {\n    if (ScalingRestService._instance) {\n      throw new Error(\"Error: Instantiation failed: Use ScalingRestService.getInstance() instead of new.\");\n    }\n    ScalingRestService._instance = this;\n  }\n\n  static getInstance(): ScalingRestService {\n    return ScalingRestService._instance;\n  }\n\n  async getAccessToken() {\n    return await AccessService.getAccessToken();\n  }\n\n  async getConfig() {\n    try {\n      const appApi = scalingApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.getScalingConfig();\n    } catch (e) {\n      handleRestError(i18n.t('error.getConfig'), e)\n    }\n  }\n\n  async setConfig(config: MetaObject) {\n    try {\n      const appApi = scalingApi(getAuthenticationHeaders(await this.getAccessToken()));\n      await appApi.saveScalingConfig({ metaObject: config });\n    } catch (e) {\n      handleRestError(i18n.t('error.setConfig'), e)\n    }\n  }\n\n  async getVariables(type: SearchScalingVariablesTypeEnum, searchSequence: string) {\n    try {\n      const appApi = scalingApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.searchScalingVariables({ type, search: searchSequence });\n    } catch (e) {\n      handleRestError(i18n.t('error.getVar'), e)\n    }\n  }\n\n  async resolveVariable(type: ResolveScalingTypeEnum, searchSequence: string) {\n    try {\n      const appApi = scalingApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.resolveScaling({ type, resolve: searchSequence });\n    } catch (e) {\n      handleRestError(i18n.t('error.resolve'), e)\n    }\n  }\n\n  async getMeta(config: MetaObject) {\n    try {\n      const appApi = scalingApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.getScalingMeta({ metaObject: config });\n    } catch (e) {\n      handleRestError(i18n.t('error.getMeta'), e)\n    }\n  }\n\n  async getScalingStats(statType: GetScalingStatsStatTypeEnum) {\n    try {\n      const appApi = scalingApi(getAuthenticationHeaders(await this.getAccessToken()));\n      return await appApi.getScalingStats({ statType });\n    } catch (e) {\n      handleRestError(i18n.t('error.getScalingStats'), e)\n    }\n  }\n\n}\n\nexport const ScalingService = ScalingRestService.getInstance();","import { showToastErr } from './../components/basic/Toast/Toast';\nimport { AccessService } from '@/services';\nimport {\n  Configuration,\n  BasicApi,\n  ManageConfigurationApi,\n  ManageSessionsApi,\n  ManageApplicationsApi,\n  ViewLogsApi,\n  OverviewApi,\n  LoginApi,\n  HTTPHeaders,\n  ManageScalingApi,\n  QuickStartApi,\n} from \"../gen\";\n\nimport { toPath } from '.'\nimport { store } from '@/stores';\n\nexport let ApiServerUrl = \"\";\nexport let ApiContextPath = \"/\";\n\ntype HTTPCodes =\n  | 0 //   HTTP request failed - `catch` was reached\n  | 200 // ok\n  | 201 // created\n  | 204 // no_content\n  | 400 // bad_request\n  | 401 // unauthorized\n  | 402 // payment_required\n  | 403 // forbidden\n  | 404 // not_found\n  | 408 // request_timeout\n  | 409 // conflict\n  | 422 // conflict\n  | 500 // internal_server_error\n  | 502 // bad_gateway\n  | 503 // service_unavailable\n\n\nexport async function initBaseLocation(): Promise<void> {\n  let origin = window.location.origin;\n  if (!origin) {\n    origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n  }\n\n  origin = origin.indexOf(\"/\", origin.length - 1) !== -1 ? origin.substring(0, origin.length - 1) : origin;\n  \n  let contextPath = window.location.pathname;\n  contextPath = contextPath.indexOf(\"/\", contextPath.length - 1) !== -1 ? contextPath.substring(0, contextPath.length - 1) : contextPath;\n  \n  ApiServerUrl = origin + contextPath;\n  ApiContextPath = contextPath + \"/\";\n}\n\nexport const basicApi = (headers: HTTPHeaders, path?: string) => {\n  const req = new BasicApi(new Configuration({\n    basePath: toPath(ApiServerUrl, path!),\n    credentials: \"include\", headers\n  }));\n  return req;\n}\n\nexport const manageConfigurationApi = (path: string, headers: HTTPHeaders) => {\n  const req = new ManageConfigurationApi(new Configuration({\n    basePath: toPath(ApiServerUrl, path),\n    credentials: \"include\", headers\n  }))\n  return req;\n}\n\nexport const manageApplicationsApi = (headers: HTTPHeaders, path?: string) => {\n  const req = new ManageApplicationsApi(new Configuration({\n    basePath: toPath(ApiServerUrl, path!),\n    credentials: \"include\", headers\n  }))\n  return req;\n}\n\nexport const manageSessionsApi = (path: string, headers: HTTPHeaders) => {\n  const req = new ManageSessionsApi(new Configuration({\n    basePath: toPath(ApiServerUrl, path),\n    credentials: \"include\", headers\n  }))\n  return req;\n}\n\nexport const viewLogsApi = (headers: HTTPHeaders) => {\n  const req = new ViewLogsApi(new Configuration({ basePath: ApiServerUrl, credentials: \"include\", headers }))\n  return req;\n}\n\nexport const loginApi = (headers: HTTPHeaders) => {\n  const req = new LoginApi(new Configuration({ basePath: ApiServerUrl, credentials: \"include\", headers }))\n  return req;\n}\n\nexport const overviewApi = (headers: HTTPHeaders) => {\n  const req = new OverviewApi(new Configuration({ basePath: ApiServerUrl, credentials: \"include\", headers }))\n  return req;\n}\n\nexport const scalingApi = (headers: HTTPHeaders) => {\n  const req = new ManageScalingApi(new Configuration({ basePath: ApiServerUrl, credentials: \"include\", headers }))\n  return req;\n}\n\nexport const quickStartApi = (headers: HTTPHeaders) => {\n  const req = new QuickStartApi(new Configuration({ basePath: ApiServerUrl, credentials: \"include\", headers }))\n  return req;\n}\n\nexport function getAuthenticationHeaders(accessToken: string): HTTPHeaders {\n  const headers: any = {};\n\n  headers[\"X-webswing-securitySuffix\"] = getSecuritySuffix();\n  \n  if (accessToken && accessToken !== null && accessToken.length) {\n    headers[\"Authorization\"] = \"Bearer \" + accessToken;\n  }\n  \n  return headers;\n}\n\nexport function getSecuritySuffix() {\n  if (!window.name || window.name.substr(0, 4) !== 'tid_') {\n      window.name = 'tid_' + GUID();\n  }\n\n  if (window.name.startsWith(\"tid_u_\")) {\n      return window.name.split(\"-\")[2];\n  }\n\n  return window.name;\n}\n\nfunction GUID() {\n  const S4 = () => {\n      return Math.floor(Math.random() * 0x10000).toString(16);\n  };\n  return (S4() + S4() + S4());\n}\n\nexport function handleRestError(operation: string, data: any) {\n  switch (data.status as HTTPCodes) {\n    // Action failed - something went wrong\n    case 400:\n    case 401:\n    case 403:\n      console.error(operation, data)\n      showToastErr(operation)\n      if (!store.permissionsStore.isLoggedIn()) {\n        AccessService.displayLogin();\n      } else {\n        store.globalStore.toggleErrorView(true);\n      }\n      break;\n    case 404:\n    case 408:\n    case 409:\n    case 422:\n      console.error(operation, data)\n      showToastErr(operation)\n      break;\n    // Error occured on the server side\n    case 500:\n    case 502:\n    case 503:\n      console.error(operation, data)\n      showToastErr(operation)\n      store.globalStore.toggleErrorView(true,{header:operation});\n      break;\n    default:\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { ApiServerUrl } from '@/utils';\n\nexport const i18next = () => i18n\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n      fallbackLng: 'en-US',\n      debug: false,\n      backend: {\n        loadPath: `${ApiServerUrl}/locales/{{lng}}/{{ns}}.json`,\n      },\n      interpolation: {\n        escapeValue: false, // not needed for react as it escapes by default\n      },\n      react: { \n        useSuspense: false //   <---- this will do the magic\n      }\n    });\n\n\n\nexport default i18n\n/* This function is useful to load spanish or english language translations and set the corresponding locale */","import React from 'react';\nimport { AreaChart as Chart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport css from './Charts.module.scss'\nimport {useStore} from '@/stores';\nimport { observer } from 'mobx-react';\nimport { Flex, Heading } from '@/components';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '@/i18n';\n\nexport const Charts = observer(() => {\n    const {sessionsStore} = useStore();\n    const {t} = useTranslation();\n    const tooltipStyle = { \n        fontSize: \"12px\",\n        lineHeight: 'normal'\n    }\n    const dateOptions = {\n        hour12: true,\n        hour: 'numeric',\n        minute: '2-digit',\n      };\nconst timeTick = (value:any) => {\n   return value.toLocaleString('en-US', dateOptions); \n}\nreturn (\n    <div className={css.root}>\n        <Flex itemsPerRow={2}>\n            <Flex bColumn className={css.lineChart}>\n                <Heading className={css.charsHeading} variant=\"h3\" title={t('sessions.memory')} />\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <Chart\n                    className={css.chart}\n                    syncId={\"session-chart\"}\n                    data={sessionsStore.getMemoryStats.dataset}\n                    margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                    }}\n                >\n                    <defs>\n                        <linearGradient id=\"colorMemoryAllocated\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorMemoryUsed\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                    <XAxis className={css.axisFont} dataKey=\"x\" tickFormatter={timeTick} minTickGap={30} />\n                    <YAxis className={css.axisFont} tickFormatter={sessionsStore.getMemoryStats.tickFormat} />\n                    <Tooltip\n                        wrapperStyle={tooltipStyle}\n                        labelFormatter={LabelFormat}\n                    />\n                    <Area type=\"monotone\" dataKey=\"memoryUsed\" stackId=\"1\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorMemoryUsed)\" />\n                    <Area type=\"monotone\" dataKey=\"memoryAllocated\" stackId=\"2\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorMemoryAllocated)\" />\n                </Chart>\n                </ResponsiveContainer>\n            </Flex>\n            <Flex bColumn className={css.lineChart}>\n                <Heading className={css.charsHeading} variant=\"h3\" title={t('sessions.cpu')} />\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <Chart\n                        syncId={\"session-chart\"}\n                        className={css.chart}\n                        data={sessionsStore.getCpuStats.dataset}\n                        margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                        }}\n                    >\n                        <defs>\n                            <linearGradient id=\"colorCpuUtilization\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"5%\" stopColor=\"#ffc658\" stopOpacity={0.8}/>\n                                <stop offset=\"95%\" stopColor=\"#ffc658\" stopOpacity={0}/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                        <XAxis dataKey=\"x\" tickFormatter={timeTick} />\n                        <YAxis tickFormatter={sessionsStore.getCpuStats.tickFormat} />\n                        <Tooltip\n                            wrapperStyle={tooltipStyle}\n                            labelFormatter={LabelFormat}\n                        />\n                        <Area type=\"monotone\" dataKey=\"cpuUtilization\" stackId=\"1\" stroke=\"#ffc658\" fillOpacity={1} fill=\"url(#colorCpuUtilization)\"  />\n                    </Chart>\n                </ResponsiveContainer>\n            </Flex>\n            <Flex bColumn className={css.lineChart}>\n                <Heading className={css.charsHeading} variant=\"h3\" title={t('sessions.bandwidth')} />\n                <ResponsiveContainer width=\"95%\" height=\"100%\">\n                    <Chart\n                        syncId={\"session-chart\"}\n                        className={css.chart}\n                        data={sessionsStore.getBandwidthStats.dataset}\n                        margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                        }}\n                    >\n                        <defs>\n                            <linearGradient id=\"colorInboundSize\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"5%\" stopColor=\"#F5444A\" stopOpacity={0.8}/>\n                                <stop offset=\"95%\" stopColor=\"#F5444A\" stopOpacity={0}/>\n                            </linearGradient>\n                            <linearGradient id=\"colorOutboundSize\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"5%\" stopColor=\"#ffc658\" stopOpacity={0.8}/>\n                                <stop offset=\"95%\" stopColor=\"#ffc658\" stopOpacity={0}/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                        <XAxis dataKey=\"x\" tickFormatter={timeTick} />\n                        <YAxis tickFormatter={sessionsStore.getBandwidthStats.tickFormat} />\n                        <Tooltip\n                            wrapperStyle={tooltipStyle}\n                            labelFormatter={LabelFormat}\n                        />\n                        <Area type=\"monotone\" dataKey=\"inboundSize\" stackId=\"1\" stroke=\"#F5444A\" fillOpacity={1} fill=\"url(#colorInboundSize)\" />\n                        <Area type=\"monotone\" dataKey=\"outboundSize\" stackId=\"2\" stroke=\"#ffc658\" fillOpacity={1} fill=\"url(#colorOutboundSize)\" />\n                    </Chart>\n                </ResponsiveContainer>\n            </Flex>\n            <Flex bColumn className={css.lineChart}>\n                <Heading className={css.charsHeading} variant=\"h3\" title={t('sessions.latency')} />\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <Chart\n                        syncId={\"session-chart\"}\n                        className={css.chart}\n                        data={sessionsStore.getLatencyStats.dataset}\n                        margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                        }}\n                    >\n                        <defs>\n                            <linearGradient id=\"colorlatencyNetworkTransfer\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                                <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                            </linearGradient>\n                            <linearGradient id=\"colorlatencyServerRendering\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                                <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                            </linearGradient>\n                            <linearGradient id=\"colorlatencyClientRendering\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"5%\" stopColor=\"#F5444A\" stopOpacity={0.8}/>\n                                <stop offset=\"95%\" stopColor=\"#F5444A\" stopOpacity={0}/>\n                            </linearGradient>\n                            <linearGradient id=\"colorlatencyPing\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"5%\" stopColor=\"#ffc658\" stopOpacity={0.8}/>\n                                <stop offset=\"95%\" stopColor=\"#ffc658\" stopOpacity={0}/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                        <XAxis dataKey=\"x\" tickFormatter={timeTick} />\n                        <YAxis tickFormatter={sessionsStore.getLatencyStats.tickFormat} />\n                        <Tooltip\n                            wrapperStyle={tooltipStyle}\n                            labelFormatter={LabelFormat}\n                        />\n                        <Area isAnimationActive={false} type=\"monotone\" label={t('sessions.latencyNetTransfer')} dataKey=\"latencyNetworkTransfer\" stackId=\"1\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorlatencyNetworkTransfer)\" />\n                        <Area isAnimationActive={false} type=\"monotone\" dataKey=\"latencyServerRendering\" stackId=\"2\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorlatencyServerRendering)\" />\n                        <Area isAnimationActive={false} type=\"monotone\" dataKey=\"latencyClientRendering\" stackId=\"3\" stroke=\"#F5444A\" fillOpacity={1} fill=\"url(#colorlatencyClientRendering)\" />\n                        <Area isAnimationActive={false} type=\"monotone\" dataKey=\"latencyPing\" stackId=\"4\" stroke=\"#ffc658\" fillOpacity={1} fill=\"url(#colorlatencyPing)\" />\n                    </Chart>\n                </ResponsiveContainer>\n            </Flex>\n        </Flex>\n    </div>\n    )\n})\n\nconst LabelFormat = (value:any) => {\n    return (`${i18n.t('sessions.time')}: ${value.toLocaleString('en-US')}`);\n}","import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport cx from 'classnames';\nimport { IColumns, Status, TableVirtualized, List, Heading, Tooltip } from \"@/components\";\nimport { useStore } from \"@/stores\";\nimport { ILogsEntry, useRootOverflow } from \"@/utils\";\nimport css from '../Logs.module.scss'\nimport cssTable from '../../../components/complex/Table/Table.module.scss'\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { HighlightedText } from \"./HighlightedText\";\n\nconst TooltipElipsesItem = ({str, bNoHightlight=false}:{str?:string, bNoHightlight?: boolean}) => (\n    <Tooltip content={str}>\n        <span className={cx(cssTable.wCell, css.elips)}>\n            {bNoHightlight? str : <HighlightedText text={str} />}\n        </span>\n    </Tooltip>\n)\ninterface ILogsTableProps {\n    type: 'audit' | 'server' | 'admin' | 'session' | 'scaling';\n    app: string;\n    id?:string;\n    className?:string;\n}\n\nexport const LogsTable = observer(({type, app, id, className}:ILogsTableProps) => {\n    const { logsStore } = useStore();\n    const { pathname } = useLocation();\n    const { t } = useTranslation();\n    const [columns, setColumns] = useState<IColumns<ILogsEntry>[]>([])\n    const auditColumns: IColumns<ILogsEntry>[] = [\n        {\n            label:t('logs.timestamp'),\n            dataKey:'timestamp',\n            minWidth: 202,\n            align: 'start',\n            component: (timestamp) => <div className={cx(cssTable.wCell, css.statusAlign)}><HighlightedText text={timestamp as string} /></div>\n        },\n        {\n            label:t('logs.subject'),\n            dataKey:'subject',\n            minWidth: 100,\n            align: 'start',\n            bSort: true\n        },\n        {\n            label:t('logs.value'),\n            dataKey:'value',\n            minWidth: 100,\n            align: 'start',\n            bSort: true\n        },\n        {\n            label:t('logs.user'),\n            dataKey:'user',\n            minWidth: 100,\n            align: 'start',\n            bSort: true,\n            component: (user) => <TooltipElipsesItem str={user} />\n        },\n        {\n            label:t('logs.secPath'),\n            dataKey:'secured_path',\n            minWidth: 150,\n            align: 'start',\n            bSort: true,\n        },\n        {\n            label:t('logs.sourceIP'),\n            dataKey:'ip',\n            minWidth: 100,\n            align: 'start',\n        },\n        {\n            label:t('logs.detail'),\n            dataKey:'detail',\n            minWidth: 150,\n            align: 'start',\n            bSort: true,\n            component: (detail) => <TooltipElipsesItem str={detail} />\n        }\n    ];\n\n    useRootOverflow();\n\n    useEffect(() => {\n        if(type === 'session' && !pathname.includes('logs')) {\n            logsStore.setType(type)\n            if(id) {\n                logsStore.loadLogsOverview(app).then(()=> {\n                    logsStore.setInstanceId(id)\n                    logsStore.loadSessionLogs(app,id)\n                });\n            }\n        } else if (type === 'scaling') {\n            logsStore.setType(type);\n            logsStore.setInstanceId('');\n        } else {\n            logsStore.setInstanceId('')\n        }\n        setColumns([...auditColumns]);\n        return () => logsStore.clearInterval();\n    },[type, id, app]);\n\n    const filter = () => {\n        let result;\n        if(logsStore.searchTerm.length <= 1) {\n            return logsStore.logs\n        }\n\n        if(type === 'audit') {\n            result = logsStore.logs?.filter(item =>\n                item.timestamp?.toLowerCase().includes(logsStore.searchTermLowerCase) ||\n                item.user?.toLowerCase().includes(logsStore.searchTermLowerCase) ||\n                item.detail?.toLowerCase().includes(logsStore.searchTermLowerCase) ||\n                item.value?.toLowerCase().includes(logsStore.searchTermLowerCase) ||\n                item.subject?.toLowerCase().includes(logsStore.searchTermLowerCase)\n            )\n             \n        } else {\n            result = logsStore.logs?.filter(item =>\n                item.msgs?.toLowerCase().includes(logsStore.searchTermLowerCase)\n            )\n        }\n\n        return result;\n    }\n    const results = filter();\n\n    return (\n        <>\n            <div key={logsStore.random}>\n                {\n                    type === 'audit'? \n                    <TableVirtualized\n                        // onSort={sortTable}\n                        collection={results || []}\n                        minTableWidth={1700}\n                        // bLoading={logsStore.loading}\n                        rowHeight={60}\n                        columns={columns} \n                        bscrollToBottom\n                        rowClassName={css.logsRow}\n                        className={cx(className, css.vTable)}\n                    />\n                    :\n                    <>\n                        {/* {\n                            (results && results.length > 0) &&\n                            <Heading className={css.listHeading} variant='h3' title={t('logs.msgs')} />\n                        } */}\n                        <List\n                            bstaticHeight={!logsStore.compact}\n                            minListWidth={3000}\n                            rowHeight={60}\n                            bscrollToBottom\n                            bVirtualized\n                            collection={results}\n                            rowClass={css.warningLine} \n                            item={(item: any)=><div className={css.logItem} style={{fontSize:(logsStore.fontSize||1)+'rem'}}><HighlightedText text={item?.msgs} /></div>} \n                            className={className}\n                            noData={{className:css.cardNoData}}\n                            searched={logsStore.searchTermLowerCase}\n                        />\n                    </>\n                }\n            </div>\n        </>\n    )\n})","import React from 'react';\nimport css from '../SessionView.module.scss'\nimport { Card, List } from '@/components';\nimport { dateFormat, parseObject, toPath } from '@/utils';\nimport { SwingSession } from '@/gen';\nimport { useTranslation } from 'react-i18next';\nimport { useStore } from '@/stores';\nimport { ThreadDumpInfo } from '@/gen/models/ThreadDumpInfo';\n\ninterface IWarningsProps {\n    session: SwingSession\n}\n\nexport const Warnings = ({session}:IWarningsProps) => {\n    const {t} = useTranslation();\n    const {globalStore, permissionsStore} = useStore();\n\n    const showThreadDump = (item: ThreadDumpInfo) => {\n\t\treturn toPath(globalStore.serverUrl!, session.applicationPath!) + \"/rest/threadDump/\" + item.token \n            + \"/\" + encodeURIComponent(item.sessionPoolId!) + \"/\" + false + \"/\" + encodeURIComponent(item.fileName!);\n    }\n    const tdCollection = () => {\n        if(parseObject(session.threadDumps!).isEmpty()) {\n            return []\n        }\n        return Object.entries(session.threadDumps!).map((e) => ( { key:e[0], value:e[1] } ));\n    }\n\n    return (\n        <div className={css.Warnings}>\n            {\n                (session.warnings && session.warnings.length > 0) &&\n                <Card title={t('sessions.warningMsg')}>\n                    <List \n                        rowHeight={60} \n                        collection={session.warnings!.map((s)=>({s:s}))} \n                        rowClass={css.warningLine} \n                        item={(item)=><div className={css.warningsListItem}>{item?.s}</div>} \n                    />\n                </Card>\n            }\n            {\n                (session.warningHistory && session.warningHistory.length > 0) &&\n                <Card title={t('sessions.historyWarnMsgs')}>\n                    <List \n                        rowHeight={60} \n                        collection={session.warningHistory!.map((s)=>({s:s}))} \n                        rowClass={css.warningLine} \n                        item={(item)=><div className={css.warningsListItem}>{item?.s}</div>} \n                    />\n                </Card>\n            }\n            { \n                (!parseObject(session.threadDumps!).isEmpty() && permissionsStore.get('getThreadDump')) &&\n                <Card title={t('sessions.threadDumps')} >\n                    <List \n                        rowHeight={60} \n                        collection={tdCollection()} \n                        rowClass={css.warningLine} \n                        item={\n                            (item:any) => <div className={css.warningsListItem}>\n                            {item && <a target='_blank' href={showThreadDump(item.value)}>{dateFormat(Number(item?.value.timestamp))} - {item?.value.reason}</a>}\n                            </div>\n                        }\n                    />\n                </Card>\n            }\n        </div>\n    )\n}","import { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Button, IColumns, TableVirtualized, Tooltip } from \"@/components\";\nimport { useStore } from \"@/stores\";\nimport { RecordingInfo } from \"@/gen\";\nimport { dateFormat, humanFileSize, toPath, useRootOverflow } from \"@/utils\";\nimport css from '../Sessions.module.scss'\nimport cx from 'classnames';\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface IRecordingsTableProps {\n    app: string;\n    sessionId?: string;\n}\n\nexport const RecordingsTable = observer(({app, sessionId}: IRecordingsTableProps) => {\n    const { sessionsStore, globalStore } = useStore();\n    const {t} = useTranslation();\n    const history = useHistory();\n    const [cols, setCols] = useState<IColumns<RecordingInfo>[]>([\n        {\n            dataKey: 'fileName',\n            label: t('recordings.fileName'),\n            minWidth: 350,\n            align: 'start',\n            bSort:true,\n            className: cx(css.defaultCell, css.gridAppCell),\n            component: (fileName, rowItem) => \n                <div className={css.appCell}>\n                    <Tooltip content={fileName}>\n                        <div className={css.appCellLinks}>\n                            <span onClick={() => sessionsStore.showPlayback(app, rowItem)}>\n                                {fileName}\n                            </span>\n                        </div>\n                    </Tooltip>\n                </div>\n        },\n        {\n            dataKey: 'instanceId',\n            label: t('recordings.instanceId'),\n            minWidth: 350,\n            align: 'start',\n            bSort:true,\n            className: cx(css.defaultCell, css.gridAppCell),\n            component: (instanceId) => \n                <div className={css.appCell}>\n                    {\n                        sessionsStore.canShowSessionDetail(instanceId as string) ?\n                        <div className={css.appCellLinks}>\n                            <Tooltip content={instanceId}>\n                                <span onClick={() => viewSession(instanceId as string)}>\n                                    {instanceId}\n                                </span>\n                            </Tooltip>\n                        </div>\n                        :\n                        <Tooltip content={instanceId}>\n                            <span>\n                                {instanceId}\n                            </span>\n                        </Tooltip>\n                    }\n                </div>\n        },\n        {\n            dataKey: 'startDate',\n            label: t('recordings.startDate'),\n            minWidth: 100,\n            align: 'start',\n            bSort:true,\n            component: (startedAt) => <div className={css.Cell}>{dateFormat(Number(startedAt))}</div>\n        },\n        {\n            dataKey: 'size',\n            label: t('recordings.size'),\n            minWidth: 100,\n            align: 'start',\n            bSort:true,\n            component: (size) => <div className={css.Cell}>{humanFileSize(Number(size))}</div>\n        },\n        {\n            dataKey: 'token',\n            label: '',\n            minWidth: 100,\n            width: 100,\n            align: 'end',\n            component: (_token, rowData) => <Button icon={'cloud_download'} onClick={() => downloadRecording(rowData)} />\n        },\n    ])\n    \n    const downloadRecording = (item: RecordingInfo) => {\n        let url = toPath(globalStore.serverUrl!, app) + \"/rest/recording/\" + item.token + \"/\" + encodeURIComponent(item.sessionPoolId!) \n            + \"/\" + true + \"/\" + encodeURIComponent(item.fileName!);\n        window.open(url, \"_blank\");\n    };\n    const viewSession = (id: string) => {\n        history.push('/sessions/' + app +'/'+ id, {previous:history.location.pathname})\n        sessionsStore.setActiveTab('view');\n    }\n\n    useEffect(()=>{\n        sessionsStore.loadRecordings(app,sessionId)\n    },[])\n\n    useEffect(()=>{\n        if (sessionId) {\n            setCols((c)=>c.filter(col => col.dataKey !== 'instanceId'))\n        }\n    },[sessionId])\n\n    useRootOverflow();\n\n    return (\n        <div>\n            {\n                <div style={{overflowX: 'auto'}}>\n                    <TableVirtualized\n                        collection={sessionsStore.filteredRecordings}\n                        minTableWidth={1055}\n                        rowHeight={60}\n                        rowClassName={css.ac}\n                        threshold={500}\n                        columns={cols}\n                        className={cx(css.tableHeight, css.vTable)}\n                        sortBy='startDate'\n                        sortDirection='DESC'\n                        />\n                </div>\n            }\n            {\n                (sessionsStore.fRecCount >= 100) &&\n                <div className={css.bottomNote}>{t('recordings.maxItems')}</div>\n            }\n        </div>\n    )\n})\n","import { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Button, IColumns, TableVirtualized, Tooltip } from \"@/components\";\nimport { useStore } from \"@/stores\";\nimport { ThreadDumpInfo } from \"@/gen\";\nimport { dateFormat, humanFileSize, toPath, useRootOverflow } from \"@/utils\";\nimport css from '../Sessions.module.scss'\nimport cx from 'classnames';\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface IThreadDumpsTableProps {\n    app: string;\n    sessionId?: string;\n}\n\nexport const ThreadDumpsTable = observer(({app, sessionId}: IThreadDumpsTableProps) => {\n    const { sessionsStore, globalStore } = useStore();\n    const history = useHistory();\n    const {t} = useTranslation();\n    const [cols, setCols] = useState<IColumns<ThreadDumpInfo>[]>([\n        {\n            dataKey: 'fileName',\n            label: t('threadDumps.fileName'),\n            minWidth: 350,\n            align: 'start',\n            bSort:true,\n            className: cx(css.defaultCell, css.gridAppCell),\n            component: (fileName, rowData) => \n                <div className={css.appCell}>\n                    <Tooltip content={fileName}>\n                        <div className={css.appCellLinks}>\n                            <span onClick={() => viewThreadDump(rowData, false)}>\n                                {fileName}\n                            </span>\n                        </div>\n                    </Tooltip>\n                </div>\n        },\n        {\n            dataKey: 'instanceId',\n            label: t('threadDumps.instanceId'),\n            minWidth: 350,\n            align: 'start',\n            bSort:true,\n            className: cx(css.defaultCell, css.gridAppCell),\n            component: (instanceId) =>\n                <div className={css.appCell}>\n                    {\n                        sessionsStore.canShowSessionDetail(instanceId as string) ?\n                        <div className={css.appCellLinks}>\n                            <Tooltip content={instanceId}>\n                                <span onClick={() => viewSession(instanceId as string)}>\n                                    {instanceId}\n                                </span>\n                            </Tooltip>\n                        </div>\n                        :\n                        <Tooltip content={instanceId}>\n                            <span>\n                                {instanceId}\n                            </span>\n                        </Tooltip>\n                    }\n                </div>\n        },\n        {\n            dataKey: 'reason',\n            label: t('threadDumps.reason'),\n            minWidth: 350,\n            align: 'start',\n            bSort:true,\n            className: css.defaultCell,\n            component: (reason) => \n                <div className={css.Cell}>\n                    <Tooltip content={reason}>\n                        <span>\n                            {reason}\n                        </span>\n                    </Tooltip>\n                </div>\n        },\n        {\n            dataKey: 'timestamp',\n            label: t('threadDumps.timestamp'),\n            minWidth: 100,\n            align: 'start',\n            bSort:true,\n            component: (timestamp) => <div className={css.Cell}>{dateFormat(Number(timestamp))}</div>\n        },\n        {\n            dataKey: 'size',\n            label: t('threadDumps.size'),\n            minWidth: 100,\n            align: 'start',\n            bSort:true,\n            component: (size) => <div className={css.Cell}>{humanFileSize(Number(size))}</div>\n        },\n        {\n            dataKey: 'token',\n            label: '',\n            minWidth: 100,\n            width: 100,\n            align: 'end',\n            component: (_token, rowData) => <Button icon={'cloud_download'} onClick={() => viewThreadDump(rowData, true)} />\n        },\n    ])\n    \n    const viewThreadDump = (item: ThreadDumpInfo, download: boolean) => {\n        let url = toPath(globalStore.serverUrl!, app) + \"/rest/threadDump/\" + item.token + \"/\" + encodeURIComponent(item.sessionPoolId!) + \"/\" \n            + download + \"/\" + encodeURIComponent(item.fileName!);\n        window.open(url, \"_blank\");\n    }\n\n    const viewSession = (id: string) => {\n        history.push('/sessions/' + app +'/'+ id,{previous:history.location.pathname})\n        sessionsStore.setActiveTab('view');\n    }\n\n    useEffect(()=>{\n        sessionsStore.loadTDs(app,sessionId)\n    },[])\n\n    useEffect(()=>{\n        if (sessionId) {\n            setCols((c)=>c.filter(col => col.dataKey !== 'instanceId'))\n        }\n    },[sessionId])\n\n    useRootOverflow();\n\n\n    return (\n        <div>\n            {\n                <div style={{overflowX: 'auto'}}>\n                    <TableVirtualized\n                        collection={sessionsStore.filteredThreadDumps}\n                        minTableWidth={1350}\n                        rowHeight={60}\n                        rowClassName={css.ac}\n                        threshold={500}\n                        columns={cols}\n                        className={cx(css.tableHeight, css.vTable)}\n                        sortBy='timestamp'\n                        sortDirection='DESC'\n                    />\n                </div>\n            }\n            {\n                (sessionsStore.ftdCount >= 100) &&\n                <div className={css.bottomNote}>{t('threadDumps.maxItems')}</div>\n            }\n        </div>\n    )\n})\n","// .core\nimport React, { useRef, useEffect } from 'react'\nimport { getWebswingApi } from \"webswing-api\"\nimport { IWebswingInstance } from \"webswing-api/dist/types\"\n// components\n// libraries\nimport cx from 'classnames'\n// styles\nimport css from './Webswing.module.scss'\nimport { useInterval } from '@/utils'\n\ninterface IWebswingRefs {\n  root: React.RefObject<HTMLElement> | undefined\n  args: string | undefined,\n  webswingInstance: IWebswingInstance | undefined\n  setRoot: (ref: React.RefObject<HTMLElement>) => void\n  setWebswingInstance: (ref: IWebswingInstance) => void\n}\n\nexport const wsRefs: IWebswingRefs = {\n  root: undefined,\n  args: '',\n  webswingInstance: undefined,\n  setRoot: (ref: React.RefObject<HTMLElement>) => (wsRefs.root = ref),\n  setWebswingInstance: (instance: IWebswingInstance) => (wsRefs.webswingInstance = instance),\n}\n\ninterface Props {\n  connectionUrl?: string\n  mirrorUrl?: string\n  sessionId?: string\n  control?: boolean\n  height?: number\n}\n\nexport const Webswing = ({connectionUrl, mirrorUrl, sessionId, control=false, height}: Props) => {\n  const wsElementRef = useRef<HTMLDivElement>(null)\n  let lastWidth = 0;\n  let lastHeight = 0;\n\n  useEffect(() => {\n    wsInit();\n    return () => {\n      if (wsRefs.webswingInstance != null) {\n        wsRefs.webswingInstance.disconnect();\n      }\n    };\n  }, [sessionId])\n\n  useInterval(() => {\n    let width = 0;\n    let height = 0;\n    \n    if (wsElementRef.current == null) {\n      return;\n    }\n\n    const canvases = wsElementRef.current.querySelectorAll('.webswing-element-content canvas');\n    for (let i = 0; i < canvases.length; i++) {\n      const canvas = canvases[i] as HTMLCanvasElement;\n      const rect = canvas.getBoundingClientRect();\n      if (canvas.offsetTop + rect.height > height) {\n        height = canvas.offsetTop + rect.height;\n      }\n      if (canvas.offsetLeft + rect.width > width) {\n        width = canvas.offsetLeft + rect.width;\n      }\n    }\n    \n    if (width != lastWidth || height != lastHeight) {\n        wsElementRef.current.style.width = width + \"px\";\n        wsElementRef.current.style.height = height + \"px\";\n    }\n    \n    lastWidth = width;\n    lastHeight = height;\n  }, 500);\n\n  const wsInit = () => {\n    wsRefs.setRoot(wsElementRef);\n    if (!connectionUrl) return;\n    getWebswingApi(connectionUrl).then((api) => {\n      const instance = api.bootstrap(wsRefs.root!.current!, {\n          connectionUrl: connectionUrl,\n          mirrorConnectionUrl: mirrorUrl,\n          mirrorMode: true,\n          clientId: sessionId,\n          control: control,\n          autoStart: true,\n        });\n      wsRefs.setWebswingInstance(instance);\n    }).catch((e) => {\n      console.error(e)\n    });\n  }\n\n  return (\n    <>\n      <div className=\"mirror-bar-placeholder\"></div>\n      <div\n        ref={wsElementRef}\n        id=\"canvas-root\"\n        className={cx('webswing-element', css.wWebswing)}\n        style={{width:'100%',height}}>\n      </div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport cssTab from '@/components/containers/Tabs/Tabs.module.scss';\nimport { useStore } from \"@/stores\";\nimport { observer } from 'mobx-react';\nimport { useTranslation } from 'react-i18next';\n// styles\nimport css from '../SessionView.module.scss'\n// components\nimport { Button, Card, Flex, Switch, Icon, SearchFilter, ButtonIcon } from '@/components';\nimport { Charts } from './Charts';\nimport { LogsTable } from '@/views/LogsView/partial/LogsTable';\nimport { Warnings } from './Warnings';\n// utils\nimport { ApiServerUrl, toPath } from '@/utils';\nimport { RecordingsTable } from '@/views/Sessions/partials/RecordingsTable';\nimport { ThreadDumpsTable } from '@/views/Sessions/partials/ThreadDumpsTable';\nimport { SwingSession, SwingSessionStatusEnum } from '@/gen';\nimport { Webswing, wsRefs } from '@/components/basic/Webswing/Webswing';\n\ninterface ISessionViewProps {\n    app: string\n    id: string\n}\n\nexport const SessionTabs = observer(({app,id}:ISessionViewProps) => {\n    const {t} = useTranslation();\n    const {permissionsStore, sessionsStore, logsStore} = useStore();\n    const [max, setMax] = useState<boolean>(false)\n    const [wasMirrorOpen, setWasMirrorOpen] = useState<boolean>(false)\n    const [control, setControl] = useState<boolean>(false)\n    const session = sessionsStore.session\n\n    const openMirrorView = () => {\n        if(!wasMirrorOpen) {\n            setWasMirrorOpen(true);\n        }\n        sessionsStore.setActiveTab('mirror');\n    }\n\n    const isFinished = (session: SwingSession) => {\n        return session.status !== SwingSessionStatusEnum.RUNNING;\n    };\n\n    useEffect(()=> {\n        wsRefs.webswingInstance?.setControl(control);\n    },[control])\n\n    useEffect(()=> {\n        setControl(false);\n    },[id])\n\nreturn (\n    <>\n    <Flex spacing={2} flexWrap={'wrap'} className={css.btnGroupRow}>\n        {\n            <ButtonIcon icon='view_compact' active={'view' === sessionsStore.activeTab} onClick={()=>sessionsStore.setActiveTab('view')}>{t('routes.overview')}</ButtonIcon>\n        }\n        {\n            session.loggingEnabled &&\n            <ButtonIcon icon='list' active={'logs' === sessionsStore.activeTab} onClick={()=>sessionsStore.setActiveTab('logs')}>{t('routes.logs')}</ButtonIcon>\n        }\n        {\n            sessionsStore.getWarningsNum() > 0 &&\n            <ButtonIcon \n                icon='warning' \n                badge={sessionsStore.getWarningsNum()} \n                badgeColor={'warning'} \n                active={'warnings' === sessionsStore.activeTab} \n                onClick={()=>sessionsStore.setActiveTab('warnings')}\n            >\n                {t('sessions.warning_plural')}\n            </ButtonIcon>\n        }\n        {\n            permissionsStore.get('startMirrorView') && session.canMirror && !isFinished(session) &&\n            <ButtonIcon icon='visibility' active={'mirror' === sessionsStore.activeTab} onClick={openMirrorView}>{t('sessions.mirrorView')}</ButtonIcon>\n        }\n        {\n            permissionsStore.get('playbackRecording') &&\n            <ButtonIcon icon='videocam' active={'recordings' === sessionsStore.activeTab} onClick={()=>sessionsStore.setActiveTab('recordings')}>{t('sessions.tab.recordings')}</ButtonIcon>\n        }\n        {\n            permissionsStore.get('getThreadDump') &&\n            <ButtonIcon icon='view_list' active={'threadDumps' === sessionsStore.activeTab} onClick={()=>sessionsStore.setActiveTab('threadDumps')}>{t('sessions.tab.threadDumps')}</ButtonIcon>\n        }\n        {\n            'logs' === sessionsStore.activeTab && \n            <>\n                <div className={css.growSpace} />\n                <Button icon={'zoom_out'} onClick={()=>{ logsStore.adjustFontSize(-0.1) }} />\n                <Button icon={'zoom_in'} onClick={()=>{ logsStore.adjustFontSize(0.1) }} />\n                {!logsStore.filterToggle && <Button className={css.m7} color='neutral' icon={'search'} onClick={()=>logsStore.setFilterToggle()} /> }\n                {\n                logsStore.filterToggle && \n                    <SearchFilter \n                        className={css.m7}\n                        inputClassName={css.hbutton}\n                        value={logsStore.searchTerm} \n                        onChange={(e)=>logsStore.setSearchTerm(e.target.value)} \n                        onClose={()=>logsStore.setFilterToggle()} \n                    />\n                }\n\n                {/* {\n                    <Switch value={logsStore.compact} size='large' onClick={()=>logsStore.setCompact()}>\n                        {logsStore.compact? t('general.wrapEnabled'):t('general.wrapDisabled')}\n                    </Switch>\n                } */}\n            </>\n        }\n    </Flex>\n    <div className={cx(cssTab.wTabContent)}>\n        {\n            sessionsStore.activeTab === 'view' &&\n            <Card className={cx(css.cardContent, css.cardSpacer)}>\n                <Card className={css.toolBar}>\n                    <Flex className={css.wRow}>\n                        <Flex bColumn className={cx(css.smCol, css.noBorder)} flex={1}>\n                            <span className={css.label}>{t('sessions.instanceId')}:</span>\n                            {session?.id}\n                        </Flex>\n                        <Flex bColumn className={css.smCol} flex={1}>\n                            <span className={css.label}>{t('sessions.spId')}:</span>\n                            {!isFinished(session) && session?.sessionPoolId}\n                        </Flex>\n                        <Flex bColumn className={css.smCol} flex={1}>\n                            <span className={css.label}>{t('sessions.processId')}:</span>\n                            {!isFinished(session) && session?.pid}\n                        </Flex>\n                    </Flex>\n                </Card>\n                {\n                    !isFinished(session) && \n                    <Switch value={sessionsStore.statisticsLoggingEnabled} size='large' onClick={()=>sessionsStore.toggleStatisticsLoggingEnabled()}>{t('sessions.statistics')}</Switch>\n                }\n                {\n                    !isFinished(session) && \n                    <Charts />\n                }\n            </Card>\n        }\n        {\n            (sessionsStore.activeTab === 'recordings') && permissionsStore.get('playbackRecording') && <RecordingsTable app={app} sessionId={id} />\n        }\n        {\n            (sessionsStore.activeTab === 'threadDumps') && permissionsStore.get('getThreadDump') && <ThreadDumpsTable app={app} sessionId={id} />\n        }\n        {\n            sessionsStore.activeTab === 'logs' &&\n            <LogsTable className={css.tableHeight} type={'session'} app={app} id={id} />\n        }\n        {\n            permissionsStore.get('startMirrorView') && wasMirrorOpen &&\n            <div className={cx(css.hiddenMirror,{[css.activeContent]:sessionsStore.activeTab === 'mirror'})}>\n                <div className={cx(\n                    css.mirrorView,\n                    {[css.fullScreen]:max}, \n                    {[css.hiddenMirror]:false}\n                )}>\n                    <Flex className={css.mirrorRow} alignItems='center' spacing={3} >\n                        <Icon className={cx(cssTab.wTab, css.minMax)} name={max?'fullscreen_exit':'fullscreen'} onClick={()=>setMax(!max)} />\n                        <Switch className={css.switch} value={control} size='large' onClick={()=>setControl((c)=>!c)}>{t('sessions.control')}</Switch>\n                        {\n                            sessionsStore.mirroringMessageKey != null &&\n                            {\n                                'sessions.mirror.status.waiting': <div className={css.statusInfo}><Icon name='info' size='mini' color='blue' />{t(sessionsStore.mirroringMessageKey)}</div>,\n                                'sessions.mirror.status.denied': <div className={css.statusInfo}><Icon name='error' size='mini' color='danger' />{t(sessionsStore.mirroringMessageKey)}</div>\n                            }[sessionsStore.mirroringMessageKey]\n                        }\n                    </Flex>\n                    <Card className={css.cardContent}>\n                        <div className={css.iframeWrap}>\n                            <Webswing \n                                connectionUrl={session.applicationUrl} \n                                mirrorUrl={toPath(ApiServerUrl,app)} \n                                sessionId={session.id}\n                                control={control}\n                                height={768}\n                            />\n                        </div>\n                    </Card>\n                </div>\n            </div>\n        }\n        {\n            (sessionsStore.activeTab === 'warnings' && sessionsStore.getWarningsNum() > 0) &&\n            <Warnings session={session} />\n        }\n    </div>\n\n    </>\n)\n})","import cx from 'classnames';\nimport { IComponentProps, Icon, showToastOk } from \"@/components\";\nimport { useStore } from \"@/stores\";\nimport css from '../Sessions.module.scss'\nimport { Dropdown } from \"@/components/basic/Dropdown/Dropdown\";\nimport { SwingSession, SwingSessionStatusEnum } from \"@/gen\";\nimport { useHistory } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface IActionCellProps extends IComponentProps{\n    bSession?: boolean,\n    session:SwingSession,\n}\n\nexport const ActionCell = observer(({bSession=false, session, className}:IActionCellProps) => {\n    const history = useHistory();\n    const {permissionsStore, sessionsStore } = useStore();\n    const {t} = useTranslation();\n    const kill = (session:SwingSession, force?:boolean) => {\n        if (isFinished(session)) {\n            return;\n        }\n        if(force) {\n            sessionsStore.forceKill(session)\n        } else {\n            sessionsStore.kill(session)\n        }\n        history.goBack()\n    }\n\n    const view = (session: SwingSession) => {\n        history.push('/sessions' + session.applicationPath +'/'+ session.id, {previous:history.location.pathname})\n        sessionsStore.setActiveTab('view');\n    }\n\n    const logs = (session: SwingSession) => {\n        history.push('/sessions' + session.applicationPath +'/'+ session.id, {previous:history.location.pathname})\n        sessionsStore.setActiveTab('logs');\n    }\n\n    const copyID = () => {\n        if(session.id) {\n            navigator.clipboard.writeText(session.id);\n            showToastOk(t('sessions.copyInstIDMsg'));\n        }\n    }\n\n    const isFinished = (session: SwingSession) => {\n        return session.status !== SwingSessionStatusEnum.RUNNING;\n    };\n    \n    return (\n        <Dropdown\n            className={cx(css.actionCellDropdown,className)}\n            buttons={\n                bSession ?\n                [\n                    {shouldShow: permissionsStore.get('requestThreadDump') && !isFinished(session), label: t('sessions.threadDump'), icon:'list', onClick:()=>sessionsStore.requestThreadDump(session, bSession)},\n                    {shouldShow: permissionsStore.get('startRecording') && session.canRecord && !isFinished(session), label: t('sessions.record'), icon:'fiber_manual_record', onClick:()=>sessionsStore.startRecording(session, bSession)},\n                    {label: t('sessions.copyInstID'), icon:'content_copy', onClick:()=>copyID()},\n                    {\n                        shouldShow: !isFinished(session),\n                        label: t('sessions.shutdown'),\n                        icon:'power_settings_new', \n                        onClick:()=>kill(session), \n                        buttons:[{label: t('sessions.forceKill'), icon:'power_settings_new', onClick:()=>kill(session, true)}]\n                    },\n                ]\n                :\n                [\n                    {label: t('sessions.view'), icon:'view_quilt', onClick:()=>view(session)},\n                    {shouldShow: permissionsStore.get('requestThreadDump') && !isFinished(session), label: t('sessions.threadDump'), icon:'list', onClick:()=>sessionsStore.requestThreadDump(session)},\n                    {shouldShow: permissionsStore.get('startRecording') && session.canRecord && !isFinished(session), label: t('sessions.record'), icon:'fiber_manual_record', onClick:()=>sessionsStore.startRecording(session)},\n                    {label: t('sessions.copyInstID'), icon:'content_copy', onClick:()=>copyID()},\n                    {shouldShow: permissionsStore.get('logsView') && session.loggingEnabled, label: t('routes.logs'), icon:'list', onClick:()=>logs(session)},\n                    {\n                        shouldShow: !isFinished(session),\n                        label: t('sessions.shutdown'), \n                        icon:'power_settings_new', \n                        color:'danger',\n                        onClick:()=>sessionsStore.kill(session), \n                        buttons:[{label: t('sessions.forceKill'), icon:'power_settings_new', onClick:()=>sessionsStore.forceKill(session)}]\n                    },\n                ]\n            }\n        >\n            <Icon name={'more_vert'} />\n        </Dropdown>\n    )\n})","import React, { useEffect, useState } from \"react\";\nimport css from '../Sessions.module.scss'\nimport cx from 'classnames';\nimport { SwingSession } from \"@/gen\";\nimport { useStore } from \"@/stores\";\nimport { observer } from \"mobx-react\";\nimport { Icon, Flex, Tooltip } from \"@/components\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface IUserCellProps {\n    bSession?:boolean,\n    session:SwingSession\n}\n\nexport const AppCell = observer(({bSession=false, session}: IUserCellProps) => {\n    const {app} = useParams<{app:string}>();\n    const history = useHistory();\n    const {permissionsStore, globalStore, sessionsStore} = useStore();\n    const {t} = useTranslation();\n    const [now, setNow] = useState(Date.now());\n\n    const view = (session: SwingSession) => {\n        history.push('/sessions' + session.applicationPath +'/'+ session.id, {previous:history.location.pathname})\n        sessionsStore.setActiveTab('view');\n    }\n\n    const onStop = () => {\n        sessionsStore.stopRecording(session, bSession)\n        // handleReset();\n    }\n\n    const isRecording = (session: SwingSession) => {\n        return session.recordingStatus === 'WAITING_FOR_RECORDING_APPROVAL' || session.recordingStatus === 'RECORDING'\n    }\n\n    const getRecordingTimeElapsed = (session: SwingSession): string => {\n        if (!session.recordingFile || !session.recordingFile.startDate) {\n            return t('sessions.recording');\n        }\n\n        let delta = Math.abs(now - session.recordingFile.startDate) / 1000;\n        const hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n        const minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n        const seconds = Math.floor(delta % 60);\n\n        return (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => setNow(Date.now()), 500);\n        return () => {\n          clearInterval(interval);\n        };\n    }, []);\n\n    return (\n        <>\n            {\n            isRecording(session) ?\n                <div className={cx(css.Cell, css.recordCell)}>\n                    <Tooltip content={ t('sessions.instance')+' '+t('sessions.id')+': '+ session.id}>\n                        { bSession ?\n                            <>{session.application}</>\n                            :\n                            <span onClick={()=>view(session)}>\n                                {session.application} \n                            </span>\n                        }\n                    </Tooltip>\n                    <Flex justifyContent='space-between'>\n                        <Flex className={css.conter} alignItems={'center'}>\n                            <Icon name={'fiber_manual_record'} color={'danger'} size={'small'} className={css.rightSpaceIcon} />\n                            {\n                                session.recordingStatus === 'WAITING_FOR_RECORDING_APPROVAL'?\n                                t('sessions.waitingApproval')\n                                :\n                                getRecordingTimeElapsed(session)\n                            }\n                        </Flex>\n                        {\n                            permissionsStore.get('startRecording') &&\n                            <Icon name={'stop'} color={'txt'} onClick={onStop} />\n                        }\n                    </Flex>\n                </div>\n            :\n                <div className={css.appCell}>\n                    {\n                        bSession?\n                        <>\n                            <span className={css.label}>{t('sessions.app')}:</span>\n                            <div className={css.appCellLinks} >\n                                <Tooltip content={t('sessions.instance')+' '+t('sessions.id')+': '+ session.id}>\n                                    <span>\n                                        { session.application }\n                                    </span>\n                                </Tooltip>\n                                {\n                                    (session?.recordingFile && permissionsStore.get('playbackRecording')) &&\n                                    <Tooltip content={t('sessions.playRecording')}>\n                                        <span>\n                                            <Icon name='play_arrow' onClick={() => sessionsStore.showPlayback(session.applicationPath!, session.recordingFile!)} />\n                                        </span>\n                                    </Tooltip>\n                                }\n                                {\n                                    session.recordingStatus === 'DENIED_RECORDING_BY_USER' &&\n                                    <Tooltip content={t('sessions.recordingDenied')}>\n                                        <span>\n                                            <Icon size='small' color='danger' name='report' />\n                                        </span>\n                                    </Tooltip>\n                                }\n                            </div>\n                        </>\n                        :\n                        <div className={css.appCellLinks}>\n                            <Tooltip content={ t('sessions.instance')+' '+t('sessions.id')+': '+ session.id}>\n                                <span onClick={()=>view(session)}>\n                                    {session.application} \n                                </span>\n                            </Tooltip>\n\n                            {\n                                (session?.recordingFile && permissionsStore.get('playbackRecording')) &&\n                                <Tooltip content={t('sessions.playRecording')}>\n                                    <span>\n                                        <Icon name='play_arrow' onClick={() => sessionsStore.showPlayback(session.applicationPath!, session.recordingFile!)} />\n                                    </span>\n                                </Tooltip>\n                            }\n                            {\n                                session.recordingStatus === 'DENIED_RECORDING_BY_USER' &&\n                                <Tooltip content={t('sessions.recordingDenied')}>\n                                    <span>\n                                        <Icon size='small' color='danger' name='report' />\n                                    </span>\n                                </Tooltip>\n                            }\n                        </div>\n                    }\n                </div>\n            }\n        </>\n      \n    )\n})\n\n","export default \"__VITE_ASSET__244f2fd2__\"","export default \"__VITE_ASSET__bb069b5a__\"","export default \"__VITE_ASSET__e1dcf342__\"","export default \"__VITE_ASSET__efcf11e3__\"","export default \"__VITE_ASSET__52cfd960__\"","export default \"__VITE_ASSET__3cca9d97__\"","export default \"__VITE_ASSET__75048d3a__\"","export default \"__VITE_ASSET__c04e1324__\"","export default \"__VITE_ASSET__ae1928d7__\"","import React from \"react\";\nimport css from '../Sessions.module.scss';\nimport cx from 'classnames';\nimport { SwingSession } from \"@/gen\";\n// OS\nimport {ReactComponent as Windows} from '@/assets/icons/svg/windows.svg'\nimport {ReactComponent as Apple} from '@/assets/icons/svg/apple.svg'\nimport {ReactComponent as Android} from '@/assets/icons/svg/android.svg'\nimport {ReactComponent as Linux} from '@/assets/icons/svg/linux.svg'\n// Browsers\nimport {ReactComponent as Chrome} from '@/assets/icons/svg/chrome.svg'\nimport {ReactComponent as Firefox} from '@/assets/icons/svg/firefox.svg'\nimport {ReactComponent as Opera} from '@/assets/icons/svg/opera.svg'\nimport {ReactComponent as Safari} from '@/assets/icons/svg/safari.svg'\nimport {ReactComponent as Edge} from '@/assets/icons/svg/edge.svg'\n\n\n\ninterface IUserCellProps {\n    session:SwingSession,\n}\n\nexport const UserCell = ({session}:IUserCellProps) => {\n\n    const getOsIcon = (os: string) => {\n        if (os != null) {\n          if (os === \"Windows\") {\n            return <Windows width={12} title={'windows'} />;\n          }\n          if (os === \"Mac\" || os === \"IPhone\") {\n            return <Apple width={12} title={'apple'} />;\n          }\n          if (os === \"Linux\") {\n            return <Linux width={12} title={'linux'} />;\n        }\n        if (os === \"Android\") {\n              return <Android width={12} title={'android'} />;\n          }\n          return \"\";\n        }\n    }\n      \n    const getBrowserIcon =(b: string) => {\n    if (b != null) {\n        if (b.indexOf(\"IE\") >= 0) {\n            return <Edge width={12} title={'internet explorer'} />;\n        }\n        b = b.toLowerCase();\n        if (b.indexOf(\"edge\") >= 0) {\n            return <Edge width={12} title={'Edge'} />;\n    }\n    if (b.indexOf(\"chrome\") >= 0) {\n            return <Chrome width={12} title={'Chrome'} />;\n        }\n        if (b.indexOf(\"firefox\") >= 0) {\n            return <Firefox width={12} title={'Firefox'} />;\n        }\n        if (b.indexOf(\"safari\") >= 0) {\n            return <Safari width={12} title={'Safari'} />;\n        }\n        if (b.indexOf(\"opera\") >= 0) {\n            return <Opera width={12} title={'opera'} />;\n        }\n        return \"\";\n    }\n    }\n\n    return (\n        <div className={cx(css.Cell,css.userCell)}>\n            {session?.user ?? 'N/A' }\n            {getOsIcon(session?.userOs!)}\n            {getBrowserIcon(session?.userBrowser!)}\n        </div>\n    )\n}","import css from '../Sessions.module.scss'\nimport { SwingSession, SwingSessionStatusEnum } from \"@/gen\";\nimport { Tooltip, Status } from \"@/components\";\nimport { dateFormat } from \"@/utils\";\nimport { useTranslation } from 'react-i18next';\n\nexport interface ISwingSession {\n    connected?: boolean;\n    detached?: boolean;\n    disconnectedSince?: number;\n    status?: SwingSessionStatusEnum;\n}\n\ninterface IStatusCellProps {\n    session: ISwingSession\n    dotOnly?: boolean\n}\n\nexport const StatusCell = ({session, dotOnly = false}:IStatusCellProps) => {\n    const {t}= useTranslation()\n    return (\n        <>\n            {\n                (() => {\n\n                    if(!session.hasOwnProperty('status')) {\n                        return <Status \n                            className={css.Cell} \n                            color={'warning'} \n                            label={t('status.archived')}\n                            dotOnly={dotOnly}\n                        />\n                    }\n\n                    if (session.connected) {\n                        return <Status \n                            className={css.Cell} \n                            color={'success'} \n                            label={t('status.connected')} \n                            dotOnly={dotOnly}\n                        />\n                    }\n\n                    switch (session.status) {\n                        case 'RUNNING':\n                            if (session.detached) {\n                                return <Status className={css.Cell} color={'danger'} label={t('status.detached')} dotOnly={dotOnly} />\n                            }\n                            return <Tooltip content={t('sessions.disconnectedAt', {time:dateFormat(session.disconnectedSince!)})}>\n                                <span><Status className={css.Cell} color={'danger'} label={t('status.disconnected')} dotOnly={dotOnly} /></span>\n                            </Tooltip>\n                        default:\n                            if (session.detached) {\n                                return <Status className={css.Cell} color={'resolved'} label={t('status.detached')} dotOnly={dotOnly} />\n                            }\n                            return <Status className={css.Cell} color={'closed'} label={session.status} dotOnly={dotOnly} />\n                    }\n                }).call(this)\n            }\n        </>\n    )\n}\n\n","import React from 'react';\nimport cx from 'classnames';\nimport css from '../SessionView.module.scss'\nimport {useStore} from '@/stores';\nimport { observer } from 'mobx-react';\nimport { Card, Flex, Icon } from '@/components';\nimport { ActionCell } from '@/views/Sessions/partials/ActionCell';\nimport { AppCell } from '@/views/Sessions/partials/AppCell';\nimport { UserCell } from '@/views/Sessions/partials/UserCell';\nimport { dateFormat } from '@/utils';\nimport { StatusCell } from '@/views/Sessions/partials/StatusCell';\nimport { useTranslation } from 'react-i18next';\nimport { SwingSession, SwingSessionStatusEnum } from '@/gen';\n\ninterface ISessionToolBarProps {\n id:string\n}\n\nexport const SessionToolBar = observer(({id}:ISessionToolBarProps) => {\n    const {sessionsStore} = useStore();\n    const {t} = useTranslation();\n    const refresh=() =>{\n        sessionsStore.refresh(id)\n    }\n    const isFinished = (session: SwingSession) => {\n        return session.status !== SwingSessionStatusEnum.RUNNING;\n    };\n\n    const session = sessionsStore.session\n    \n    return (\n        <Card className={css.toolBar}>\n            <Flex className={css.wRow}>\n                <ActionCell bSession className={css.Acell} session={session} />\n                <Flex bColumn className={cx(css.smCol,css.appCol)}>\n                    <AppCell bSession session={session} />\n                </Flex>\n                <Flex bColumn className={css.smCol} flex={1}>\n                    <span className={css.label}>{t('logs.user')}:</span>\n                    <UserCell session={session!} />\n                </Flex>\n                <Flex bColumn className={css.smCol} flex={1}>\n                    <span className={css.label}>{t('logs.ip')}:</span>\n                    {session?.userIp}\n                </Flex>\n                <Flex bColumn className={cx(css.smCol,css.minW)} flex={1}>\n                    <span className={css.label}>{t('sessions.startTime')}:</span>\n                    {dateFormat(Number(session?.startedAt))}\n                </Flex>\n                {\n                    isFinished(session!) &&\n                    <Flex bColumn className={cx(css.smCol,css.minW)} flex={1}>\n                        <span className={css.label}>{t('sessions.endTime')}:</span>\n                        {dateFormat(Number(session?.endedAt))}\n                    </Flex>\n                }\n                <Flex bColumn flex={1} className={css.smCol}>\n                    <span className={css.label}>{t('general.status')}:</span>\n                    <StatusCell session={session!} />\n                </Flex>\n                <Flex bColumn flex={1} className={css.smCol}>\n                    <span className={css.label}>{t('general.refresh')}:</span>\n                    <Flex onClick={refresh}><Icon size='small' name=\"cached\" /> {sessionsStore.lastUpdated}</Flex>\n                </Flex>\n            </Flex>\n        </Card>\n    )\n})","import { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport cx from 'classnames';\nimport css from '../SessionView.module.scss'\nimport { Button, Popover } from \"@/components\";\nimport { useStore } from \"@/stores\";\nimport { UserCell } from \"@/views/Sessions/partials/UserCell\";\nimport { dateFormat } from \"@/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { StatusCell } from \"@/views/Sessions/partials/StatusCell\";\n\ninterface IsSelectorProps {\n    \n}\n\nexport const SessionSelector = observer(({  }: IsSelectorProps) => {\n    const [expandSelector, setExpandSelector] = useState(false);\n    const {sessionsStore} = useStore();\n    const history = useHistory();\n    const index = Number(sessionsStore.currentSessionIndex)+1\n\n    const handleItem = (session: any) => {\n        setExpandSelector(v=>!v)\n        history.push('/sessions' + session.applicationPath +'/'+ session.id, {previous:history.location.pathname})\n    }\n\n    const sessions = sessionsStore.filteredSessionsList\n    return (\n        <div className={css.colSelector}>\n            {\n                Number(sessions?.length) > 1 && (\n                    <Button color='neutral'  size=\"small\" label={index + ' of ' + sessions?.length} onClick={()=>setExpandSelector(v=>!v)} />\n                )\n            }\n            <Popover\n                darkBP\n                backdrop\n                width={500}\n                className={cx(css.selPopover)}\n                open={expandSelector}\n                side=\"right\"\n                onBlur={()=>setExpandSelector(v=>!v)}>\n                    <div className={css.sessionsTable}>\n                        <table>\n                            <tbody>\n                            {\n                                sessions?.map((session, index: number) => (\n                                <tr key={index} \n                                    onClick={()=>handleItem(session)}\n                                    className={cx({ [css.active]: session.id === sessionsStore.session.id })}\n                                >\n                                    <td>\n                                        <span className={css.truncate}>{(index+1)+'. '}{session.application}</span>\n                                    </td>\n                                    <td><UserCell session={session} /></td>\n                                    <td>{dateFormat(Number(session.startedAt))}</td>\n                                    <td><StatusCell dotOnly={true} session={session} /></td>\n                                </tr>\n                                ))\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n            </Popover>\n        </div>\n    );\n})","// .core\nimport { useParams, useHistory } from 'react-router-dom'\n// components\nimport { Button, Flex } from '@/components';\n// services\n// styles\nimport css from '../SessionView.module.scss'\nimport { observer } from 'mobx-react';\nimport { useStore } from '@/stores';\nimport { SessionSelector } from './SessionSelector';\ninterface IParams {\n    app: string\n    id: string\n}\n\nexport const SessionHeadRow = observer((): JSX.Element => {\n    const {sessionsStore} = useStore();\n    const history = useHistory();\n    const {app, id} = useParams<IParams>();\n\n    const prevPath = sessionsStore.previousSessionPath(id)\n    const nextPath = sessionsStore.nextSessionPath(id)\n\n    const handleGoBack = () => {\n      const state = history.location.state\n      if (state?.hasOwnProperty('previous') && state['previous'].includes(`/sessions/${app}`)) {\n        history.push(`/sessions/${app}`)\n      } else {\n        history.push(`/sessions`)\n      }\n    };\n    \n    return (\n      <div className={css.sessionHeadRow}>\n        <Button icon=\"arrow_back\" color={'neutral'} onClick={handleGoBack} />\n        <Flex spacing={2} flexWrap={'wrap'} >\n            <SessionSelector />\n            <Button bDisabled={typeof prevPath !== 'string'} icon=\"chevron_left\" color={'neutral'} onClick={() => history.push(prevPath!, {previous:history.location.pathname})} />\n            <Button bDisabled={typeof nextPath !== 'string'} icon=\"chevron_right\" color={'neutral'} onClick={() => history.push(nextPath!, {previous:history.location.pathname})} />\n        </Flex>\n      </div>\n    )\n})\n","// .core\nimport React, {useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\n// styles\nimport css from './SessionView.module.scss'\nimport { observer } from 'mobx-react';\nimport { SessionTabs } from './partials/SessionTabs';\nimport { SessionToolBar } from './partials/SessionNavCard';\nimport { changeTitle } from '@/views/routes';\nimport { useTranslation } from 'react-i18next';\nimport { useStore } from '@/stores';\nimport { SessionHeadRow } from './partials/SessionHeadRow';\ninterface IParams {\n    app: string\n    id: string\n}\n\nexport const SessionView= observer((): JSX.Element => {\n    const {sessionsStore, globalStore} = useStore();\n    const {app, id} = useParams<IParams>();\n    const {t} = useTranslation();\n    useEffect(() => {\n      globalStore.updateApp(app);\n      sessionsStore.refresh(id);\n      return () => sessionsStore.clearInterval();\n    },[app, id]);\n\n    changeTitle(t('routes.session') +' - ' +app);\n\n    return ( \n      <div className={css.root}>\n        <SessionHeadRow />\n        <SessionToolBar id={id} />\n        <SessionTabs app={app} id={id} />\n      </div>\n    )\n})\n","import { SessionView } from './SessionView/SessionView';\n// .core\nimport React, { lazy } from 'react';\n// utils\nimport { IPageProps, TIcon } from '@/utils';\n/**\n * Config for UI general elements of a page\n */\nexport interface IUIConfig {\n  bShowBreadcrumbs?: boolean\n  bShowFooter?: boolean\n  bShowHeader?: boolean\n  bShowHeaderSearchbar?: boolean\n  /**\n   * Icon to use in sidebar - if the app has one\n   */\n  icon?: TIcon\n}\n\n/**\n * Config for navigation route (a page)\n */\nexport interface IRoute<RouteStack> {\n  component: React.LazyExoticComponent<any> | React.FunctionComponent<IPageProps> | React.ComponentClass<IPageProps>\n  path: RouteStack\n  exact?: boolean\n  /**\n   *\n   * ! WORK IN PROGRESS ! - NOT YET IMPLEMENTED !\n   *\n   * Collection of subroutes for this page - Home -> Table View -> Entry Detail -> Entry Detail Tab etc.\n   * Also used for generatinng breadcrumbs\n   */\n  subroutes?: IRoute<RouteStack>[]\n  UIConfig?: IUIConfig\n}\n\n/**\n * List of routes\n */\nexport type TRoutes = 'quickstart' | 'quickstart/app' | 'overview' | 'overview/servers' | 'overview/sessionpools' | 'overview/server-config' | 'overview/scaling' | 'apps'| 'apps/:app' | 'logs/:type?/:app?/:id?/:spId?' | 'logs/session/:app'| 'sessions/:app?' | 'sessions/:app/:id?'\n\n\nconst Overview = lazy(() => import('./Overview/Overview'));\nconst Sessions = lazy(() => import('./Sessions/Sessions'));\nconst Logs = lazy(() => import('./LogsView/Logs'));\nconst ConfigServer = lazy(() => import('./Overview/ConfigServer'));\nconst AppsSwing = lazy(() => import('./Applications/AppsSwing'));\nconst AppsView = lazy(() => import('./Applications/AppsView'));\nconst LogsInstancesList = lazy(() => import('./LogsView/LogsInstancesList'));\nconst Scaling = lazy(() => import('./Overview/Scaling'));\nconst QuickstartPage = lazy(() => import('./Quickstart/QuickstartPage'));\nconst AppsQuickstart = lazy(() => import('./Applications/AppsQuickstart'));\n\n/**\n * Routing config for authentificated pages - core of the app - when user is already logged in yet\n */\nexport const ROUTES: IRoute<TRoutes>[] = [\n  {\n    component: QuickstartPage,\n    path: 'quickstart',\n    exact: true,\n  },\n  {\n    component: AppsQuickstart,\n    path: 'quickstart/app',\n    exact: true,\n  },\n  {\n    component: Overview,\n    path: 'overview',\n    exact: true,\n  },\n  {\n    component: Overview,\n    path: 'overview/servers',\n    exact: true,\n  },\n  {\n    component: Overview,\n    path: 'overview/sessionpools',\n    exact: true\n  },\n  {\n    component: ConfigServer,\n    path: 'overview/server-config',\n    exact: true\n  },\n  {\n    component: Scaling,\n    path: 'overview/scaling',\n    exact: true\n  },\n  {\n    component: Sessions,\n    path: 'sessions/:app?',\n    exact: true,\n  },\n  {\n    component: SessionView,\n    path: 'sessions/:app/:id?',\n    exact: true,\n  },\n  {\n    component: LogsInstancesList,\n    path: 'logs/session/:app',\n    exact: true\n  },\n  {\n    component: Logs,\n    path: 'logs/:type?/:app?/:id?/:spId?',\n  },\n  {\n    component: AppsView,\n    path: 'apps',\n    exact: true,\n  },\n  {\n    component: AppsSwing,\n    path: 'apps/:app',\n  },\n];\n\nexport const changeTitle = (title: string) => {\n  document.title = `${title} | Admin Console | Webswing`\n}\n","// .core\nimport React from 'react'\n// components\nimport { NoData } from '@/components'\n// i18n\nimport i18n from '@/i18n'\n// libraries\nimport { Route } from 'react-router-dom'\n// styles\nimport css from './PageNotFound.module.scss'\n\n/**\n * Wrapper for 404 not found page\n */\nexport const PageNotFound = () => (\n  <Route path=\"*\">\n    <div className={css.wPageNotFound}>\n      <NoData message={i18n.t('TOAST_404')} />\n    </div>\n  </Route>\n)\n","// .core\nimport React from 'react'\n// components\nimport { Button, Card, Heading } from '@/components'\n// i18n\n// import i18n from '@/i18n'\n// styles\nimport css from './ErrorView.module.scss'\nimport { Logo } from '@/components/layout/Header/partials/Logo'\nimport { observer } from 'mobx-react'\nimport {AccessService} from '@/services'\nimport { useTranslation } from 'react-i18next'\nimport { useStore } from '@/stores'\n/**\n * Wrapper for 500 and other errors\n */\n\ninterface IErrorView {\n  header?:string\n  bTryAgainBtn?:boolean\n  bLoginBtn?:boolean\n  subtitle?:string\n}\n\nexport const ErrorView = observer(({header,bTryAgainBtn=true, bLoginBtn=true, subtitle}:IErrorView) => {\n  const {t} = useTranslation()\n  const {permissionsStore} = useStore();\n\n  const login = () => {\n    if (permissionsStore.isLoggedIn()) {\n      AccessService.logout();\n    } else {\n      AccessService.displayLogin()\n    }\n  }\n\n  return (\n    <div className={css.root}>\n      <Card className={css.card} classes={{ content: css.cardFlex }}>\n        <Logo/>\n        <Heading title={header?t(header):t('error.header')}/>\n        <p>\n          <p>{subtitle? t(subtitle) : t('error.clickBelow')}</p>\n          <small dangerouslySetInnerHTML={{ __html: t('error.contactUs') }} />\n        </p>\n        <Button.Group className={css.buttons} buttons={[\n          {show:bLoginBtn, size:'small', color:'blue', label:t('general.login'), onClick:login},\n          {show:bTryAgainBtn, size:'small', color:'neutral', label:t('error.tryAgain'), onClick:()=>window.location.reload()}\n        ]} />\n  \n      </Card>\n    </div>\n  )\n\n})\n","// .core\nimport React, { Suspense } from 'react';\n// components\nimport { Content, Header, LeftSideMenu, Loader } from '@/components';\n// libraries\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { ROUTES } from '@/views/routes';\nimport { PageNotFound } from '@/views/misc/PageNotFound/PageNotFound';\nimport { ErrorView } from '@/views/misc/ErrorView/ErrorView';\nimport { observer } from 'mobx-react';\n// styles\nimport css from './Layout.module.scss'\nimport { useStore } from '@/stores';\n\ninterface ILayoutWrapper {\n  children: React.ReactNode\n}\n\nexport const Layout = observer(() => {\n  const {globalStore} = useStore();\n\n  return (\n    <LayoutWrapper>\n      {\n        globalStore.isQuickStartView &&\n        <div className={css.root}>\n          {<div className={css.quickstartRoot}>\n            <RoutesContainer />\n          </div>}\n        </div>\n      }\n      {\n        !globalStore.isQuickStartView &&\n        <div className={css.root}>\n          <LeftSideMenu />\n          <Content> \n            <Header />\n            <RoutesContainer />\n          </Content>\n        </div>\n      }\n    </LayoutWrapper>\n  )\n});\n\nexport const LayoutWrapper = observer( ({children}:ILayoutWrapper) => {\n  const {globalStore} = useStore();\n  return (\n  <>\n    {/* theming */}\n    <style dangerouslySetInnerHTML={{__html: globalStore.customization?.themeVariables!}}></style>\n    {\n      globalStore.showErrorView ? <ErrorView header={globalStore.errorView?.header} bLoginBtn={globalStore.errorView?.bLoginBtn} subtitle={globalStore.errorView?.subtitle} /> : children\n    }\n  </>\n  )\n});\n\nexport const RoutesContainer = () => {\n  const { search } = useLocation()\n  let routeParam = new URLSearchParams(search).get(\"route\");\n  if (routeParam == null) {\n    const lastRoute = sessionStorage.getItem('wsa_lastRoute');\n    if (lastRoute != null) {\n      routeParam = lastRoute;\n      sessionStorage.removeItem('wsa_lastRoute');\n    }\n  }\n  return (\n    <div className={css.container}>\n      <Suspense fallback={<Loader />}>\n        <Switch>\n            {ROUTES.map(page => (\n              <Route key={page.path} exact={page.exact} path={'/' + page.path} component={page.component}/>\n            )\n            )}\n            <Route path='/'>\n              {\n                routeParam ? \n                <Redirect to={routeParam} />\n                :\n                <Redirect to='/overview' />\n              }\n            </Route>\n          <PageNotFound />\n        </Switch>\n      </Suspense>\n    </div>\n  )\n};","// .core\nimport { FC, useEffect } from 'react';\n// services\nimport { AccessService } from '@/services';\nimport { ApiContextPath } from '@/utils';\nimport { useStore } from '@/stores';\n// styles\nimport 'formium-component/public/formium.css';\nimport './styles/index.scss';\n// router\nimport { BrowserRouter as Router } from 'react-router-dom';\n// components\nimport { Loader, Toast } from '@/components'\nimport { Layout } from '@/components/layout/Layout';\nimport { observer } from 'mobx-react';\n\nconst App : FC = observer( () => {\n  const {globalStore, permissionsStore} = useStore();\n  const appInit = () => {\n    AccessService.healthCheck().then((status) => {\n      if(status === 'error') {\n        globalStore.toggleErrorView(true,{header:'error.healthFailed', bLoginBtn:false, subtitle:'error.healthFailedSubtitle'});\n      } else {\n        AccessService.getAccessToken().then((token) => {\n          if (token && token.length) {\n            permissionsStore.reload();\n            globalStore.loadAvailableLangs();\n            globalStore.loadServerUrl();\n            globalStore.loadCustomizationConfig();\n          }\n        });\n      }\n    });\n  }\n  const shouldShowLoader = () => {\n    return permissionsStore.checkingPermissions && !globalStore.showErrorView\n  }\n\n  useEffect(()=>{\n    appInit();\n  },[])\n\n  if(shouldShowLoader()) {\n    return (\n      <Loader.Branded/>\n    );\n  }\n  return (\n    <>\n      <Router basename={ApiContextPath}>\n        <Layout />\n      </Router>\n      <Toast />\n    </>\n  );\n});\n\nexport default App;","import React from 'react';\nimport { i18next } from '@/i18n';\nimport ReactDOM from 'react-dom';\nimport { store, StoreProvider } from '@/stores';\nimport { initBaseLocation } from '@/utils';\nimport App from './App';\n\ninitBaseLocation()\n  .then(i18next)\n  .then(() => {\n  ReactDOM.render(\n    <StoreProvider store={store}>\n      <App />\n    </StoreProvider>,\n    document.getElementById('root')\n  );\n}).catch(e => {\n  console.error(e);\n});\n\n\n"],"file":"assets/index-61e14e01.js"}