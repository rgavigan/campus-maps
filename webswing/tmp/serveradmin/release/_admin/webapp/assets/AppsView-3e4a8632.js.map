{"version":3,"file":"AppsView-3e4a8632.js","sources":["../../src/components/basic/Point/Point.tsx","../../src/views/Applications/Partials/AppsWidget.tsx","../../src/views/Applications/AppsView.tsx"],"sourcesContent":["// core\nimport React from 'react'\n\n// libraries\nimport classnames from 'classnames'\n\n// components\nimport { IComponentProps } from '@/components'\n\n// styles\nimport css from './Point.module.scss'\n\nexport interface IPointProps extends IComponentProps {\n  /**\n   * Styling of the point, default theme color will be used if none specified.\n   */\n  color?: 'white' | 'neutral' | 'primary' | 'success' | 'warning' | 'danger'\n}\n\nexport const Point = ({ color = 'primary', className }: IPointProps) => {\n  return <div className={classnames(css.root, css[color], className)} />\n}\n","// core\nimport React from 'react';\nimport cx from 'classnames';\n// components\nimport { Card, AvatarWithTitle } from '@/components';\n\n// styles\nimport css from '../Applications.module.scss';\nimport { Point } from '@/components/basic/Point/Point';\nimport { Link } from 'react-router-dom';\nimport { InstanceManagerStatus } from '@/gen';\nimport { useStore } from '@/stores';\nexport interface IAppsWidgetProps {\n  className?:string\n  title?:string\n  subtitle?: string\n  src?:string\n  icon?: string | undefined\n  status?:InstanceManagerStatus[]\n  path:string\n  url?:string\n  openUrl?(): void\n}\n\nexport const AppsWidget = ({title,subtitle,src,icon, openUrl, status, path, className}:IAppsWidgetProps) => {\n  const { globalStore } = useStore();\n  return (\n    <Card className={cx(css.appsWidget, className)}>\n        <Link to={path} >\n        <AvatarWithTitle\n          src={src}\n          icon={icon}\n          title={title}\n          subtitle={subtitle}\n          className={css.latestNews}\n          classes={{ subtitle: css.subtitle, avatar:css.avatar }}\n          onCLick={openUrl}\n          />\n        {status && <>\n          { globalStore.countStatuses(status,'Running') ? <Point color='success' className={css.statusPoint}/>:null}\n          { globalStore.countStatuses(status,'Stopped') ? <Point color='warning' className={css.statusPoint}/>:null}\n          { globalStore.countStatuses(status,'Error') ? <Point color='danger' className={css.statusPoint}/>:null}\n        </>\n        }\n      </Link>\n    </Card>\n  );\n};\n\n","// core\nimport React, { useCallback, useEffect } from 'react'\n// components\nimport {Grid, TableVirtualized, IColumns, Icon, SearchFilter, Button, Flex, PageHeader, StatusBar } from '@/components'\n// routes\nimport { changeTitle } from '../routes';\n// styles\nimport css from './Applications.module.scss'\nimport cssTab from '@/components/containers/Tabs/Tabs.module.scss';\nimport cssOverview from '../Overview/Overview.module.scss'\nimport cssSessions from '../Sessions/Sessions.module.scss'\nimport { useStore } from '@/stores';\nimport { observer } from 'mobx-react';\nimport { AppsWidget } from './Partials/AppsWidget';\nimport { BasicApplicationInfo, InstanceManagerStatus } from '@/gen';\nimport { Dropdown } from '@/components/basic/Dropdown/Dropdown';\nimport { useHistory } from 'react-router';\nimport { ApiServerUrl} from '@/utils';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nconst AppsView = observer(() => {\n  const {configStore, globalStore} = useStore();\n  const history = useHistory();\n  const {t} = useTranslation();\n  const showConfig = useCallback((params) => {\n    history.push('apps'+params.rowData.path)\n  },[history])\n\n  const view = (path:string) => {\n    history.push(path);\n  }\n  const filteredData = !configStore.searchTerm\n    ? globalStore.paths\n    : globalStore.paths?.filter(item =>\n        item.path?.toLowerCase().includes(configStore.searchTerm.toLocaleLowerCase()) ||\n        item.name?.toLowerCase().includes(configStore.searchTerm.toLocaleLowerCase())\n    );\n\n  changeTitle(t('routes.apps'));\n\n  useEffect(()=> {\n    globalStore.updateApp();\n    globalStore.loadInfo(); // for isCluster check in Menu.tsx\n\n    if(globalStore.toggleAddApp) {\n      globalStore.setToggleAddApp(false)\n    }\n  },[])\n\n  return (\n    <>\n      <AppsWidget className={css.serverWidth} icon='dns' title={t('config.type', {type:'Server'})} path='overview/server-config' />\n      <Flex justifyContent={'space-between'} alignItems='center'>\n        <PageHeader title={t('routes.apps')} />\n        <Flex spacing={2}>\n          <Button icon=\"apps\" color={'grid' === configStore.appView?'blue':'neutral'} onClick={() => configStore.setAppView('grid')} />\n          <Button icon=\"list\" color={'table' === configStore.appView?'blue':'neutral'} onClick={() => configStore.setAppView('table')} />\n          {!configStore.filterToggle && <Button color='neutral' icon={'search'} onClick={()=>configStore.setFilterToggle()} /> }\n          {\n          configStore.filterToggle && \n              <SearchFilter\n                  value={configStore.searchTerm} \n                  onChange={(e)=>configStore.setSearchTerm(e.target.value)} \n                  onClose={()=>configStore.setFilterToggle()} \n              />\n          }\n        </Flex>\n      </Flex>\n      <div className={cssTab.wTabContent}>\n        {\n          configStore.appView === 'grid' &&\n          <Grid container spacing=\"sm\">\n            {filteredData?.map(item => (\n            <Grid key={item.path} item xs={12} sm={6} md={4} lg={3}>\n              <AppsWidget\n                status={item.status}\n                src={ApiServerUrl + item.path + '/rest/appicon'} \n                title={item.name} \n                subtitle={item.path} \n                path={'apps' + item.path}\n              />\n            </Grid>\n              ))}\n          </Grid>\n        }\n        {\n          configStore.appView === 'table' &&\n          <div className={cssOverview.table}>\n            <TableVirtualized \n              columns={[\n                {\n                  dataKey:'name',\n                  width: 35,\n                  align: 'start',\n                  label: '',\n                  className: cssSessions.actionCell,\n                  component: (name, row) => <Dropdown\n                    className={cssSessions.actionCellDropdown}\n                    buttons={[\n                      {label: t('Config'), icon:'list_alt', onClick:()=>view('apps'+row.path)},\n                      {label: t('Sessions'), icon:'groups', onClick:()=>view('sessions'+row.path)},\n                    ]}\n                    >\n                      <Icon name={'more_vert'} />\n                    </Dropdown>\n                },\n                {\n                  label:t('apps.name'),\n                  dataKey:'name',\n                  minWidth: 100,\n                  align: 'start',\n                  bSort:true,\n                  component: (name: string, row) => <Link className={css.cell} to={'/apps'+row.path} >{name}</Link>\n                },\n                {\n                  label:t('apps.path'),\n                  dataKey:'path',\n                  minWidth: 100,\n                  align: 'start',\n                  bSort:true,\n                  component: (path, row) => <a className={css.cell} href={row?.url} target='_blank' rel=\"noreferrer\">{path}</a>\n                },\n                {\n                  label:t('apps.running'),\n                  dataKey:'runningInstances',\n                  minWidth: 100,\n                  align: 'start',\n                  bSort:true\n                },\n                {\n                  label:t('general.status'),\n                  dataKey:'status',\n                  minWidth: 100,\n                  align: 'start',\n                  bSort:true,\n                  component: (status) => <StatusBar status={status as InstanceManagerStatus[]} />\n                },\n              ] as IColumns<BasicApplicationInfo>[]}\n              minTableWidth={435}\n              rowHeight={60}\n              threshold={500}\n              rowClassName={css.ac}\n              onRowDoubleClick={showConfig}\n              collection={filteredData}\n              className={css.tableHeight}\n            />\n          </div>\n        }\n      </div>\n    </>\n  )\n})\n\nexport default AppsView"],"names":["Point","color","className","jsx","classnames","css","AppsWidget","title","subtitle","src","icon","openUrl","status","path","globalStore","useStore","Card","cx","jsxs","Link","AvatarWithTitle","Fragment","AppsView","observer","configStore","history","useHistory","t","useTranslation","showConfig","useCallback","params","view","filteredData","_a","item","_b","changeTitle","useEffect","Flex","PageHeader","Button","SearchFilter","cssTab","Grid","ApiServerUrl","cssOverview","TableVirtualized","cssSessions","name","row","Dropdown","Icon","StatusBar"],"mappings":"ynBAmBaA,EAAQ,CAAC,CAAE,MAAAC,EAAQ,UAAW,UAAAC,KAClCC,MAAC,MAAI,CAAA,UAAWC,EAAWC,EAAI,KAAMA,EAAIJ,CAAK,EAAGC,CAAS,CAAG,CAAA,ECIzDI,EAAa,CAAC,CAAC,MAAAC,EAAM,SAAAC,EAAS,IAAAC,EAAI,KAAAC,EAAM,QAAAC,EAAS,OAAAC,EAAQ,KAAAC,EAAM,UAAAX,KAAgC,CACpG,KAAA,CAAE,YAAAY,GAAgBC,IAEtB,OAAAZ,EAAAA,IAACa,EAAK,CAAA,UAAWC,EAAGZ,EAAI,WAAYH,CAAS,EACzC,SAAAgB,EAAAA,KAACC,EAAK,CAAA,GAAIN,EACV,SAAA,CAAAV,EAAA,IAACiB,EAAA,CACC,IAAAX,EACA,KAAAC,EACA,MAAAH,EACA,SAAAC,EACA,UAAWH,EAAI,WACf,QAAS,CAAE,SAAUA,EAAI,SAAU,OAAOA,EAAI,MAAO,EACrD,QAASM,CAAA,CACT,EACDC,GACGM,EAAA,KAAAG,WAAA,CAAA,SAAA,CAAYP,EAAA,cAAcF,EAAO,SAAS,EAAIT,EAAA,IAACH,EAAM,CAAA,MAAM,UAAU,UAAWK,EAAI,WAAA,CAAY,EAAG,KACnGS,EAAY,cAAcF,EAAO,SAAS,EAAIT,EAAA,IAACH,EAAM,CAAA,MAAM,UAAU,UAAWK,EAAI,WAAA,CAAY,EAAG,KACnGS,EAAY,cAAcF,EAAO,OAAO,EAAIT,EAAA,IAACH,EAAM,CAAA,MAAM,SAAS,UAAWK,EAAI,WAAA,CAAY,EAAG,IAAA,EACpG,CAAA,CAEF,CAAA,CACF,CAAA,CAEJ,EC1BMiB,EAAWC,EAAS,IAAM,OAC9B,KAAM,CAAC,YAAAC,EAAa,YAAAV,CAAW,EAAIC,EAAS,EACtCU,EAAUC,IACV,CAAC,EAAAC,GAAKC,IACNC,EAAaC,cAAaC,GAAW,CACzCN,EAAQ,KAAK,OAAOM,EAAO,QAAQ,IAAI,CAAA,EACvC,CAACN,CAAO,CAAC,EAELO,EAAQnB,GAAgB,CAC5BY,EAAQ,KAAKZ,CAAI,CAAA,EAEboB,EAAgBT,EAAY,YAE9BU,EAAApB,EAAY,QAAZ,YAAAoB,EAAmB,UACjB,SAAA,QAAAA,EAAAC,EAAK,OAAL,YAAAD,EAAW,cAAc,SAASV,EAAY,WAAW,kBAAmB,OAC5EY,EAAAD,EAAK,OAAL,YAAAC,EAAW,cAAc,SAASZ,EAAY,WAAW,wBAH3DV,EAAY,MAMJ,OAAAuB,EAAAV,EAAE,aAAa,CAAC,EAE5BW,EAAAA,UAAU,IAAK,CACbxB,EAAY,UAAU,EACtBA,EAAY,SAAS,EAElBA,EAAY,cACbA,EAAY,gBAAgB,EAAK,CAErC,EAAE,CAAE,CAAA,EAIAI,EAAA,KAAAG,WAAA,CAAA,SAAA,CAAAlB,EAAA,IAACG,EAAW,CAAA,UAAWD,EAAI,YAAa,KAAK,MAAM,MAAOsB,EAAE,cAAe,CAAC,KAAK,QAAS,CAAA,EAAG,KAAK,yBAAyB,EAC1HT,EAAA,KAAAqB,EAAA,CAAK,eAAgB,gBAAiB,WAAW,SAChD,SAAA,CAAApC,EAAA,IAACqC,EAAW,CAAA,MAAOb,EAAE,aAAa,CAAG,CAAA,EACrCT,EAAAA,KAACqB,EAAK,CAAA,QAAS,EACb,SAAA,CAAApC,EAAA,IAACsC,EAAO,CAAA,KAAK,OAAO,MAAkBjB,EAAY,UAAvB,OAA+B,OAAO,UAAW,QAAS,IAAMA,EAAY,WAAW,MAAM,EAAG,EAC1HrB,EAAA,IAAAsC,EAAA,CAAO,KAAK,OAAO,MAAmBjB,EAAY,UAAxB,QAAgC,OAAO,UAAW,QAAS,IAAMA,EAAY,WAAW,OAAO,EAAG,EAC5H,CAACA,EAAY,cAAgBrB,EAAA,IAACsC,EAAO,CAAA,MAAM,UAAU,KAAM,SAAU,QAAS,IAAIjB,EAAY,gBAAmB,CAAA,CAAA,EAElHA,EAAY,cACRrB,EAAA,IAACuC,EAAA,CACG,MAAOlB,EAAY,WACnB,SAAW,GAAIA,EAAY,cAAc,EAAE,OAAO,KAAK,EACvD,QAAS,IAAIA,EAAY,gBAAgB,CAAA,CAC7C,CAAA,EAEN,CAAA,EACF,EACCN,EAAA,KAAA,MAAA,CAAI,UAAWyB,EAAO,YAEnB,SAAA,CAAYnB,EAAA,UAAY,QACvBrB,EAAA,IAAAyC,EAAA,CAAK,UAAS,GAAC,QAAQ,KACrB,SAAAX,GAAA,YAAAA,EAAc,IAAIE,SAClBS,EAAqB,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EACnD,SAAAzC,EAAA,IAACG,EAAA,CACC,OAAQ6B,EAAK,OACb,IAAKU,EAAeV,EAAK,KAAO,gBAChC,MAAOA,EAAK,KACZ,SAAUA,EAAK,KACf,KAAM,OAASA,EAAK,IAAA,CANb,CAAA,EAAAA,EAAK,IAQhB,GAEF,EAGAX,EAAY,UAAY,eACvB,MAAI,CAAA,UAAWsB,EAAY,MAC1B,SAAA3C,EAAA,IAAC4C,EAAA,CACC,QAAS,CACP,CACE,QAAQ,OACR,MAAO,GACP,MAAO,QACP,MAAO,GACP,UAAWC,EAAY,WACvB,UAAW,CAACC,EAAMC,IAAQ/C,EAAA,IAACgD,EAAA,CACzB,UAAWH,EAAY,mBACvB,QAAS,CACP,CAAC,MAAOrB,EAAE,QAAQ,EAAG,KAAK,WAAY,QAAQ,IAAIK,EAAK,OAAOkB,EAAI,IAAI,CAAC,EACvE,CAAC,MAAOvB,EAAE,UAAU,EAAG,KAAK,SAAU,QAAQ,IAAIK,EAAK,WAAWkB,EAAI,IAAI,CAAC,CAC7E,EAEE,SAAA/C,EAAAA,IAACiD,EAAK,CAAA,KAAM,WAAa,CAAA,CAAA,CAC3B,CACJ,EACA,CACE,MAAMzB,EAAE,WAAW,EACnB,QAAQ,OACR,SAAU,IACV,MAAO,QACP,MAAM,GACN,UAAW,CAACsB,EAAcC,IAAS/C,EAAAA,IAAAgB,EAAA,CAAK,UAAWd,EAAI,KAAM,GAAI,QAAQ6C,EAAI,KAAQ,SAAKD,EAAA,CAC5F,EACA,CACE,MAAMtB,EAAE,WAAW,EACnB,QAAQ,OACR,SAAU,IACV,MAAO,QACP,MAAM,GACN,UAAW,CAACd,EAAMqC,IAAQ/C,EAAAA,IAAC,KAAE,UAAWE,EAAI,KAAM,KAAM6C,GAAA,YAAAA,EAAK,IAAK,OAAO,SAAS,IAAI,aAAc,SAAKrC,EAAA,CAC3G,EACA,CACE,MAAMc,EAAE,cAAc,EACtB,QAAQ,mBACR,SAAU,IACV,MAAO,QACP,MAAM,EACR,EACA,CACE,MAAMA,EAAE,gBAAgB,EACxB,QAAQ,SACR,SAAU,IACV,MAAO,QACP,MAAM,GACN,UAAYf,GAAWT,EAAAA,IAACkD,GAAU,OAAAzC,CAA2C,CAAA,CAC/E,CACF,EACA,cAAe,IACf,UAAW,GACX,UAAW,IACX,aAAcP,EAAI,GAClB,iBAAkBwB,EAClB,WAAYI,EACZ,UAAW5B,EAAI,WAAA,CAAA,EAEnB,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,CAAC"}